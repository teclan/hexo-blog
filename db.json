{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/jacman/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.eot","path":"font/fontdiao.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.ttf","path":"font/fontdiao.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.woff","path":"font/fontdiao.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","path":"img/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","path":"img/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc.svg","path":"img/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nd.svg","path":"img/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-sa.svg","path":"img/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-zero.svg","path":"img/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by.svg","path":"img/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/jacman.jpg","path":"img/jacman.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/scrollup.png","path":"img/scrollup.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","path":"js/jquery.qrcode-0.12.0.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.svg","path":"font/fontdiao.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/jacman/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1503062247258},{"_id":"themes/jacman/LICENSE","hash":"931516aa36c53eb7843c83d82662eb50cc3c4367","modified":1503062247258},{"_id":"themes/jacman/README.md","hash":"832d77c14b7bf0ac5e949fcca46ab57a3af3ec91","modified":1503062247258},{"_id":"themes/jacman/README_zh.md","hash":"41480e35a26cdd26da09a39c5c25b377887eadcb","modified":1503062247258},{"_id":"themes/jacman/_config.yml","hash":"563a91cc8146e19b788e665cc26a8f38898b5679","modified":1503062247258},{"_id":"source/_posts/AngularJS-常见错误及解决办法.md","hash":"776ef2613dbbab1f8d0410940572d4c01f232f7d","modified":1503062247254},{"_id":"source/_posts/CentOS-常见操作记录.md","hash":"d029233e2dcfdf6a114ed5d523ee158c25916125","modified":1503062247254},{"_id":"source/_posts/Hexo-Github-pages-搭建博客.md","hash":"5c5d8a1f10141cea49e4e3130a8f0e03b5cc90de","modified":1503062247254},{"_id":"source/_posts/JavaWeb部署.md","hash":"bc2ac6c9b9b2b6d0e0d31ba6ca359bc6c24532ff","modified":1503062247254},{"_id":"source/_posts/Jekyll-Github-pages-搭建博客.md","hash":"776bd51f7668ba3390db33c5ed16a0e1892781ef","modified":1503062247254},{"_id":"source/_posts/Mavn打包记录.md","hash":"a506ba2c27e48663be7da573298fc078d7dfbf96","modified":1503062247254},{"_id":"source/_posts/Ruby-安装.md","hash":"70fc797796db33c05643f90bf9c215ef11b288df","modified":1503062247254},{"_id":"source/_posts/eclipse在Ubuntu16-04下不正常工作的问题.md","hash":"36c4ded33ce8545fe6b524fd4c270adbe34ce6a2","modified":1503062247254},{"_id":"source/_posts/linux-常见命令.md","hash":"98eeac91ff070c6de0051f4f0f1ce33359791c37","modified":1503062247254},{"_id":"source/_posts/linux-装机必备.md","hash":"46ebeb31fa29c7ce82759c48199649a7e88a1966","modified":1503062247258},{"_id":"source/_posts/maven多模块.md","hash":"69bb0877fefa542392db5f8b6bf916199b689863","modified":1503062247258},{"_id":"source/_posts/mysql-中文乱码问题.md","hash":"a90d78c51aad8fa8c09409efc1d95eea0932bbf6","modified":1503064658328},{"_id":"source/_posts/oracle-数据库常见异常与配置.md","hash":"43a91741a087ecd09d0824c2e49a020ad3be1a60","modified":1503064588891},{"_id":"source/_posts/oracle学习笔记.md","hash":"6a3a4d401872cc698875025e963c6ea3c4423df5","modified":1503062247258},{"_id":"source/_posts/shadowsocks配置.md","hash":"e9245b1f05914a60b9e5cb0c87e6f5a71877ccca","modified":1503062247258},{"_id":"source/_posts/ubuntu-java-开发环境搭建.md","hash":"2da091a5ff1d979e43404b39c06f4084aec9a838","modified":1503062247258},{"_id":"source/_posts/vim-常用命令.md","hash":"8eec31f7b1553325987b0c3bf8c794dd1e5e5d51","modified":1503062247258},{"_id":"source/_posts/命令行使用shadowsocks全局代理.md","hash":"9218321b2e3565ab21843db2e2519d14a1e68c50","modified":1503062247258},{"_id":"source/_posts/数据库安装记录.md","hash":"1817ff8371381a450d7c7d34fbd9a37096543d8f","modified":1503062247258},{"_id":"source/_posts/常见数据库操作SQL.md","hash":"7e966ddfded6e88639155611f0accca87b2887a9","modified":1503062247258},{"_id":"themes/jacman/languages/default.yml","hash":"eea72d6138497287c0b3f4bd93e4f6f62b7aff37","modified":1503062247258},{"_id":"themes/jacman/languages/zh-CN.yml","hash":"1f3b9d00dd4322352b0c9c82a76dc9865a616d41","modified":1503062247258},{"_id":"themes/jacman/languages/zh-TW.yml","hash":"61a02ba818d641579a86fcd7f5926ab1e6ab5f70","modified":1503062247258},{"_id":"themes/jacman/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1503062247258},{"_id":"themes/jacman/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1503062247258},{"_id":"themes/jacman/layout/layout.ejs","hash":"5b4289a4526899809b9c2facea535367ff51ba2b","modified":1503062247258},{"_id":"themes/jacman/layout/page.ejs","hash":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1503062247258},{"_id":"themes/jacman/layout/post.ejs","hash":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1503062247258},{"_id":"themes/jacman/layout/index.ejs","hash":"75cef2172c286994af412e11ab7f4f5a0daaf1f5","modified":1503062247258},{"_id":"themes/jacman/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1503062247258},{"_id":"themes/jacman/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/analytics.ejs","hash":"697601996220fe0a0f9cd628be67dec3c86ae2aa","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/after_footer.ejs","hash":"c703b0c25139b8a5f8f9d24a334a07905e2b7987","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/archive.ejs","hash":"2c7395e7563fe016521712a645c28a13f952d52a","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/categories.ejs","hash":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/article.ejs","hash":"261ecacb8456f4cb972632b6a9103860fa63b9a3","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/footer.ejs","hash":"5f80bf6c6ddcf8c28c4599cd1540b14b25d54f18","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/head.ejs","hash":"761941be4922cd3c177c8130296b909bf7db5c09","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/header.ejs","hash":"18515612344ff048b9372b91b7eef6f3b143801f","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/pagination.ejs","hash":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/mathjax.ejs","hash":"d42994ac696f52ba99c1cbac382cd76d5b04a3e8","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/article_row.ejs","hash":"4cb855d91ece7f67b2ca0992fffa55472d0b9c93","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/search.ejs","hash":"1083824a6c6c3df02767f2f3b727aee78ebb76ec","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/sidebar.ejs","hash":"c4f527fff0070fbe65919053a16224412317f40d","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/tags.ejs","hash":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/tinysou_search.ejs","hash":"06ecddc8a9d40b480fe2e958af1dab857a9d5441","modified":1503062247258},{"_id":"themes/jacman/layout/_widget/archive.ejs","hash":"39ea6b7888406fbd1b4cf236ebd718e881493374","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/totop.ejs","hash":"bea5bb7cb9350b8af7d97a8d223af63a5b30ab78","modified":1503062247258},{"_id":"themes/jacman/layout/_widget/category.ejs","hash":"c1fae96b5053da021bcc04ab2ce5c2c8d30de8a2","modified":1503062247258},{"_id":"themes/jacman/layout/_widget/douban.ejs","hash":"e3820c36169e88663e6c9177666b2904c1ce47e6","modified":1503062247258},{"_id":"themes/jacman/layout/_widget/github-card.ejs","hash":"5c759b6ea214bac56a393247de27e67ce73fb33f","modified":1503062247258},{"_id":"themes/jacman/layout/_widget/links.ejs","hash":"e49868063439c2092cdf9a8ec82cc295b0e42f66","modified":1503062247258},{"_id":"themes/jacman/layout/_widget/rss.ejs","hash":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1503062247258},{"_id":"themes/jacman/layout/_widget/weibo.ejs","hash":"a31c2b223d0feb2a227e203cac9e5d13b7d328a8","modified":1503062247258},{"_id":"themes/jacman/layout/_widget/tagcloud.ejs","hash":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1503062247258},{"_id":"themes/jacman/layout/_widget/tag.ejs","hash":"7e82ad9c916b9ce871b2f65ce8f283c5ba47947b","modified":1503062247258},{"_id":"themes/jacman/source/css/style.styl","hash":"a0a45af186a72ae68979bf26f2a5d0d2303189ca","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1503062247258},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1503062247258},{"_id":"themes/jacman/source/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1503062247258},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1503062247262},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1503062247262},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1503062247262},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1503062247262},{"_id":"themes/jacman/source/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1503062247262},{"_id":"themes/jacman/source/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1503062247262},{"_id":"themes/jacman/source/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1503062247262},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1503062247262},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1503062247262},{"_id":"themes/jacman/source/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1503062247262},{"_id":"themes/jacman/source/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1503062247262},{"_id":"themes/jacman/source/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1503062247262},{"_id":"themes/jacman/source/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1503062247262},{"_id":"themes/jacman/source/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1503062247262},{"_id":"themes/jacman/source/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1503062247262},{"_id":"themes/jacman/source/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1503062247262},{"_id":"themes/jacman/source/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1503062247262},{"_id":"themes/jacman/source/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1503062247262},{"_id":"themes/jacman/source/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1503062247262},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1503062247266},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1503062247266},{"_id":"themes/jacman/source/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1503062247266},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1503062247262},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1503062247262},{"_id":"themes/jacman/source/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1503062247262},{"_id":"themes/jacman/source/img/logo.png","hash":"fd08d12d1fa147cf894e8f8327e38f1758de32ed","modified":1503062247262},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1503062247266},{"_id":"themes/jacman/layout/_partial/post/article.ejs","hash":"fead7cf61e9be69b0eda882d0f5bd3911b457b0f","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/post/footer.ejs","hash":"b12ec08a5845a3d8c01257614f1dfead879c87d2","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/post/comment.ejs","hash":"c88bc8f5805173920a5fdd7e9234a850e3d8e151","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/post/gallery.ejs","hash":"fafc2501d7e65983b0f5c2b58151ca12e57c0574","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/post/header.ejs","hash":"36a705942b691abe0d643ea8afa339981b32f6f2","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/post/catetags.ejs","hash":"0e37bababc8f4659f5b59a552a946b46d89e4158","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/post/jiathis.ejs","hash":"d7f5960039ac74924559ab6ba03c64457b8f0966","modified":1503062247258},{"_id":"themes/jacman/layout/_partial/post/pagination.ejs","hash":"7de9c07a4c968429a8088c31a28b7f3a993ded1b","modified":1503062247258},{"_id":"themes/jacman/source/css/_base/font.styl","hash":"c8a0faf43b08e37ad07a5669db76d595da966159","modified":1503062247258},{"_id":"themes/jacman/source/css/_base/public.styl","hash":"f016180726019927b9a835ed01e04d153f27a149","modified":1503062247258},{"_id":"themes/jacman/source/css/_partial/article.styl","hash":"c69641b4a34a8c62986b335414413dbde26de25e","modified":1503062247258},{"_id":"themes/jacman/source/css/_partial/duoshuo.styl","hash":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1503062247258},{"_id":"themes/jacman/source/css/_base/variable.styl","hash":"cb652eb83c28a208743fabab92de896f8b7cbf7b","modified":1503062247258},{"_id":"themes/jacman/source/css/_partial/aside.styl","hash":"506fde1d67ce750452cbe84bee01a19c7d027c5e","modified":1503062247258},{"_id":"themes/jacman/source/css/_partial/footer.styl","hash":"1911613a19b605a58f801c21b03b5d4c83b90f9c","modified":1503062247258},{"_id":"themes/jacman/source/css/_partial/gallery.styl","hash":"7246809f4ce3166ec1b259bf475cae1a48e29aad","modified":1503062247258},{"_id":"themes/jacman/source/css/_partial/header.styl","hash":"5121ceb712be3f2dde98b8b6e589b546e19eab8f","modified":1503062247258},{"_id":"themes/jacman/source/css/_partial/helper.styl","hash":"1136600932b97534b88465bf05ef313630b2de3d","modified":1503062247258},{"_id":"themes/jacman/source/css/_partial/totop.styl","hash":"96363d7c5aaed5f649667fc0752a62620a67e872","modified":1503062247258},{"_id":"themes/jacman/source/css/_partial/index.styl","hash":"a72ff14effd276015264f870f47ed8f8413bf5d3","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1503062247258},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1503062247258},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1503062247262},{"_id":"themes/jacman/source/css/_base/highlight/theme.styl","hash":"e3a59bd427ba37a54ead9eeba9a5356b3f720a48","modified":1503062247258},{"_id":"themes/jacman/source/css/_base/highlight/highlight.styl","hash":"91b62bfc58390b0d5db782a75be6965ee3665eb3","modified":1503062247258},{"_id":"public/archives/index.html","hash":"02d74a1db8169acee11a23453a25fb664c98af26","modified":1503065889959},{"_id":"public/archives/page/2/index.html","hash":"ae63d1971c721de04f11552371853cad0f17752c","modified":1503065889959},{"_id":"public/archives/2016/index.html","hash":"03471d8335bc7c1297c41f86f9c4afbc5e864dba","modified":1503065889959},{"_id":"public/archives/2016/page/2/index.html","hash":"52e1d6889ee04f8ffc3eed687f4de3b7e64dd8e6","modified":1503065889959},{"_id":"public/archives/2016/07/index.html","hash":"30258e863ab31ca06730986be649aadc38a91a14","modified":1503065889959},{"_id":"public/archives/2016/08/index.html","hash":"3664f1667625770007881f785cf6b925aec00f62","modified":1503065889959},{"_id":"public/archives/2016/10/index.html","hash":"32479d8aa88166298269073959dd3dd819c2293b","modified":1503065889959},{"_id":"public/archives/2016/11/index.html","hash":"e838e12bd17c5b41296e4310f23c9d3989b75e21","modified":1503065889959},{"_id":"public/archives/2016/12/index.html","hash":"7bfc798e6a9ea0d65ce32ab317513977f0d017ef","modified":1503065889959},{"_id":"public/index.html","hash":"f943ea36fd68da701106612d73742b5bfb7c7f03","modified":1503065889959},{"_id":"public/page/2/index.html","hash":"592b78c0f06f76afee783e671a9840d347d5d940","modified":1503065889959},{"_id":"public/tags/CentOS/index.html","hash":"e8027293627b0598ad6c614693165ace8d0af6b4","modified":1503065889946},{"_id":"public/tags/AngularJS/index.html","hash":"529baab6068a5416a9c797a81e48fd1521066cc9","modified":1503065889955},{"_id":"public/tags/Hexo/index.html","hash":"78d6b4f8c81450986226c2e5a80e47dadd63aeed","modified":1503065889957},{"_id":"public/tags/Github-pages/index.html","hash":"97e70eb78b3f9de96268afd7411bb4ed3f2e7f8d","modified":1503065889957},{"_id":"public/tags/Jekyll/index.html","hash":"9b799aebe7eb4abf4b07220315eace9ae4e9e3d7","modified":1503065889957},{"_id":"public/tags/tomcat/index.html","hash":"c0e0bcb20ff691ecd3582da48b201293eb1253a2","modified":1503065889957},{"_id":"public/tags/jetty/index.html","hash":"923ab1ae1ebe20508f580d34e2035d4f540b48fd","modified":1503065889957},{"_id":"public/tags/sparkjava/index.html","hash":"e37b60b71ba5493bd765364ede7964ea9015bed8","modified":1503065889957},{"_id":"public/tags/ruby/index.html","hash":"7b1237dc00c24eead2d29e87da41fe0b41cf0b24","modified":1503065889957},{"_id":"public/tags/eclipse/index.html","hash":"c9d4dcb52c1621bd7712ca9c7690fda2d182fae8","modified":1503065889957},{"_id":"public/tags/ubuntu/index.html","hash":"be86f9d88aaeafc3082f4cc4619c36c4e57ca0e5","modified":1503065889957},{"_id":"public/tags/Maven/index.html","hash":"e0c8ae32d15e573b5b3e085b170bb4ca1f077933","modified":1503065889957},{"_id":"public/tags/打包/index.html","hash":"82bf985412a9f3714c5174667ef37b72e8e46f11","modified":1503065889957},{"_id":"public/tags/maven/index.html","hash":"aa8130ea26d85e17d98fc4098f7aaffaebcdbe03","modified":1503065889957},{"_id":"public/tags/linux/index.html","hash":"38ee3ddb2851bcb606edb052a78c4f23d53886fb","modified":1503065889958},{"_id":"public/tags/mysql/index.html","hash":"3bcfe86d32b89ae434ea4d062ca7117ec51b3050","modified":1503065889958},{"_id":"public/tags/oh-my-zsh/index.html","hash":"6e0f67ebfa8606b798df526ebbb285e8bc81cff8","modified":1503065889958},{"_id":"public/tags/编码/index.html","hash":"fe081de62b4e9a23b8cbbb96b069f5abfeaa0f3c","modified":1503065889958},{"_id":"public/tags/oracle/index.html","hash":"94b767adb1d5d78c5fed99888d0a2540576da72d","modified":1503065889958},{"_id":"public/tags/shadowsocks/index.html","hash":"18eb5f688df36f5e2885eaace361bdcaf30edf33","modified":1503065889958},{"_id":"public/tags/java/index.html","hash":"e16607f7808b1e99cca9ef635cc0b75615add334","modified":1503065889958},{"_id":"public/tags/ssh/index.html","hash":"dd5b9711227b725e303cec9b294c28a53e768c3b","modified":1503065889958},{"_id":"public/tags/git/index.html","hash":"618891d369c7ee4872a8c5a909f0aedf7d265b6e","modified":1503065889958},{"_id":"public/tags/vim/index.html","hash":"286eabf414449761e1b796ba1dd9c5b6c69701fa","modified":1503065889958},{"_id":"public/tags/kingbase/index.html","hash":"c269e59f5d891880952b1f76cff920b683bd240d","modified":1503065889958},{"_id":"public/tags/Oracle/index.html","hash":"5257d6605e6df8165859e9e3db5da1575de85e40","modified":1503065889958},{"_id":"public/tags/达梦/index.html","hash":"bc66da95fbf25bfa7c56e5d4af89ed8716712601","modified":1503065889959},{"_id":"public/tags/sqlserver2k/index.html","hash":"691c64358336b974769a8eb88c9c9abcb5edb596","modified":1503065889959},{"_id":"public/tags/DB2/index.html","hash":"8e3667bdc322fb6cadc4f47e872f78707fb6d6e8","modified":1503065889959},{"_id":"public/2016/12/26/Ruby-安装/index.html","hash":"c2e77bc278375dd388a5df15858a356d94c0d41f","modified":1503065889960},{"_id":"public/2016/12/26/CentOS-常见操作记录/index.html","hash":"6b2e5321d9a20f56a6f37196fbee4787eb43735a","modified":1503065889960},{"_id":"public/2016/12/26/AngularJS-常见错误及解决办法/index.html","hash":"1ec3a7be3df1214a58aaebcef28e5973da0d2666","modified":1503065889960},{"_id":"public/2016/12/21/命令行使用shadowsocks全局代理/index.html","hash":"e5c0bd635c64223aa7e9e827e8acb4117e36706e","modified":1503065889960},{"_id":"public/2016/12/01/JavaWeb部署/index.html","hash":"8362064cc9d1a199f24450adac63029f1161939e","modified":1503065889960},{"_id":"public/2016/11/03/linux-装机必备/index.html","hash":"7b3ea57e3c03e040f7b390b8713732b08be686c4","modified":1503065889960},{"_id":"public/2016/10/09/oracle学习笔记/index.html","hash":"2b7d491ab54e5914e522e8f639ae3a6d41605f47","modified":1503065889960},{"_id":"public/2016/08/31/数据库安装记录/index.html","hash":"3b0e5c3f18c8ce8930c6e55ae4c64e2118ba3be8","modified":1503065889960},{"_id":"public/2016/08/29/mysql-中文乱码问题/index.html","hash":"4ba76b7147bc8ec25da336d6594e36005fadff6a","modified":1503065889960},{"_id":"public/2016/08/06/vim-常用命令/index.html","hash":"13643b5172f9cf9bdee05ca5bfe9f63b46d9ea50","modified":1503065889960},{"_id":"public/2016/07/15/常见数据库操作SQL/index.html","hash":"d18b07dd52461341c00638da5f20c232b0778aec","modified":1503065889960},{"_id":"public/2016/07/12/ubuntu-java-开发环境搭建/index.html","hash":"cd1fe165e189387d67ac38256f682496bd2cd6f1","modified":1503065889960},{"_id":"public/2016/07/09/linux-常见命令/index.html","hash":"d63e7daabfdf238649f5ee75ce69aaaaf43cff40","modified":1503065889960},{"_id":"public/2016/07/07/maven多模块/index.html","hash":"59d309a4868785d3be69d9e9d938c7aa7560e114","modified":1503065889960},{"_id":"public/2016/07/06/shadowsocks配置/index.html","hash":"d3ea88e121550aa60dc0d232a6f6c4dd47e30bc6","modified":1503065889960},{"_id":"public/2016/07/04/Mavn打包记录/index.html","hash":"8b8200769864a183809956e02c37b5ab0ef4f08f","modified":1503065889960},{"_id":"public/2016/07/04/eclipse在Ubuntu16-04下不正常工作的问题/index.html","hash":"5edbecd2d4db84c1b87cbae9b76ce0b910ceee15","modified":1503065889961},{"_id":"public/2016/07/03/Jekyll-Github-pages-搭建博客/index.html","hash":"63c65bcd7c4205b3c44b8306e052220e78949cd4","modified":1503065889961},{"_id":"public/2016/07/03/Hexo-Github-pages-搭建博客/index.html","hash":"5d2a12d15a6ffa9d1a587359f21e6358d3131e32","modified":1503065889961},{"_id":"public/archives/2017/index.html","hash":"186b72f634e470a30fdb114c63484c07c001ae09","modified":1503065889959},{"_id":"public/archives/2017/06/index.html","hash":"11ecde52be518a531164539916cf1d2589417aeb","modified":1503065889959},{"_id":"public/2017/06/20/oracle-数据库常见异常与配置/index.html","hash":"08410b84ff7f4ffb5726105d6061952dc86878b1","modified":1503065889959},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1503062973492},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1503062973492},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1503062973492},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1503062973492},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1503062973492},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1503062973492},{"_id":"public/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1503062973492},{"_id":"public/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1503062973492},{"_id":"public/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1503062973492},{"_id":"public/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1503062973492},{"_id":"public/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1503062973492},{"_id":"public/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1503062973492},{"_id":"public/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1503062973492},{"_id":"public/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1503062973492},{"_id":"public/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1503062973492},{"_id":"public/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1503062973492},{"_id":"public/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1503062973492},{"_id":"public/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1503062973492},{"_id":"public/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1503062973492},{"_id":"public/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1503062973492},{"_id":"public/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1503062973492},{"_id":"public/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1503062973492},{"_id":"public/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1503062973493},{"_id":"public/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1503062973493},{"_id":"public/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1503062973493},{"_id":"public/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1503062973493},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1503062973493},{"_id":"public/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1503062973975},{"_id":"public/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1503062973977},{"_id":"public/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1503062973977},{"_id":"public/img/logo.png","hash":"fd08d12d1fa147cf894e8f8327e38f1758de32ed","modified":1503062973977},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1503062973982},{"_id":"public/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1503062973982},{"_id":"public/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1503062973982},{"_id":"public/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1503062973982},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1503062973982},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1503062973982},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1503062973982},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1503062973982},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1503062973983},{"_id":"public/css/style.css","hash":"3a8e6a464e3d2e343b0a7647665674f20da73394","modified":1503062973983},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1503062973983},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1503062973983},{"_id":"public/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1503062973983},{"_id":"public/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1503062973983},{"_id":"public/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1503062973984},{"_id":"public/tags/授权/index.html","hash":"b5236d15777050c34866f0a86d16d9a4762f6f50","modified":1503064009706},{"_id":"public/tags/ORA-01653/index.html","hash":"5d3fe8db0a0fa1ee045a8235dc56d4c8b3300095","modified":1503064124869},{"_id":"public/tags/ORA-12519/index.html","hash":"2c434d96a83004b0e5c09ec47a6c406f8c154bc2","modified":1503064124869},{"_id":"public/tags/ORA-06512/index.html","hash":"b6bbdf007207dee7a9f69a68219a8e12c718b07f","modified":1503064124869},{"_id":"source/_posts/DB2常见错误与解决方案.md","hash":"bba41cda468933b04f67349f55e4f945c60ea471","modified":1503064521297},{"_id":"public/archives/page/3/index.html","hash":"6da742e57c75bf1f5c4e50797033d753011507c7","modified":1503065889959},{"_id":"public/archives/2017/08/index.html","hash":"f83cdd7bc7c9b4fb829111018bd7a1ce10502fab","modified":1503065889959},{"_id":"public/page/3/index.html","hash":"dc67a56dfbd0f1ee29ecff3a663155fadd94c594","modified":1503065889959},{"_id":"public/tags/db2cmd/index.html","hash":"98954bad97855653624675bfc0e61e796b609604","modified":1503064375955},{"_id":"public/tags/964/index.html","hash":"fb8b0699aef6ab9656fe9e3b7ac1d0ca4cb74b1d","modified":1503064375955},{"_id":"public/2017/08/18/DB2常见错误与解决方案/index.html","hash":"3715146e98095260f9311c8edf87d6c5fb267f97","modified":1503065889959},{"_id":"public/tags/乱码/index.html","hash":"4824647ae79f4a90b6abcabf9e1e43df353802e3","modified":1503065889959},{"_id":"source/_posts/oracle重做日志分析.md","hash":"cf54aa4d66f3aa175032ae62c1d271c257352512","modified":1503065871117},{"_id":"public/tags/日志/index.html","hash":"183bdfa081ce6bd5fceee4c5f5ce4af43d1c83e4","modified":1503065889966},{"_id":"public/2017/08/18/oracle重做日志分析/index.html","hash":"7d202d1bdba2381ecc47e8856b709286c11c550f","modified":1503065889966}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"CentOS 常见操作记录","date":"2016-12-26T01:42:55.000Z","_content":"# 网络配置\n## ip配置\n网络配置文件路径:\n```\n/etc/sysconfig/network-scripts\n```\n例如：ifcfg-eth1，内容如下：\n```\nDEVICE=eth1\nBOOTPROTO=\"static\"\nIPADDR=\"172.19.1.70\"\nBROADCAST=\"172.19.1.255\"\nGATEWAY=\"172.19.1.1\"\nHWADDR=\"6C:0B:84:41:54:CD\"\nTYPE=Ethernet\nONBOOT=yes\nNM_CONTROLLED=yes\nNETMASK=\"255.255.255.0\"\n```\n，其中HWADDR必须为实际的MAC地址，可通过以下命令查看：\n```\nifconfig\n```\n## hosts文件配置\n文件路径:\n```\n/etc/hosts\n```\n# 启用图形化界面\n在命令行输入以下命令\n```\nstartx\n```\n设置开机默认进入图形化界面,修改配置文件 /etc/inittab，将 3 改成 5，原始文件\n```\n# inittab is only used by upstart for the default runlevel.\n#\n# ADDING OTHER CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.\n#\n# System initialization is started by /etc/init/rcS.conf\n#\n# Individual runlevels are started by /etc/init/rc.conf\n#\n# Ctrl-Alt-Delete is handled by /etc/init/control-alt-delete.conf\n#\n# Terminal gettys are handled by /etc/init/tty.conf and /etc/init/serial.conf,\n# with configuration in /etc/sysconfig/init.\n#\n# For information on how to write upstart event handlers, or how\n# upstart works, see init(5), init(8), and initctl(8).\n#\n# Default runlevel. The runlevels used are:\n#   0 - halt (Do NOT set initdefault to this)\n#   1 - Single user mode\n#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)\n#   3 - Full multiuser mode\n#   4 - unused\n#   5 - X11\n#   6 - reboot (Do NOT set initdefault to this)\n#\nid:3:initdefault:                \n```\n修改后的文件\n```\n# inittab is only used by upstart for the default runlevel.\n#\n# ADDING OTHER CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.\n#\n# System initialization is started by /etc/init/rcS.conf\n#\n# Individual runlevels are started by /etc/init/rc.conf\n#\n# Ctrl-Alt-Delete is handled by /etc/init/control-alt-delete.conf\n#\n# Terminal gettys are handled by /etc/init/tty.conf and /etc/init/serial.conf,\n# with configuration in /etc/sysconfig/init.\n#\n# For information on how to write upstart event handlers, or how\n# upstart works, see init(5), init(8), and initctl(8).\n#\n# Default runlevel. The runlevels used are:\n#   0 - halt (Do NOT set initdefault to this)\n#   1 - Single user mode\n#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)\n#   3 - Full multiuser mode\n#   4 - unused\n#   5 - X11\n#   6 - reboot (Do NOT set initdefault to this)\n#\nid:5:initdefault:              \n```\n","source":"_posts/CentOS-常见操作记录.md","raw":"---\ntitle: CentOS 常见操作记录\ndate: 2016-12-26 09:42:55\ntags: [CentOS]\n---\n# 网络配置\n## ip配置\n网络配置文件路径:\n```\n/etc/sysconfig/network-scripts\n```\n例如：ifcfg-eth1，内容如下：\n```\nDEVICE=eth1\nBOOTPROTO=\"static\"\nIPADDR=\"172.19.1.70\"\nBROADCAST=\"172.19.1.255\"\nGATEWAY=\"172.19.1.1\"\nHWADDR=\"6C:0B:84:41:54:CD\"\nTYPE=Ethernet\nONBOOT=yes\nNM_CONTROLLED=yes\nNETMASK=\"255.255.255.0\"\n```\n，其中HWADDR必须为实际的MAC地址，可通过以下命令查看：\n```\nifconfig\n```\n## hosts文件配置\n文件路径:\n```\n/etc/hosts\n```\n# 启用图形化界面\n在命令行输入以下命令\n```\nstartx\n```\n设置开机默认进入图形化界面,修改配置文件 /etc/inittab，将 3 改成 5，原始文件\n```\n# inittab is only used by upstart for the default runlevel.\n#\n# ADDING OTHER CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.\n#\n# System initialization is started by /etc/init/rcS.conf\n#\n# Individual runlevels are started by /etc/init/rc.conf\n#\n# Ctrl-Alt-Delete is handled by /etc/init/control-alt-delete.conf\n#\n# Terminal gettys are handled by /etc/init/tty.conf and /etc/init/serial.conf,\n# with configuration in /etc/sysconfig/init.\n#\n# For information on how to write upstart event handlers, or how\n# upstart works, see init(5), init(8), and initctl(8).\n#\n# Default runlevel. The runlevels used are:\n#   0 - halt (Do NOT set initdefault to this)\n#   1 - Single user mode\n#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)\n#   3 - Full multiuser mode\n#   4 - unused\n#   5 - X11\n#   6 - reboot (Do NOT set initdefault to this)\n#\nid:3:initdefault:                \n```\n修改后的文件\n```\n# inittab is only used by upstart for the default runlevel.\n#\n# ADDING OTHER CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.\n#\n# System initialization is started by /etc/init/rcS.conf\n#\n# Individual runlevels are started by /etc/init/rc.conf\n#\n# Ctrl-Alt-Delete is handled by /etc/init/control-alt-delete.conf\n#\n# Terminal gettys are handled by /etc/init/tty.conf and /etc/init/serial.conf,\n# with configuration in /etc/sysconfig/init.\n#\n# For information on how to write upstart event handlers, or how\n# upstart works, see init(5), init(8), and initctl(8).\n#\n# Default runlevel. The runlevels used are:\n#   0 - halt (Do NOT set initdefault to this)\n#   1 - Single user mode\n#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)\n#   3 - Full multiuser mode\n#   4 - unused\n#   5 - X11\n#   6 - reboot (Do NOT set initdefault to this)\n#\nid:5:initdefault:              \n```\n","slug":"CentOS-常见操作记录","published":1,"updated":"2017-08-18T13:17:27.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw810000jeh8vz8468gc","content":"<h1 id=\"网络配置\"><a href=\"#网络配置\" class=\"headerlink\" title=\"网络配置\"></a>网络配置</h1><h2 id=\"ip配置\"><a href=\"#ip配置\" class=\"headerlink\" title=\"ip配置\"></a>ip配置</h2><p>网络配置文件路径:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/sysconfig/network-scripts</div></pre></td></tr></table></figure></p>\n<p>例如：ifcfg-eth1，内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">DEVICE=eth1</div><div class=\"line\">BOOTPROTO=&quot;static&quot;</div><div class=\"line\">IPADDR=&quot;172.19.1.70&quot;</div><div class=\"line\">BROADCAST=&quot;172.19.1.255&quot;</div><div class=\"line\">GATEWAY=&quot;172.19.1.1&quot;</div><div class=\"line\">HWADDR=&quot;6C:0B:84:41:54:CD&quot;</div><div class=\"line\">TYPE=Ethernet</div><div class=\"line\">ONBOOT=yes</div><div class=\"line\">NM_CONTROLLED=yes</div><div class=\"line\">NETMASK=&quot;255.255.255.0&quot;</div></pre></td></tr></table></figure></p>\n<p>，其中HWADDR必须为实际的MAC地址，可通过以下命令查看：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifconfig</div></pre></td></tr></table></figure></p>\n<h2 id=\"hosts文件配置\"><a href=\"#hosts文件配置\" class=\"headerlink\" title=\"hosts文件配置\"></a>hosts文件配置</h2><p>文件路径:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/hosts</div></pre></td></tr></table></figure></p>\n<h1 id=\"启用图形化界面\"><a href=\"#启用图形化界面\" class=\"headerlink\" title=\"启用图形化界面\"></a>启用图形化界面</h1><p>在命令行输入以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">startx</div></pre></td></tr></table></figure></p>\n<p>设置开机默认进入图形化界面,修改配置文件 /etc/inittab，将 3 改成 5，原始文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"># inittab is only used by upstart for the default runlevel.</div><div class=\"line\">#</div><div class=\"line\"># ADDING OTHER CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.</div><div class=\"line\">#</div><div class=\"line\"># System initialization is started by /etc/init/rcS.conf</div><div class=\"line\">#</div><div class=\"line\"># Individual runlevels are started by /etc/init/rc.conf</div><div class=\"line\">#</div><div class=\"line\"># Ctrl-Alt-Delete is handled by /etc/init/control-alt-delete.conf</div><div class=\"line\">#</div><div class=\"line\"># Terminal gettys are handled by /etc/init/tty.conf and /etc/init/serial.conf,</div><div class=\"line\"># with configuration in /etc/sysconfig/init.</div><div class=\"line\">#</div><div class=\"line\"># For information on how to write upstart event handlers, or how</div><div class=\"line\"># upstart works, see init(5), init(8), and initctl(8).</div><div class=\"line\">#</div><div class=\"line\"># Default runlevel. The runlevels used are:</div><div class=\"line\">#   0 - halt (Do NOT set initdefault to this)</div><div class=\"line\">#   1 - Single user mode</div><div class=\"line\">#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)</div><div class=\"line\">#   3 - Full multiuser mode</div><div class=\"line\">#   4 - unused</div><div class=\"line\">#   5 - X11</div><div class=\"line\">#   6 - reboot (Do NOT set initdefault to this)</div><div class=\"line\">#</div><div class=\"line\">id:3:initdefault:</div></pre></td></tr></table></figure></p>\n<p>修改后的文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"># inittab is only used by upstart for the default runlevel.</div><div class=\"line\">#</div><div class=\"line\"># ADDING OTHER CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.</div><div class=\"line\">#</div><div class=\"line\"># System initialization is started by /etc/init/rcS.conf</div><div class=\"line\">#</div><div class=\"line\"># Individual runlevels are started by /etc/init/rc.conf</div><div class=\"line\">#</div><div class=\"line\"># Ctrl-Alt-Delete is handled by /etc/init/control-alt-delete.conf</div><div class=\"line\">#</div><div class=\"line\"># Terminal gettys are handled by /etc/init/tty.conf and /etc/init/serial.conf,</div><div class=\"line\"># with configuration in /etc/sysconfig/init.</div><div class=\"line\">#</div><div class=\"line\"># For information on how to write upstart event handlers, or how</div><div class=\"line\"># upstart works, see init(5), init(8), and initctl(8).</div><div class=\"line\">#</div><div class=\"line\"># Default runlevel. The runlevels used are:</div><div class=\"line\">#   0 - halt (Do NOT set initdefault to this)</div><div class=\"line\">#   1 - Single user mode</div><div class=\"line\">#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)</div><div class=\"line\">#   3 - Full multiuser mode</div><div class=\"line\">#   4 - unused</div><div class=\"line\">#   5 - X11</div><div class=\"line\">#   6 - reboot (Do NOT set initdefault to this)</div><div class=\"line\">#</div><div class=\"line\">id:5:initdefault:</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h1 id=\"网络配置\"><a href=\"#网络配置\" class=\"headerlink\" title=\"网络配置\"></a>网络配置</h1><h2 id=\"ip配置\"><a href=\"#ip配置\" class=\"headerlink\" title=\"ip配置\"></a>ip配置</h2><p>网络配置文件路径:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/sysconfig/network-scripts</div></pre></td></tr></table></figure></p>\n<p>例如：ifcfg-eth1，内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">DEVICE=eth1</div><div class=\"line\">BOOTPROTO=&quot;static&quot;</div><div class=\"line\">IPADDR=&quot;172.19.1.70&quot;</div><div class=\"line\">BROADCAST=&quot;172.19.1.255&quot;</div><div class=\"line\">GATEWAY=&quot;172.19.1.1&quot;</div><div class=\"line\">HWADDR=&quot;6C:0B:84:41:54:CD&quot;</div><div class=\"line\">TYPE=Ethernet</div><div class=\"line\">ONBOOT=yes</div><div class=\"line\">NM_CONTROLLED=yes</div><div class=\"line\">NETMASK=&quot;255.255.255.0&quot;</div></pre></td></tr></table></figure></p>\n<p>，其中HWADDR必须为实际的MAC地址，可通过以下命令查看：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifconfig</div></pre></td></tr></table></figure></p>\n<h2 id=\"hosts文件配置\"><a href=\"#hosts文件配置\" class=\"headerlink\" title=\"hosts文件配置\"></a>hosts文件配置</h2><p>文件路径:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/hosts</div></pre></td></tr></table></figure></p>\n<h1 id=\"启用图形化界面\"><a href=\"#启用图形化界面\" class=\"headerlink\" title=\"启用图形化界面\"></a>启用图形化界面</h1><p>在命令行输入以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">startx</div></pre></td></tr></table></figure></p>\n<p>设置开机默认进入图形化界面,修改配置文件 /etc/inittab，将 3 改成 5，原始文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"># inittab is only used by upstart for the default runlevel.</div><div class=\"line\">#</div><div class=\"line\"># ADDING OTHER CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.</div><div class=\"line\">#</div><div class=\"line\"># System initialization is started by /etc/init/rcS.conf</div><div class=\"line\">#</div><div class=\"line\"># Individual runlevels are started by /etc/init/rc.conf</div><div class=\"line\">#</div><div class=\"line\"># Ctrl-Alt-Delete is handled by /etc/init/control-alt-delete.conf</div><div class=\"line\">#</div><div class=\"line\"># Terminal gettys are handled by /etc/init/tty.conf and /etc/init/serial.conf,</div><div class=\"line\"># with configuration in /etc/sysconfig/init.</div><div class=\"line\">#</div><div class=\"line\"># For information on how to write upstart event handlers, or how</div><div class=\"line\"># upstart works, see init(5), init(8), and initctl(8).</div><div class=\"line\">#</div><div class=\"line\"># Default runlevel. The runlevels used are:</div><div class=\"line\">#   0 - halt (Do NOT set initdefault to this)</div><div class=\"line\">#   1 - Single user mode</div><div class=\"line\">#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)</div><div class=\"line\">#   3 - Full multiuser mode</div><div class=\"line\">#   4 - unused</div><div class=\"line\">#   5 - X11</div><div class=\"line\">#   6 - reboot (Do NOT set initdefault to this)</div><div class=\"line\">#</div><div class=\"line\">id:3:initdefault:</div></pre></td></tr></table></figure></p>\n<p>修改后的文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"># inittab is only used by upstart for the default runlevel.</div><div class=\"line\">#</div><div class=\"line\"># ADDING OTHER CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.</div><div class=\"line\">#</div><div class=\"line\"># System initialization is started by /etc/init/rcS.conf</div><div class=\"line\">#</div><div class=\"line\"># Individual runlevels are started by /etc/init/rc.conf</div><div class=\"line\">#</div><div class=\"line\"># Ctrl-Alt-Delete is handled by /etc/init/control-alt-delete.conf</div><div class=\"line\">#</div><div class=\"line\"># Terminal gettys are handled by /etc/init/tty.conf and /etc/init/serial.conf,</div><div class=\"line\"># with configuration in /etc/sysconfig/init.</div><div class=\"line\">#</div><div class=\"line\"># For information on how to write upstart event handlers, or how</div><div class=\"line\"># upstart works, see init(5), init(8), and initctl(8).</div><div class=\"line\">#</div><div class=\"line\"># Default runlevel. The runlevels used are:</div><div class=\"line\">#   0 - halt (Do NOT set initdefault to this)</div><div class=\"line\">#   1 - Single user mode</div><div class=\"line\">#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)</div><div class=\"line\">#   3 - Full multiuser mode</div><div class=\"line\">#   4 - unused</div><div class=\"line\">#   5 - X11</div><div class=\"line\">#   6 - reboot (Do NOT set initdefault to this)</div><div class=\"line\">#</div><div class=\"line\">id:5:initdefault:</div></pre></td></tr></table></figure></p>\n"},{"title":"AngularJS 常见错误及解决办法","date":"2016-12-26T01:40:12.000Z","_content":"\n### 1、启动时错误\n 当执行 npm start (或 cnpm start )时，出现以下错误时\n ```\nnpm ERR! Linux 4.4.0-51-generic\nnpm ERR! argv \"/home/dev/Apps/node-v6.9.2/bin/node\" \"/home/dev/Apps/node-v6.9.2/lib/node_modules/cnpm/node_modules/.bin/npm\" \"--userconfig=/home/dev/.cnpmrc\" \"--disturl=https://npm.taobao.org/mirrors/node\" \"--registry=https://registry.npm.taobao.org\" \"start\"\nnpm ERR! node v6.9.2\nnpm ERR! npm  v3.10.10\nnpm ERR! code ELIFECYCLE\nnpm ERR! angular-quickstart@1.0.0 start: `tsc && concurrently \"tsc -w\" \"lite-server\" `\nnpm ERR! Exit status 2\nnpm ERR!\nnpm ERR! Failed at the angular-quickstart@1.0.0 start script 'tsc && concurrently \"tsc -w\" \"lite-server\" '.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the angular-quickstart package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     tsc && concurrently \"tsc -w\" \"lite-server\"\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR!     npm bugs angular-quickstart\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR!     npm owner ls angular-quickstart\nnpm ERR! There is likely additional logging output above.\nnpm WARN Local package.json exists, but node_modules missing, did you mean to install?\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /home/dev/workspace/teclan/Angular/angularjs-learning/npm-debug.log\n\n ```\n 将 package.json 中的\n ```\n \"start\": \"tsc && concurrently \\\"npm run tsc:w\\\" \\\"npm run lite\\\",\n ```\n 改成\n ```\n \"start\": \"concurrently \\\"npm run tsc:w\\\" \\\"npm run lite\\\" \",\n ```\n","source":"_posts/AngularJS-常见错误及解决办法.md","raw":"---\ntitle: AngularJS 常见错误及解决办法\ndate: 2016-12-26 09:40:12\ntags: [AngularJS]\n---\n\n### 1、启动时错误\n 当执行 npm start (或 cnpm start )时，出现以下错误时\n ```\nnpm ERR! Linux 4.4.0-51-generic\nnpm ERR! argv \"/home/dev/Apps/node-v6.9.2/bin/node\" \"/home/dev/Apps/node-v6.9.2/lib/node_modules/cnpm/node_modules/.bin/npm\" \"--userconfig=/home/dev/.cnpmrc\" \"--disturl=https://npm.taobao.org/mirrors/node\" \"--registry=https://registry.npm.taobao.org\" \"start\"\nnpm ERR! node v6.9.2\nnpm ERR! npm  v3.10.10\nnpm ERR! code ELIFECYCLE\nnpm ERR! angular-quickstart@1.0.0 start: `tsc && concurrently \"tsc -w\" \"lite-server\" `\nnpm ERR! Exit status 2\nnpm ERR!\nnpm ERR! Failed at the angular-quickstart@1.0.0 start script 'tsc && concurrently \"tsc -w\" \"lite-server\" '.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the angular-quickstart package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     tsc && concurrently \"tsc -w\" \"lite-server\"\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR!     npm bugs angular-quickstart\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR!     npm owner ls angular-quickstart\nnpm ERR! There is likely additional logging output above.\nnpm WARN Local package.json exists, but node_modules missing, did you mean to install?\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /home/dev/workspace/teclan/Angular/angularjs-learning/npm-debug.log\n\n ```\n 将 package.json 中的\n ```\n \"start\": \"tsc && concurrently \\\"npm run tsc:w\\\" \\\"npm run lite\\\",\n ```\n 改成\n ```\n \"start\": \"concurrently \\\"npm run tsc:w\\\" \\\"npm run lite\\\" \",\n ```\n","slug":"AngularJS-常见错误及解决办法","published":1,"updated":"2017-08-18T13:17:27.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw860001jeh8rqi58fzo","content":"<h3 id=\"1、启动时错误\"><a href=\"#1、启动时错误\" class=\"headerlink\" title=\"1、启动时错误\"></a>1、启动时错误</h3><p> 当执行 npm start (或 cnpm start )时，出现以下错误时<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm ERR! Linux 4.4.0-51-generic</div><div class=\"line\">npm ERR! argv &quot;/home/dev/Apps/node-v6.9.2/bin/node&quot; &quot;/home/dev/Apps/node-v6.9.2/lib/node_modules/cnpm/node_modules/.bin/npm&quot; &quot;--userconfig=/home/dev/.cnpmrc&quot; &quot;--disturl=https://npm.taobao.org/mirrors/node&quot; &quot;--registry=https://registry.npm.taobao.org&quot; &quot;start&quot;</div><div class=\"line\">npm ERR! node v6.9.2</div><div class=\"line\">npm ERR! npm  v3.10.10</div><div class=\"line\">npm ERR! code ELIFECYCLE</div><div class=\"line\">npm ERR! angular-quickstart@1.0.0 start: `tsc &amp;&amp; concurrently &quot;tsc -w&quot; &quot;lite-server&quot; `</div><div class=\"line\">npm ERR! Exit status 2</div><div class=\"line\">npm ERR!</div><div class=\"line\">npm ERR! Failed at the angular-quickstart@1.0.0 start script &apos;tsc &amp;&amp; concurrently &quot;tsc -w&quot; &quot;lite-server&quot; &apos;.</div><div class=\"line\">npm ERR! Make sure you have the latest version of node.js and npm installed.</div><div class=\"line\">npm ERR! If you do, this is most likely a problem with the angular-quickstart package,</div><div class=\"line\">npm ERR! not with npm itself.</div><div class=\"line\">npm ERR! Tell the author that this fails on your system:</div><div class=\"line\">npm ERR!     tsc &amp;&amp; concurrently &quot;tsc -w&quot; &quot;lite-server&quot;</div><div class=\"line\">npm ERR! You can get information on how to open an issue for this project with:</div><div class=\"line\">npm ERR!     npm bugs angular-quickstart</div><div class=\"line\">npm ERR! Or if that isn&apos;t available, you can get their info via:</div><div class=\"line\">npm ERR!     npm owner ls angular-quickstart</div><div class=\"line\">npm ERR! There is likely additional logging output above.</div><div class=\"line\">npm WARN Local package.json exists, but node_modules missing, did you mean to install?</div><div class=\"line\"></div><div class=\"line\">npm ERR! Please include the following file with any support request:</div><div class=\"line\">npm ERR!     /home/dev/workspace/teclan/Angular/angularjs-learning/npm-debug.log</div></pre></td></tr></table></figure></p>\n<p> 将 package.json 中的<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;start&quot;: &quot;tsc &amp;&amp; concurrently \\&quot;npm run tsc:w\\&quot; \\&quot;npm run lite\\&quot;,</div></pre></td></tr></table></figure></p>\n<p> 改成<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;start&quot;: &quot;concurrently \\&quot;npm run tsc:w\\&quot; \\&quot;npm run lite\\&quot; &quot;,</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h3 id=\"1、启动时错误\"><a href=\"#1、启动时错误\" class=\"headerlink\" title=\"1、启动时错误\"></a>1、启动时错误</h3><p> 当执行 npm start (或 cnpm start )时，出现以下错误时<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm ERR! Linux 4.4.0-51-generic</div><div class=\"line\">npm ERR! argv &quot;/home/dev/Apps/node-v6.9.2/bin/node&quot; &quot;/home/dev/Apps/node-v6.9.2/lib/node_modules/cnpm/node_modules/.bin/npm&quot; &quot;--userconfig=/home/dev/.cnpmrc&quot; &quot;--disturl=https://npm.taobao.org/mirrors/node&quot; &quot;--registry=https://registry.npm.taobao.org&quot; &quot;start&quot;</div><div class=\"line\">npm ERR! node v6.9.2</div><div class=\"line\">npm ERR! npm  v3.10.10</div><div class=\"line\">npm ERR! code ELIFECYCLE</div><div class=\"line\">npm ERR! angular-quickstart@1.0.0 start: `tsc &amp;&amp; concurrently &quot;tsc -w&quot; &quot;lite-server&quot; `</div><div class=\"line\">npm ERR! Exit status 2</div><div class=\"line\">npm ERR!</div><div class=\"line\">npm ERR! Failed at the angular-quickstart@1.0.0 start script &apos;tsc &amp;&amp; concurrently &quot;tsc -w&quot; &quot;lite-server&quot; &apos;.</div><div class=\"line\">npm ERR! Make sure you have the latest version of node.js and npm installed.</div><div class=\"line\">npm ERR! If you do, this is most likely a problem with the angular-quickstart package,</div><div class=\"line\">npm ERR! not with npm itself.</div><div class=\"line\">npm ERR! Tell the author that this fails on your system:</div><div class=\"line\">npm ERR!     tsc &amp;&amp; concurrently &quot;tsc -w&quot; &quot;lite-server&quot;</div><div class=\"line\">npm ERR! You can get information on how to open an issue for this project with:</div><div class=\"line\">npm ERR!     npm bugs angular-quickstart</div><div class=\"line\">npm ERR! Or if that isn&apos;t available, you can get their info via:</div><div class=\"line\">npm ERR!     npm owner ls angular-quickstart</div><div class=\"line\">npm ERR! There is likely additional logging output above.</div><div class=\"line\">npm WARN Local package.json exists, but node_modules missing, did you mean to install?</div><div class=\"line\"></div><div class=\"line\">npm ERR! Please include the following file with any support request:</div><div class=\"line\">npm ERR!     /home/dev/workspace/teclan/Angular/angularjs-learning/npm-debug.log</div></pre></td></tr></table></figure></p>\n<p> 将 package.json 中的<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;start&quot;: &quot;tsc &amp;&amp; concurrently \\&quot;npm run tsc:w\\&quot; \\&quot;npm run lite\\&quot;,</div></pre></td></tr></table></figure></p>\n<p> 改成<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;start&quot;: &quot;concurrently \\&quot;npm run tsc:w\\&quot; \\&quot;npm run lite\\&quot; &quot;,</div></pre></td></tr></table></figure></p>\n"},{"title":"Hexo Github pages 搭建博客","date":"2016-07-03T08:01:11.000Z","_content":"\n# 安装Nodejs\n[下载 Nodejs ](https://nodejs.org/en/)\n\n# 配置环境变量（ubuntu）\n\n在环境配置文件末尾添加（形如）：\n```bash\nNodejs=\"/path/to/nodejs\"   \nPATH=\"$Nodejs/bin/:....\"  \n```\n使配置生效：\n```bash\nsource .zshrc #具体配置文件根据自己情况指定\n```\n# 使用cnpm替换npm(npm需要扶墙)\n了解[淘宝源](https://npm.taobao.org)\n执行\n```bash\n$ npm install -g cnpm --registry=https://registry.npm.taobao.org\n```\n#安装Hexo\n```bash\n$ cnpm install -g hexo\n```\n#创建一个博客项目目录（例如：blog)\n在目录中执行\n```bash\n$ hexo init\n```\nHexo随后会自动在目标文件夹建立网站所需要的所有文件\n\n#部署\n```bash\n$ hexo g\n$ hexo s\n```\n如果没有错误，在浏览器输入localhost:4000即可查看，\n如果有错，访问[常见错误以及解决方法](https://hexo.io/docs/troubleshooting.html)\n\n# 设置主题\n[查看主题](https://hexo.io/themes)\n右键选择 主题 下方蓝色字体，选择“open new link in new tab”,打开主题项目\n克隆主题 例如：git clone git@github.com:Kaijun/hexo-theme-huxblog.git themes/hux\n在themes/hux下执行\n```bash\n$ npm install hexo-renderer-sass --save\n$ npm install hexo-renderer-jade --save\n```\n然后在根目录修改根目录中的 _config.yml 如下，将theme后面的文件名修改为hux，其他配置请查看主题目录下的README.md。\n重新部署即可，如果不生效，先clean\n```bash\n$ hexo clean\n$ hexo g\n$ hexo s\n```\n如果还有问题，请查看[常见错误以及解决方法](https://hexo.io/docs/troubleshooting.html)\n","source":"_posts/Hexo-Github-pages-搭建博客.md","raw":"---\ntitle: Hexo Github pages 搭建博客\ndate: 2016-07-03 16:01:11\ntags: [Hexo,Github-pages]\n---\n\n# 安装Nodejs\n[下载 Nodejs ](https://nodejs.org/en/)\n\n# 配置环境变量（ubuntu）\n\n在环境配置文件末尾添加（形如）：\n```bash\nNodejs=\"/path/to/nodejs\"   \nPATH=\"$Nodejs/bin/:....\"  \n```\n使配置生效：\n```bash\nsource .zshrc #具体配置文件根据自己情况指定\n```\n# 使用cnpm替换npm(npm需要扶墙)\n了解[淘宝源](https://npm.taobao.org)\n执行\n```bash\n$ npm install -g cnpm --registry=https://registry.npm.taobao.org\n```\n#安装Hexo\n```bash\n$ cnpm install -g hexo\n```\n#创建一个博客项目目录（例如：blog)\n在目录中执行\n```bash\n$ hexo init\n```\nHexo随后会自动在目标文件夹建立网站所需要的所有文件\n\n#部署\n```bash\n$ hexo g\n$ hexo s\n```\n如果没有错误，在浏览器输入localhost:4000即可查看，\n如果有错，访问[常见错误以及解决方法](https://hexo.io/docs/troubleshooting.html)\n\n# 设置主题\n[查看主题](https://hexo.io/themes)\n右键选择 主题 下方蓝色字体，选择“open new link in new tab”,打开主题项目\n克隆主题 例如：git clone git@github.com:Kaijun/hexo-theme-huxblog.git themes/hux\n在themes/hux下执行\n```bash\n$ npm install hexo-renderer-sass --save\n$ npm install hexo-renderer-jade --save\n```\n然后在根目录修改根目录中的 _config.yml 如下，将theme后面的文件名修改为hux，其他配置请查看主题目录下的README.md。\n重新部署即可，如果不生效，先clean\n```bash\n$ hexo clean\n$ hexo g\n$ hexo s\n```\n如果还有问题，请查看[常见错误以及解决方法](https://hexo.io/docs/troubleshooting.html)\n","slug":"Hexo-Github-pages-搭建博客","published":1,"updated":"2017-08-18T13:17:27.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw8c0003jeh8vk4hiz7x","content":"<h1 id=\"安装Nodejs\"><a href=\"#安装Nodejs\" class=\"headerlink\" title=\"安装Nodejs\"></a>安装Nodejs</h1><p><a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">下载 Nodejs </a></p>\n<h1 id=\"配置环境变量（ubuntu）\"><a href=\"#配置环境变量（ubuntu）\" class=\"headerlink\" title=\"配置环境变量（ubuntu）\"></a>配置环境变量（ubuntu）</h1><p>在环境配置文件末尾添加（形如）：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Nodejs=<span class=\"string\">\"/path/to/nodejs\"</span>   </div><div class=\"line\">PATH=<span class=\"string\">\"<span class=\"variable\">$Nodejs</span>/bin/:....\"</span></div></pre></td></tr></table></figure></p>\n<p>使配置生效：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">source</span> .zshrc <span class=\"comment\">#具体配置文件根据自己情况指定</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"使用cnpm替换npm-npm需要扶墙\"><a href=\"#使用cnpm替换npm-npm需要扶墙\" class=\"headerlink\" title=\"使用cnpm替换npm(npm需要扶墙)\"></a>使用cnpm替换npm(npm需要扶墙)</h1><p>了解<a href=\"https://npm.taobao.org\" target=\"_blank\" rel=\"external\">淘宝源</a><br>执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>\n<p>#安装Hexo<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cnpm install -g hexo</div></pre></td></tr></table></figure></p>\n<p>#创建一个博客项目目录（例如：blog)<br>在目录中执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure></p>\n<p>Hexo随后会自动在目标文件夹建立网站所需要的所有文件</p>\n<p>#部署<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure></p>\n<p>如果没有错误，在浏览器输入localhost:4000即可查看，<br>如果有错，访问<a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">常见错误以及解决方法</a></p>\n<h1 id=\"设置主题\"><a href=\"#设置主题\" class=\"headerlink\" title=\"设置主题\"></a>设置主题</h1><p><a href=\"https://hexo.io/themes\" target=\"_blank\" rel=\"external\">查看主题</a><br>右键选择 主题 下方蓝色字体，选择“open new link in new tab”,打开主题项目<br>克隆主题 例如：git clone git@github.com:Kaijun/hexo-theme-huxblog.git themes/hux<br>在themes/hux下执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-renderer-sass --save</div><div class=\"line\">$ npm install hexo-renderer-jade --save</div></pre></td></tr></table></figure></p>\n<p>然后在根目录修改根目录中的 _config.yml 如下，将theme后面的文件名修改为hux，其他配置请查看主题目录下的README.md。<br>重新部署即可，如果不生效，先clean<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure></p>\n<p>如果还有问题，请查看<a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">常见错误以及解决方法</a></p>\n","excerpt":"","more":"<h1 id=\"安装Nodejs\"><a href=\"#安装Nodejs\" class=\"headerlink\" title=\"安装Nodejs\"></a>安装Nodejs</h1><p><a href=\"https://nodejs.org/en/\">下载 Nodejs </a></p>\n<h1 id=\"配置环境变量（ubuntu）\"><a href=\"#配置环境变量（ubuntu）\" class=\"headerlink\" title=\"配置环境变量（ubuntu）\"></a>配置环境变量（ubuntu）</h1><p>在环境配置文件末尾添加（形如）：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Nodejs=<span class=\"string\">\"/path/to/nodejs\"</span>   </div><div class=\"line\">PATH=<span class=\"string\">\"<span class=\"variable\">$Nodejs</span>/bin/:....\"</span></div></pre></td></tr></table></figure></p>\n<p>使配置生效：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">source</span> .zshrc <span class=\"comment\">#具体配置文件根据自己情况指定</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"使用cnpm替换npm-npm需要扶墙\"><a href=\"#使用cnpm替换npm-npm需要扶墙\" class=\"headerlink\" title=\"使用cnpm替换npm(npm需要扶墙)\"></a>使用cnpm替换npm(npm需要扶墙)</h1><p>了解<a href=\"https://npm.taobao.org\">淘宝源</a><br>执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>\n<p>#安装Hexo<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cnpm install -g hexo</div></pre></td></tr></table></figure></p>\n<p>#创建一个博客项目目录（例如：blog)<br>在目录中执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure></p>\n<p>Hexo随后会自动在目标文件夹建立网站所需要的所有文件</p>\n<p>#部署<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure></p>\n<p>如果没有错误，在浏览器输入localhost:4000即可查看，<br>如果有错，访问<a href=\"https://hexo.io/docs/troubleshooting.html\">常见错误以及解决方法</a></p>\n<h1 id=\"设置主题\"><a href=\"#设置主题\" class=\"headerlink\" title=\"设置主题\"></a>设置主题</h1><p><a href=\"https://hexo.io/themes\">查看主题</a><br>右键选择 主题 下方蓝色字体，选择“open new link in new tab”,打开主题项目<br>克隆主题 例如：git clone git@github.com:Kaijun/hexo-theme-huxblog.git themes/hux<br>在themes/hux下执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-renderer-sass --save</div><div class=\"line\">$ npm install hexo-renderer-jade --save</div></pre></td></tr></table></figure></p>\n<p>然后在根目录修改根目录中的 _config.yml 如下，将theme后面的文件名修改为hux，其他配置请查看主题目录下的README.md。<br>重新部署即可，如果不生效，先clean<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure></p>\n<p>如果还有问题，请查看<a href=\"https://hexo.io/docs/troubleshooting.html\">常见错误以及解决方法</a></p>\n"},{"title":"Jekyll Github pages 搭建博客","date":"2016-07-03T09:04:37.000Z","_content":"\n# 安装Ruby\n [查看官网文档](https://www.ruby-lang.org/zh_cn/documentation/installation/)\n\n# 安装Gems\n [rubyGems官方文档](https://rubygems.org/pages/download)\n\n# 安装 Jekyll\n```bash\n$ gem install jekyll\n```\n# 简单测试\n```bash\n$ jekyll new my-awesome-site\n$ cd my-awesome-site\n$ path/to/my-awesome-site/jekyll serve\n```\n打开浏览器 http://localhost:4000 即可查看\n\n# 主题设置\n [挑选主题](http://jekyllthemes.org/)\n 克隆主题\n 在主题项目下执行\n ```bash\n $ bundle install\n $ jekyll serve\n ```\n 即可看到主题效果，查看READM.md修改相关配置，应用主题\n\n # 附：jekyll 搭建博客与 Hexo 不同，jekylly 需要提交整个项目到远程仓库\n","source":"_posts/Jekyll-Github-pages-搭建博客.md","raw":"---\ntitle: Jekyll Github pages 搭建博客\ndate: 2016-07-03 17:04:37\ntags: [Jekyll,Github-pages]\n---\n\n# 安装Ruby\n [查看官网文档](https://www.ruby-lang.org/zh_cn/documentation/installation/)\n\n# 安装Gems\n [rubyGems官方文档](https://rubygems.org/pages/download)\n\n# 安装 Jekyll\n```bash\n$ gem install jekyll\n```\n# 简单测试\n```bash\n$ jekyll new my-awesome-site\n$ cd my-awesome-site\n$ path/to/my-awesome-site/jekyll serve\n```\n打开浏览器 http://localhost:4000 即可查看\n\n# 主题设置\n [挑选主题](http://jekyllthemes.org/)\n 克隆主题\n 在主题项目下执行\n ```bash\n $ bundle install\n $ jekyll serve\n ```\n 即可看到主题效果，查看READM.md修改相关配置，应用主题\n\n # 附：jekyll 搭建博客与 Hexo 不同，jekylly 需要提交整个项目到远程仓库\n","slug":"Jekyll-Github-pages-搭建博客","published":1,"updated":"2017-08-18T13:17:27.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw8e0004jeh8327t1iuh","content":"<h1 id=\"安装Ruby\"><a href=\"#安装Ruby\" class=\"headerlink\" title=\"安装Ruby\"></a>安装Ruby</h1><p> <a href=\"https://www.ruby-lang.org/zh_cn/documentation/installation/\" target=\"_blank\" rel=\"external\">查看官网文档</a></p>\n<h1 id=\"安装Gems\"><a href=\"#安装Gems\" class=\"headerlink\" title=\"安装Gems\"></a>安装Gems</h1><p> <a href=\"https://rubygems.org/pages/download\" target=\"_blank\" rel=\"external\">rubyGems官方文档</a></p>\n<h1 id=\"安装-Jekyll\"><a href=\"#安装-Jekyll\" class=\"headerlink\" title=\"安装 Jekyll\"></a>安装 Jekyll</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ gem install jekyll</div></pre></td></tr></table></figure>\n<h1 id=\"简单测试\"><a href=\"#简单测试\" class=\"headerlink\" title=\"简单测试\"></a>简单测试</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ jekyll new my-awesome-site</div><div class=\"line\">$ <span class=\"built_in\">cd</span> my-awesome-site</div><div class=\"line\">$ path/to/my-awesome-site/jekyll serve</div></pre></td></tr></table></figure>\n<p>打开浏览器 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">http://localhost:4000</a> 即可查看</p>\n<h1 id=\"主题设置\"><a href=\"#主题设置\" class=\"headerlink\" title=\"主题设置\"></a>主题设置</h1><p> <a href=\"http://jekyllthemes.org/\" target=\"_blank\" rel=\"external\">挑选主题</a><br> 克隆主题<br> 在主题项目下执行<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ bundle install</div><div class=\"line\">$ jekyll serve</div></pre></td></tr></table></figure></p>\n<p> 即可看到主题效果，查看READM.md修改相关配置，应用主题</p>\n<h1 id=\"附：jekyll-搭建博客与-Hexo-不同，jekylly-需要提交整个项目到远程仓库\"><a href=\"#附：jekyll-搭建博客与-Hexo-不同，jekylly-需要提交整个项目到远程仓库\" class=\"headerlink\" title=\"附：jekyll 搭建博客与 Hexo 不同，jekylly 需要提交整个项目到远程仓库\"></a>附：jekyll 搭建博客与 Hexo 不同，jekylly 需要提交整个项目到远程仓库</h1>","excerpt":"","more":"<h1 id=\"安装Ruby\"><a href=\"#安装Ruby\" class=\"headerlink\" title=\"安装Ruby\"></a>安装Ruby</h1><p> <a href=\"https://www.ruby-lang.org/zh_cn/documentation/installation/\">查看官网文档</a></p>\n<h1 id=\"安装Gems\"><a href=\"#安装Gems\" class=\"headerlink\" title=\"安装Gems\"></a>安装Gems</h1><p> <a href=\"https://rubygems.org/pages/download\">rubyGems官方文档</a></p>\n<h1 id=\"安装-Jekyll\"><a href=\"#安装-Jekyll\" class=\"headerlink\" title=\"安装 Jekyll\"></a>安装 Jekyll</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ gem install jekyll</div></pre></td></tr></table></figure>\n<h1 id=\"简单测试\"><a href=\"#简单测试\" class=\"headerlink\" title=\"简单测试\"></a>简单测试</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ jekyll new my-awesome-site</div><div class=\"line\">$ <span class=\"built_in\">cd</span> my-awesome-site</div><div class=\"line\">$ path/to/my-awesome-site/jekyll serve</div></pre></td></tr></table></figure>\n<p>打开浏览器 <a href=\"http://localhost:4000\">http://localhost:4000</a> 即可查看</p>\n<h1 id=\"主题设置\"><a href=\"#主题设置\" class=\"headerlink\" title=\"主题设置\"></a>主题设置</h1><p> <a href=\"http://jekyllthemes.org/\">挑选主题</a><br> 克隆主题<br> 在主题项目下执行<br> <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ bundle install</div><div class=\"line\">$ jekyll serve</div></pre></td></tr></table></figure></p>\n<p> 即可看到主题效果，查看READM.md修改相关配置，应用主题</p>\n<h1 id=\"附：jekyll-搭建博客与-Hexo-不同，jekylly-需要提交整个项目到远程仓库\"><a href=\"#附：jekyll-搭建博客与-Hexo-不同，jekylly-需要提交整个项目到远程仓库\" class=\"headerlink\" title=\"附：jekyll 搭建博客与 Hexo 不同，jekylly 需要提交整个项目到远程仓库\"></a>附：jekyll 搭建博客与 Hexo 不同，jekylly 需要提交整个项目到远程仓库</h1>"},{"title":"JavaWeb部署","date":"2016-12-01T06:31:29.000Z","_content":"[示例项目](https://github.com/teclan/teclan-web)\n\n## JavaWeb 后台（JAVA程序）部署\n\n### 路由配置\n 必须实现 spark.servlet.SparkApplication，并且所有路由在\n\n init()方法中定义，否者部署时会报不是 Servlet 异常，具体路由\n\n 定义可以参考 [sparkjava](http://sparkjava.com/)\n```\npublic class Application implements SparkApplication {\n    @Override\n    public void init() {\n        get(\"/hello\", (req, res) -> \"Hello World\");\n        get(\"/hello/:name\", (request, response) -> {\n            return \"Hello: \" + request.params(\":name\");\n        });\n    }\n```\n\n### WEB配置文件\n在项目目录下创建 WEB-INF/web.xml，也可以在其他位置指定此文件（注意此文件的路径，后续需要用到），文件\n\n内容如下：\n```\n<web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n\tversion=\"3.0\">\n\t\t<filter>\n\t    <filter-name>SparkFilter</filter-name>\n\t    <filter-class>spark.servlet.SparkFilter</filter-class>\n\t    <init-param>\n\t        <param-name>applicationClass</param-name>\n\t        <!-- 此处是路由配置的完整路径名称，此程序配置如下 -->\n\t        <param-value>teclan.web.Application</param-value>\n\t    </init-param>\n\t</filter>\n\t<filter-mapping>\n\t    <filter-name>SparkFilter</filter-name>\n\t    <url-pattern>/*</url-pattern>\n\t</filter-mapping>\n</web-app>\n```\n\n### 项目配置\n以Maven项目为例，pom.xml配置如下:\n```\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<groupId>teclan.web</groupId>\n\t<artifactId>teclan-web</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<!-- 这里指定打包成 war 包 -->\n\t<packaging>war</packaging>\n\t<name>teclan-web</name>\n\t<url>http://maven.apache.org</url>\n\t<dependencies>\n\t   <!-- 这里添加项目的依赖 -->\n\t\t<dependency>\n\t\t\t<groupId>com.sparkjava</groupId>\n\t\t\t<artifactId>spark-core</artifactId>\n\t\t\t<version>2.5</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>ch.qos.logback</groupId>\n\t\t\t<artifactId>logback-classic</artifactId>\n\t\t\t<version>1.1.3</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>junit</groupId>\n\t\t\t<artifactId>junit</artifactId>\n\t\t\t<version>3.8.1</version>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t</dependencies>\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-war-plugin</artifactId>\n\t\t\t\t<version>2.1.1</version>\n\t\t\t\t<configuration>\n\t\t\t\t   <!-- 这里指定WEB配置文件，就是上一步的配置文件路径 -->\n\t\t\t\t\t<webXml>WEB-INF\\web.xml</webXml>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<version>3.1</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<source>1.8</source>\n\t\t\t\t\t<target>1.8</target>\n\t\t\t\t\t<encoding>UTF-8</encoding>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n</project>\n```\n### 打包\n\n执行以下命令打包，如果没有错误，在target下就会生成我们的 war 包，为后续使用方便，\n\n将war包改成一个简短的名字，例如 teclan.war。\n\n```\nmvn package -Dmaven.test.skip\n```\n\n### tomcat 部署\n\n将 teclan.war 包复制到 tomcat 的 webapps 目录下，将原来的其他的东西全部删除，\n如果在 linxu 下，在 tomcat 目录下执行\n```\nchmod +x bin/*sh\n```\n授予 bin 目录下的脚本执行权限，然后执行\n```\n./bin/startup.sh\n```\n即可启动 tomcat ,对于本示例，访问\nhttp://localhost:8080/teclan/hello\n即可映射到项目定义的 /hello 路由，返回 \"Hello World\",\n可以执行\n```\ntail -f logs/catalina.out\n```\n查看 tomcat实时日志\n访问的路由结构为: host:port/war-name/you-route\n如果需要更改端口，更改 conf/server.xml中以下片段的端口部分即可```\n  <Connector port=\"8080\" protocol=\"HTTP/1.1\"\n               connectionTimeout=\"20000\"\n               redirectPort=\"8443\" />\n```\n更改端口后可能需要 root 权限方可启动\n\n### jetty 部署\n\n将 teclan.war 包复制到 jetty 的 webapps 目录下，将原来的其他的东西全部删除，\n如果在 linxu 下，在 jetty 目录下执行\n```\njava -jar start.jar\n```\n即可启动 jetty ,对于本示例，访问\nhttp://localhost:8080/teclan/hello\n即可映射到项目定义的 /hello 路由，返回 \"Hello World\"\n如果需要更改端口，在 jetty/start.init 中添加\n```\njetty.http.port=更改后的端口\n```\n访问的路由结构为: host:port/war-name/you-route\n\n更改端口后可能需要 root 权限方可启动\n","source":"_posts/JavaWeb部署.md","raw":"---\ntitle: JavaWeb部署\ndate: 2016-12-01 14:31:29\ntags: [tomcat,jetty,sparkjava]\n---\n[示例项目](https://github.com/teclan/teclan-web)\n\n## JavaWeb 后台（JAVA程序）部署\n\n### 路由配置\n 必须实现 spark.servlet.SparkApplication，并且所有路由在\n\n init()方法中定义，否者部署时会报不是 Servlet 异常，具体路由\n\n 定义可以参考 [sparkjava](http://sparkjava.com/)\n```\npublic class Application implements SparkApplication {\n    @Override\n    public void init() {\n        get(\"/hello\", (req, res) -> \"Hello World\");\n        get(\"/hello/:name\", (request, response) -> {\n            return \"Hello: \" + request.params(\":name\");\n        });\n    }\n```\n\n### WEB配置文件\n在项目目录下创建 WEB-INF/web.xml，也可以在其他位置指定此文件（注意此文件的路径，后续需要用到），文件\n\n内容如下：\n```\n<web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n\tversion=\"3.0\">\n\t\t<filter>\n\t    <filter-name>SparkFilter</filter-name>\n\t    <filter-class>spark.servlet.SparkFilter</filter-class>\n\t    <init-param>\n\t        <param-name>applicationClass</param-name>\n\t        <!-- 此处是路由配置的完整路径名称，此程序配置如下 -->\n\t        <param-value>teclan.web.Application</param-value>\n\t    </init-param>\n\t</filter>\n\t<filter-mapping>\n\t    <filter-name>SparkFilter</filter-name>\n\t    <url-pattern>/*</url-pattern>\n\t</filter-mapping>\n</web-app>\n```\n\n### 项目配置\n以Maven项目为例，pom.xml配置如下:\n```\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<groupId>teclan.web</groupId>\n\t<artifactId>teclan-web</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<!-- 这里指定打包成 war 包 -->\n\t<packaging>war</packaging>\n\t<name>teclan-web</name>\n\t<url>http://maven.apache.org</url>\n\t<dependencies>\n\t   <!-- 这里添加项目的依赖 -->\n\t\t<dependency>\n\t\t\t<groupId>com.sparkjava</groupId>\n\t\t\t<artifactId>spark-core</artifactId>\n\t\t\t<version>2.5</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>ch.qos.logback</groupId>\n\t\t\t<artifactId>logback-classic</artifactId>\n\t\t\t<version>1.1.3</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>junit</groupId>\n\t\t\t<artifactId>junit</artifactId>\n\t\t\t<version>3.8.1</version>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t</dependencies>\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-war-plugin</artifactId>\n\t\t\t\t<version>2.1.1</version>\n\t\t\t\t<configuration>\n\t\t\t\t   <!-- 这里指定WEB配置文件，就是上一步的配置文件路径 -->\n\t\t\t\t\t<webXml>WEB-INF\\web.xml</webXml>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<version>3.1</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<source>1.8</source>\n\t\t\t\t\t<target>1.8</target>\n\t\t\t\t\t<encoding>UTF-8</encoding>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n</project>\n```\n### 打包\n\n执行以下命令打包，如果没有错误，在target下就会生成我们的 war 包，为后续使用方便，\n\n将war包改成一个简短的名字，例如 teclan.war。\n\n```\nmvn package -Dmaven.test.skip\n```\n\n### tomcat 部署\n\n将 teclan.war 包复制到 tomcat 的 webapps 目录下，将原来的其他的东西全部删除，\n如果在 linxu 下，在 tomcat 目录下执行\n```\nchmod +x bin/*sh\n```\n授予 bin 目录下的脚本执行权限，然后执行\n```\n./bin/startup.sh\n```\n即可启动 tomcat ,对于本示例，访问\nhttp://localhost:8080/teclan/hello\n即可映射到项目定义的 /hello 路由，返回 \"Hello World\",\n可以执行\n```\ntail -f logs/catalina.out\n```\n查看 tomcat实时日志\n访问的路由结构为: host:port/war-name/you-route\n如果需要更改端口，更改 conf/server.xml中以下片段的端口部分即可```\n  <Connector port=\"8080\" protocol=\"HTTP/1.1\"\n               connectionTimeout=\"20000\"\n               redirectPort=\"8443\" />\n```\n更改端口后可能需要 root 权限方可启动\n\n### jetty 部署\n\n将 teclan.war 包复制到 jetty 的 webapps 目录下，将原来的其他的东西全部删除，\n如果在 linxu 下，在 jetty 目录下执行\n```\njava -jar start.jar\n```\n即可启动 jetty ,对于本示例，访问\nhttp://localhost:8080/teclan/hello\n即可映射到项目定义的 /hello 路由，返回 \"Hello World\"\n如果需要更改端口，在 jetty/start.init 中添加\n```\njetty.http.port=更改后的端口\n```\n访问的路由结构为: host:port/war-name/you-route\n\n更改端口后可能需要 root 权限方可启动\n","slug":"JavaWeb部署","published":1,"updated":"2017-08-18T13:17:27.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw8h0006jeh8eak0pypd","content":"<p><a href=\"https://github.com/teclan/teclan-web\" target=\"_blank\" rel=\"external\">示例项目</a></p>\n<h2 id=\"JavaWeb-后台（JAVA程序）部署\"><a href=\"#JavaWeb-后台（JAVA程序）部署\" class=\"headerlink\" title=\"JavaWeb 后台（JAVA程序）部署\"></a>JavaWeb 后台（JAVA程序）部署</h2><h3 id=\"路由配置\"><a href=\"#路由配置\" class=\"headerlink\" title=\"路由配置\"></a>路由配置</h3><p> 必须实现 spark.servlet.SparkApplication，并且所有路由在</p>\n<p> init()方法中定义，否者部署时会报不是 Servlet 异常，具体路由</p>\n<p> 定义可以参考 <a href=\"http://sparkjava.com/\" target=\"_blank\" rel=\"external\">sparkjava</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class Application implements SparkApplication &#123;</div><div class=\"line\">    @Override</div><div class=\"line\">    public void init() &#123;</div><div class=\"line\">        get(&quot;/hello&quot;, (req, res) -&gt; &quot;Hello World&quot;);</div><div class=\"line\">        get(&quot;/hello/:name&quot;, (request, response) -&gt; &#123;</div><div class=\"line\">            return &quot;Hello: &quot; + request.params(&quot;:name&quot;);</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"WEB配置文件\"><a href=\"#WEB配置文件\" class=\"headerlink\" title=\"WEB配置文件\"></a>WEB配置文件</h3><p>在项目目录下创建 WEB-INF/web.xml，也可以在其他位置指定此文件（注意此文件的路径，后续需要用到），文件</p>\n<p>内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">\txmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;</div><div class=\"line\">\txsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</div><div class=\"line\">\tversion=&quot;3.0&quot;&gt;</div><div class=\"line\">\t\t&lt;filter&gt;</div><div class=\"line\">\t    &lt;filter-name&gt;SparkFilter&lt;/filter-name&gt;</div><div class=\"line\">\t    &lt;filter-class&gt;spark.servlet.SparkFilter&lt;/filter-class&gt;</div><div class=\"line\">\t    &lt;init-param&gt;</div><div class=\"line\">\t        &lt;param-name&gt;applicationClass&lt;/param-name&gt;</div><div class=\"line\">\t        &lt;!-- 此处是路由配置的完整路径名称，此程序配置如下 --&gt;</div><div class=\"line\">\t        &lt;param-value&gt;teclan.web.Application&lt;/param-value&gt;</div><div class=\"line\">\t    &lt;/init-param&gt;</div><div class=\"line\">\t&lt;/filter&gt;</div><div class=\"line\">\t&lt;filter-mapping&gt;</div><div class=\"line\">\t    &lt;filter-name&gt;SparkFilter&lt;/filter-name&gt;</div><div class=\"line\">\t    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class=\"line\">\t&lt;/filter-mapping&gt;</div><div class=\"line\">&lt;/web-app&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h3><p>以Maven项目为例，pom.xml配置如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">\txsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</div><div class=\"line\">\t&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class=\"line\">\t&lt;groupId&gt;teclan.web&lt;/groupId&gt;</div><div class=\"line\">\t&lt;artifactId&gt;teclan-web&lt;/artifactId&gt;</div><div class=\"line\">\t&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</div><div class=\"line\">\t&lt;!-- 这里指定打包成 war 包 --&gt;</div><div class=\"line\">\t&lt;packaging&gt;war&lt;/packaging&gt;</div><div class=\"line\">\t&lt;name&gt;teclan-web&lt;/name&gt;</div><div class=\"line\">\t&lt;url&gt;http://maven.apache.org&lt;/url&gt;</div><div class=\"line\">\t&lt;dependencies&gt;</div><div class=\"line\">\t   &lt;!-- 这里添加项目的依赖 --&gt;</div><div class=\"line\">\t\t&lt;dependency&gt;</div><div class=\"line\">\t\t\t&lt;groupId&gt;com.sparkjava&lt;/groupId&gt;</div><div class=\"line\">\t\t\t&lt;artifactId&gt;spark-core&lt;/artifactId&gt;</div><div class=\"line\">\t\t\t&lt;version&gt;2.5&lt;/version&gt;</div><div class=\"line\">\t\t&lt;/dependency&gt;</div><div class=\"line\">\t\t&lt;dependency&gt;</div><div class=\"line\">\t\t\t&lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</div><div class=\"line\">\t\t\t&lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</div><div class=\"line\">\t\t\t&lt;version&gt;1.1.3&lt;/version&gt;</div><div class=\"line\">\t\t&lt;/dependency&gt;</div><div class=\"line\">\t\t&lt;dependency&gt;</div><div class=\"line\">\t\t\t&lt;groupId&gt;junit&lt;/groupId&gt;</div><div class=\"line\">\t\t\t&lt;artifactId&gt;junit&lt;/artifactId&gt;</div><div class=\"line\">\t\t\t&lt;version&gt;3.8.1&lt;/version&gt;</div><div class=\"line\">\t\t\t&lt;scope&gt;test&lt;/scope&gt;</div><div class=\"line\">\t\t&lt;/dependency&gt;</div><div class=\"line\">\t&lt;/dependencies&gt;</div><div class=\"line\">\t&lt;build&gt;</div><div class=\"line\">\t\t&lt;plugins&gt;</div><div class=\"line\">\t\t\t&lt;plugin&gt;</div><div class=\"line\">\t\t\t\t&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class=\"line\">\t\t\t\t&lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;</div><div class=\"line\">\t\t\t\t&lt;version&gt;2.1.1&lt;/version&gt;</div><div class=\"line\">\t\t\t\t&lt;configuration&gt;</div><div class=\"line\">\t\t\t\t   &lt;!-- 这里指定WEB配置文件，就是上一步的配置文件路径 --&gt;</div><div class=\"line\">\t\t\t\t\t&lt;webXml&gt;WEB-INF\\web.xml&lt;/webXml&gt;</div><div class=\"line\">\t\t\t\t&lt;/configuration&gt;</div><div class=\"line\">\t\t\t&lt;/plugin&gt;</div><div class=\"line\">\t\t\t&lt;plugin&gt;</div><div class=\"line\">\t\t\t\t&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class=\"line\">\t\t\t\t&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</div><div class=\"line\">\t\t\t\t&lt;version&gt;3.1&lt;/version&gt;</div><div class=\"line\">\t\t\t\t&lt;configuration&gt;</div><div class=\"line\">\t\t\t\t\t&lt;source&gt;1.8&lt;/source&gt;</div><div class=\"line\">\t\t\t\t\t&lt;target&gt;1.8&lt;/target&gt;</div><div class=\"line\">\t\t\t\t\t&lt;encoding&gt;UTF-8&lt;/encoding&gt;</div><div class=\"line\">\t\t\t\t&lt;/configuration&gt;</div><div class=\"line\">\t\t\t&lt;/plugin&gt;</div><div class=\"line\">\t\t&lt;/plugins&gt;</div><div class=\"line\">\t&lt;/build&gt;</div><div class=\"line\">&lt;/project&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h3><p>执行以下命令打包，如果没有错误，在target下就会生成我们的 war 包，为后续使用方便，</p>\n<p>将war包改成一个简短的名字，例如 teclan.war。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn package -Dmaven.test.skip</div></pre></td></tr></table></figure>\n<h3 id=\"tomcat-部署\"><a href=\"#tomcat-部署\" class=\"headerlink\" title=\"tomcat 部署\"></a>tomcat 部署</h3><p>将 teclan.war 包复制到 tomcat 的 webapps 目录下，将原来的其他的东西全部删除，<br>如果在 linxu 下，在 tomcat 目录下执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x bin/*sh</div></pre></td></tr></table></figure></p>\n<p>授予 bin 目录下的脚本执行权限，然后执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./bin/startup.sh</div></pre></td></tr></table></figure></p>\n<p>即可启动 tomcat ,对于本示例，访问<br><a href=\"http://localhost:8080/teclan/hello\" target=\"_blank\" rel=\"external\">http://localhost:8080/teclan/hello</a><br>即可映射到项目定义的 /hello 路由，返回 “Hello World”,<br>可以执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tail -f logs/catalina.out</div></pre></td></tr></table></figure></p>\n<p>查看 tomcat实时日志<br>访问的路由结构为: host:port/war-name/you-route<br>如果需要更改端口，更改 conf/server.xml中以下片段的端口部分即可<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</div><div class=\"line\">             connectionTimeout=&quot;20000&quot;</div><div class=\"line\">             redirectPort=&quot;8443&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>更改端口后可能需要 root 权限方可启动</p>\n<h3 id=\"jetty-部署\"><a href=\"#jetty-部署\" class=\"headerlink\" title=\"jetty 部署\"></a>jetty 部署</h3><p>将 teclan.war 包复制到 jetty 的 webapps 目录下，将原来的其他的东西全部删除，<br>如果在 linxu 下，在 jetty 目录下执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">java -jar start.jar</div></pre></td></tr></table></figure></p>\n<p>即可启动 jetty ,对于本示例，访问<br><a href=\"http://localhost:8080/teclan/hello\" target=\"_blank\" rel=\"external\">http://localhost:8080/teclan/hello</a><br>即可映射到项目定义的 /hello 路由，返回 “Hello World”<br>如果需要更改端口，在 jetty/start.init 中添加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jetty.http.port=更改后的端口</div></pre></td></tr></table></figure></p>\n<p>访问的路由结构为: host:port/war-name/you-route</p>\n<p>更改端口后可能需要 root 权限方可启动</p>\n","excerpt":"","more":"<p><a href=\"https://github.com/teclan/teclan-web\">示例项目</a></p>\n<h2 id=\"JavaWeb-后台（JAVA程序）部署\"><a href=\"#JavaWeb-后台（JAVA程序）部署\" class=\"headerlink\" title=\"JavaWeb 后台（JAVA程序）部署\"></a>JavaWeb 后台（JAVA程序）部署</h2><h3 id=\"路由配置\"><a href=\"#路由配置\" class=\"headerlink\" title=\"路由配置\"></a>路由配置</h3><p> 必须实现 spark.servlet.SparkApplication，并且所有路由在</p>\n<p> init()方法中定义，否者部署时会报不是 Servlet 异常，具体路由</p>\n<p> 定义可以参考 <a href=\"http://sparkjava.com/\">sparkjava</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class Application implements SparkApplication &#123;</div><div class=\"line\">    @Override</div><div class=\"line\">    public void init() &#123;</div><div class=\"line\">        get(&quot;/hello&quot;, (req, res) -&gt; &quot;Hello World&quot;);</div><div class=\"line\">        get(&quot;/hello/:name&quot;, (request, response) -&gt; &#123;</div><div class=\"line\">            return &quot;Hello: &quot; + request.params(&quot;:name&quot;);</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"WEB配置文件\"><a href=\"#WEB配置文件\" class=\"headerlink\" title=\"WEB配置文件\"></a>WEB配置文件</h3><p>在项目目录下创建 WEB-INF/web.xml，也可以在其他位置指定此文件（注意此文件的路径，后续需要用到），文件</p>\n<p>内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">\txmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;</div><div class=\"line\">\txsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</div><div class=\"line\">\tversion=&quot;3.0&quot;&gt;</div><div class=\"line\">\t\t&lt;filter&gt;</div><div class=\"line\">\t    &lt;filter-name&gt;SparkFilter&lt;/filter-name&gt;</div><div class=\"line\">\t    &lt;filter-class&gt;spark.servlet.SparkFilter&lt;/filter-class&gt;</div><div class=\"line\">\t    &lt;init-param&gt;</div><div class=\"line\">\t        &lt;param-name&gt;applicationClass&lt;/param-name&gt;</div><div class=\"line\">\t        &lt;!-- 此处是路由配置的完整路径名称，此程序配置如下 --&gt;</div><div class=\"line\">\t        &lt;param-value&gt;teclan.web.Application&lt;/param-value&gt;</div><div class=\"line\">\t    &lt;/init-param&gt;</div><div class=\"line\">\t&lt;/filter&gt;</div><div class=\"line\">\t&lt;filter-mapping&gt;</div><div class=\"line\">\t    &lt;filter-name&gt;SparkFilter&lt;/filter-name&gt;</div><div class=\"line\">\t    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class=\"line\">\t&lt;/filter-mapping&gt;</div><div class=\"line\">&lt;/web-app&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"项目配置\"><a href=\"#项目配置\" class=\"headerlink\" title=\"项目配置\"></a>项目配置</h3><p>以Maven项目为例，pom.xml配置如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">\txsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</div><div class=\"line\">\t&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class=\"line\">\t&lt;groupId&gt;teclan.web&lt;/groupId&gt;</div><div class=\"line\">\t&lt;artifactId&gt;teclan-web&lt;/artifactId&gt;</div><div class=\"line\">\t&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</div><div class=\"line\">\t&lt;!-- 这里指定打包成 war 包 --&gt;</div><div class=\"line\">\t&lt;packaging&gt;war&lt;/packaging&gt;</div><div class=\"line\">\t&lt;name&gt;teclan-web&lt;/name&gt;</div><div class=\"line\">\t&lt;url&gt;http://maven.apache.org&lt;/url&gt;</div><div class=\"line\">\t&lt;dependencies&gt;</div><div class=\"line\">\t   &lt;!-- 这里添加项目的依赖 --&gt;</div><div class=\"line\">\t\t&lt;dependency&gt;</div><div class=\"line\">\t\t\t&lt;groupId&gt;com.sparkjava&lt;/groupId&gt;</div><div class=\"line\">\t\t\t&lt;artifactId&gt;spark-core&lt;/artifactId&gt;</div><div class=\"line\">\t\t\t&lt;version&gt;2.5&lt;/version&gt;</div><div class=\"line\">\t\t&lt;/dependency&gt;</div><div class=\"line\">\t\t&lt;dependency&gt;</div><div class=\"line\">\t\t\t&lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</div><div class=\"line\">\t\t\t&lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</div><div class=\"line\">\t\t\t&lt;version&gt;1.1.3&lt;/version&gt;</div><div class=\"line\">\t\t&lt;/dependency&gt;</div><div class=\"line\">\t\t&lt;dependency&gt;</div><div class=\"line\">\t\t\t&lt;groupId&gt;junit&lt;/groupId&gt;</div><div class=\"line\">\t\t\t&lt;artifactId&gt;junit&lt;/artifactId&gt;</div><div class=\"line\">\t\t\t&lt;version&gt;3.8.1&lt;/version&gt;</div><div class=\"line\">\t\t\t&lt;scope&gt;test&lt;/scope&gt;</div><div class=\"line\">\t\t&lt;/dependency&gt;</div><div class=\"line\">\t&lt;/dependencies&gt;</div><div class=\"line\">\t&lt;build&gt;</div><div class=\"line\">\t\t&lt;plugins&gt;</div><div class=\"line\">\t\t\t&lt;plugin&gt;</div><div class=\"line\">\t\t\t\t&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class=\"line\">\t\t\t\t&lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;</div><div class=\"line\">\t\t\t\t&lt;version&gt;2.1.1&lt;/version&gt;</div><div class=\"line\">\t\t\t\t&lt;configuration&gt;</div><div class=\"line\">\t\t\t\t   &lt;!-- 这里指定WEB配置文件，就是上一步的配置文件路径 --&gt;</div><div class=\"line\">\t\t\t\t\t&lt;webXml&gt;WEB-INF\\web.xml&lt;/webXml&gt;</div><div class=\"line\">\t\t\t\t&lt;/configuration&gt;</div><div class=\"line\">\t\t\t&lt;/plugin&gt;</div><div class=\"line\">\t\t\t&lt;plugin&gt;</div><div class=\"line\">\t\t\t\t&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class=\"line\">\t\t\t\t&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</div><div class=\"line\">\t\t\t\t&lt;version&gt;3.1&lt;/version&gt;</div><div class=\"line\">\t\t\t\t&lt;configuration&gt;</div><div class=\"line\">\t\t\t\t\t&lt;source&gt;1.8&lt;/source&gt;</div><div class=\"line\">\t\t\t\t\t&lt;target&gt;1.8&lt;/target&gt;</div><div class=\"line\">\t\t\t\t\t&lt;encoding&gt;UTF-8&lt;/encoding&gt;</div><div class=\"line\">\t\t\t\t&lt;/configuration&gt;</div><div class=\"line\">\t\t\t&lt;/plugin&gt;</div><div class=\"line\">\t\t&lt;/plugins&gt;</div><div class=\"line\">\t&lt;/build&gt;</div><div class=\"line\">&lt;/project&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h3><p>执行以下命令打包，如果没有错误，在target下就会生成我们的 war 包，为后续使用方便，</p>\n<p>将war包改成一个简短的名字，例如 teclan.war。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn package -Dmaven.test.skip</div></pre></td></tr></table></figure>\n<h3 id=\"tomcat-部署\"><a href=\"#tomcat-部署\" class=\"headerlink\" title=\"tomcat 部署\"></a>tomcat 部署</h3><p>将 teclan.war 包复制到 tomcat 的 webapps 目录下，将原来的其他的东西全部删除，<br>如果在 linxu 下，在 tomcat 目录下执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x bin/*sh</div></pre></td></tr></table></figure></p>\n<p>授予 bin 目录下的脚本执行权限，然后执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./bin/startup.sh</div></pre></td></tr></table></figure></p>\n<p>即可启动 tomcat ,对于本示例，访问<br><a href=\"http://localhost:8080/teclan/hello\">http://localhost:8080/teclan/hello</a><br>即可映射到项目定义的 /hello 路由，返回 “Hello World”,<br>可以执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tail -f logs/catalina.out</div></pre></td></tr></table></figure></p>\n<p>查看 tomcat实时日志<br>访问的路由结构为: host:port/war-name/you-route<br>如果需要更改端口，更改 conf/server.xml中以下片段的端口部分即可<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</div><div class=\"line\">             connectionTimeout=&quot;20000&quot;</div><div class=\"line\">             redirectPort=&quot;8443&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>更改端口后可能需要 root 权限方可启动</p>\n<h3 id=\"jetty-部署\"><a href=\"#jetty-部署\" class=\"headerlink\" title=\"jetty 部署\"></a>jetty 部署</h3><p>将 teclan.war 包复制到 jetty 的 webapps 目录下，将原来的其他的东西全部删除，<br>如果在 linxu 下，在 jetty 目录下执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">java -jar start.jar</div></pre></td></tr></table></figure></p>\n<p>即可启动 jetty ,对于本示例，访问<br><a href=\"http://localhost:8080/teclan/hello\">http://localhost:8080/teclan/hello</a><br>即可映射到项目定义的 /hello 路由，返回 “Hello World”<br>如果需要更改端口，在 jetty/start.init 中添加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jetty.http.port=更改后的端口</div></pre></td></tr></table></figure></p>\n<p>访问的路由结构为: host:port/war-name/you-route</p>\n<p>更改端口后可能需要 root 权限方可启动</p>\n"},{"title":"Ruby 安装","date":"2016-12-26T01:45:01.000Z","_content":"\n## 源码安装Ruby\n直接官网下载源码压缩包\n### 安装依赖\n```\nsudo apt-get install gcc g++ make automake autoconf curl-devel openssl-devel zlib-devel httpd-devel apr-devel apr-util-devel sqlite-devel\n\nsudo apt-get install ruby-rdoc ruby-devel\n```\n解压缩下载的ruby源码，进入压缩目录依次执行\n```\n./configure\nmake\nmake install\n```\n安装成功后执行以下命令查看安装的ruby版本\n```\nruby -v\n```\n\n\n\n可选rbenv安装或ruby-build安装\n## rbenv安装Ruby\n >点击[此处](https://github.com/rbenv/rbenv)访问项目或直接访问 https://github.com/rbenv/rbenv\n\n### 克隆rbenv源码&编译\n\n克隆 rbenv 至 ~/.rbenv （非root用户）\n```\n$ git clone https://github.com/rbenv/rbenv.git ~/.rbenv\n```\n\n### 编译\n```\n$ cd ~/.rbenv && src/configure && make -C src\n```\n### 配置环境变量\n以下 $HOME 表示当前用户的绝对路径，例如用户dev，$HOME则对应/home/dev\n#### centOS\n\n```\n$ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >>  ~/.bashrc\necho 'eval \"$(rbenv init -)\"' >> ~/.bashrc\nsource ~/.bashrc\n```\n#### Ubuntu\n```\n$ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.bashrc\necho 'eval \"$(rbenv init -)\"' >> ~/.bashrc\nsource ~/.bashrc\n```\n#### Zsh\n```\n$ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.zshrc\necho 'eval \"$(rbenv init -)\"' >> ~/.zshrc\nsource ~/.zshrc\n```\n### 初始化\n```\n~/.rbenv/bin/rbenv init\n```\n### 确认安装\n重启终端，执行\n```\ntype rbenv\n```\n输出如下\n```\nrbenv is hashed (/home/dev/.rbenv/bin/rbenv)\n```\n或\n```\nrbenv is a function\n```\n## 安装指定版本Ruby\n查看Ruby版本列表\n```\nrbenv install -l\n```\n找到需要的版本后执行 install，例如\n```\nrbenv install 2.0.0-p247\n```\n\n## 使用ruby-build安装Ruby\n[项目地址](https://github.com/rbenv/ruby-build) https://github.com/rbenv/ruby-buil\n\n ruby-build可以作为rbenv插件安装，也可作为独立的工具\n\n### 克隆源码（作为插件安装）\n```\ngit clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build\n```\n使配置生效（不同环境配置文件可能不同）\n```\nsource ~/.bashrc\n```\n### 作为独立工具\n```\ngit clone https://github.com/rbenv/ruby-build.git\ncd ruby-build\n./install.sh\n```\n#### 使用 ruby-build安装ruby\n```\nruby-build 2.2.0 ~/local/ruby-2.2.0\n```\n\n## 安装Gems\n### 直接安装\n安装Ruby之后，执行以下命令安装gems\n```\nsudo gem install bundler\n```\n执行以下命令查看安装gems版本\n```\ngem env home\n```\n### 源码安装\n[下载源码](https://www.ruby-lang.org/en/downloads/) https://www.ruby-lang.org/en/downloads/\n进入解压缩后的目录执行\n```\nruby setup.rb\n```\n","source":"_posts/Ruby-安装.md","raw":"---\ntitle: Ruby 安装\ndate: 2016-12-26 09:45:01\ntags: [ruby]\n---\n\n## 源码安装Ruby\n直接官网下载源码压缩包\n### 安装依赖\n```\nsudo apt-get install gcc g++ make automake autoconf curl-devel openssl-devel zlib-devel httpd-devel apr-devel apr-util-devel sqlite-devel\n\nsudo apt-get install ruby-rdoc ruby-devel\n```\n解压缩下载的ruby源码，进入压缩目录依次执行\n```\n./configure\nmake\nmake install\n```\n安装成功后执行以下命令查看安装的ruby版本\n```\nruby -v\n```\n\n\n\n可选rbenv安装或ruby-build安装\n## rbenv安装Ruby\n >点击[此处](https://github.com/rbenv/rbenv)访问项目或直接访问 https://github.com/rbenv/rbenv\n\n### 克隆rbenv源码&编译\n\n克隆 rbenv 至 ~/.rbenv （非root用户）\n```\n$ git clone https://github.com/rbenv/rbenv.git ~/.rbenv\n```\n\n### 编译\n```\n$ cd ~/.rbenv && src/configure && make -C src\n```\n### 配置环境变量\n以下 $HOME 表示当前用户的绝对路径，例如用户dev，$HOME则对应/home/dev\n#### centOS\n\n```\n$ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >>  ~/.bashrc\necho 'eval \"$(rbenv init -)\"' >> ~/.bashrc\nsource ~/.bashrc\n```\n#### Ubuntu\n```\n$ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.bashrc\necho 'eval \"$(rbenv init -)\"' >> ~/.bashrc\nsource ~/.bashrc\n```\n#### Zsh\n```\n$ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.zshrc\necho 'eval \"$(rbenv init -)\"' >> ~/.zshrc\nsource ~/.zshrc\n```\n### 初始化\n```\n~/.rbenv/bin/rbenv init\n```\n### 确认安装\n重启终端，执行\n```\ntype rbenv\n```\n输出如下\n```\nrbenv is hashed (/home/dev/.rbenv/bin/rbenv)\n```\n或\n```\nrbenv is a function\n```\n## 安装指定版本Ruby\n查看Ruby版本列表\n```\nrbenv install -l\n```\n找到需要的版本后执行 install，例如\n```\nrbenv install 2.0.0-p247\n```\n\n## 使用ruby-build安装Ruby\n[项目地址](https://github.com/rbenv/ruby-build) https://github.com/rbenv/ruby-buil\n\n ruby-build可以作为rbenv插件安装，也可作为独立的工具\n\n### 克隆源码（作为插件安装）\n```\ngit clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build\n```\n使配置生效（不同环境配置文件可能不同）\n```\nsource ~/.bashrc\n```\n### 作为独立工具\n```\ngit clone https://github.com/rbenv/ruby-build.git\ncd ruby-build\n./install.sh\n```\n#### 使用 ruby-build安装ruby\n```\nruby-build 2.2.0 ~/local/ruby-2.2.0\n```\n\n## 安装Gems\n### 直接安装\n安装Ruby之后，执行以下命令安装gems\n```\nsudo gem install bundler\n```\n执行以下命令查看安装gems版本\n```\ngem env home\n```\n### 源码安装\n[下载源码](https://www.ruby-lang.org/en/downloads/) https://www.ruby-lang.org/en/downloads/\n进入解压缩后的目录执行\n```\nruby setup.rb\n```\n","slug":"Ruby-安装","published":1,"updated":"2017-08-18T13:17:27.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw8i0008jeh8bjimwnpa","content":"<h2 id=\"源码安装Ruby\"><a href=\"#源码安装Ruby\" class=\"headerlink\" title=\"源码安装Ruby\"></a>源码安装Ruby</h2><p>直接官网下载源码压缩包</p>\n<h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install gcc g++ make automake autoconf curl-devel openssl-devel zlib-devel httpd-devel apr-devel apr-util-devel sqlite-devel</div><div class=\"line\"></div><div class=\"line\">sudo apt-get install ruby-rdoc ruby-devel</div></pre></td></tr></table></figure>\n<p>解压缩下载的ruby源码，进入压缩目录依次执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure></p>\n<p>安装成功后执行以下命令查看安装的ruby版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ruby -v</div></pre></td></tr></table></figure></p>\n<p>可选rbenv安装或ruby-build安装</p>\n<h2 id=\"rbenv安装Ruby\"><a href=\"#rbenv安装Ruby\" class=\"headerlink\" title=\"rbenv安装Ruby\"></a>rbenv安装Ruby</h2><blockquote>\n<p>点击<a href=\"https://github.com/rbenv/rbenv\" target=\"_blank\" rel=\"external\">此处</a>访问项目或直接访问 <a href=\"https://github.com/rbenv/rbenv\" target=\"_blank\" rel=\"external\">https://github.com/rbenv/rbenv</a></p>\n</blockquote>\n<h3 id=\"克隆rbenv源码-amp-编译\"><a href=\"#克隆rbenv源码-amp-编译\" class=\"headerlink\" title=\"克隆rbenv源码&amp;编译\"></a>克隆rbenv源码&amp;编译</h3><p>克隆 rbenv 至 ~/.rbenv （非root用户）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/rbenv/rbenv.git ~/.rbenv</div></pre></td></tr></table></figure></p>\n<h3 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd ~/.rbenv &amp;&amp; src/configure &amp;&amp; make -C src</div></pre></td></tr></table></figure>\n<h3 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h3><p>以下 $HOME 表示当前用户的绝对路径，例如用户dev，$HOME则对应/home/dev</p>\n<h4 id=\"centOS\"><a href=\"#centOS\" class=\"headerlink\" title=\"centOS\"></a>centOS</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ echo &apos;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&apos; &gt;&gt;  ~/.bashrc</div><div class=\"line\">echo &apos;eval &quot;$(rbenv init -)&quot;&apos; &gt;&gt; ~/.bashrc</div><div class=\"line\">source ~/.bashrc</div></pre></td></tr></table></figure>\n<h4 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ echo &apos;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&apos; &gt;&gt; ~/.bashrc</div><div class=\"line\">echo &apos;eval &quot;$(rbenv init -)&quot;&apos; &gt;&gt; ~/.bashrc</div><div class=\"line\">source ~/.bashrc</div></pre></td></tr></table></figure>\n<h4 id=\"Zsh\"><a href=\"#Zsh\" class=\"headerlink\" title=\"Zsh\"></a>Zsh</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ echo &apos;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&apos; &gt;&gt; ~/.zshrc</div><div class=\"line\">echo &apos;eval &quot;$(rbenv init -)&quot;&apos; &gt;&gt; ~/.zshrc</div><div class=\"line\">source ~/.zshrc</div></pre></td></tr></table></figure>\n<h3 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~/.rbenv/bin/rbenv init</div></pre></td></tr></table></figure>\n<h3 id=\"确认安装\"><a href=\"#确认安装\" class=\"headerlink\" title=\"确认安装\"></a>确认安装</h3><p>重启终端，执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">type rbenv</div></pre></td></tr></table></figure></p>\n<p>输出如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rbenv is hashed (/home/dev/.rbenv/bin/rbenv)</div></pre></td></tr></table></figure></p>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rbenv is a function</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装指定版本Ruby\"><a href=\"#安装指定版本Ruby\" class=\"headerlink\" title=\"安装指定版本Ruby\"></a>安装指定版本Ruby</h2><p>查看Ruby版本列表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rbenv install -l</div></pre></td></tr></table></figure></p>\n<p>找到需要的版本后执行 install，例如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rbenv install 2.0.0-p247</div></pre></td></tr></table></figure></p>\n<h2 id=\"使用ruby-build安装Ruby\"><a href=\"#使用ruby-build安装Ruby\" class=\"headerlink\" title=\"使用ruby-build安装Ruby\"></a>使用ruby-build安装Ruby</h2><p><a href=\"https://github.com/rbenv/ruby-build\" target=\"_blank\" rel=\"external\">项目地址</a> <a href=\"https://github.com/rbenv/ruby-buil\" target=\"_blank\" rel=\"external\">https://github.com/rbenv/ruby-buil</a></p>\n<p> ruby-build可以作为rbenv插件安装，也可作为独立的工具</p>\n<h3 id=\"克隆源码（作为插件安装）\"><a href=\"#克隆源码（作为插件安装）\" class=\"headerlink\" title=\"克隆源码（作为插件安装）\"></a>克隆源码（作为插件安装）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build</div></pre></td></tr></table></figure>\n<p>使配置生效（不同环境配置文件可能不同）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source ~/.bashrc</div></pre></td></tr></table></figure></p>\n<h3 id=\"作为独立工具\"><a href=\"#作为独立工具\" class=\"headerlink\" title=\"作为独立工具\"></a>作为独立工具</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/rbenv/ruby-build.git</div><div class=\"line\">cd ruby-build</div><div class=\"line\">./install.sh</div></pre></td></tr></table></figure>\n<h4 id=\"使用-ruby-build安装ruby\"><a href=\"#使用-ruby-build安装ruby\" class=\"headerlink\" title=\"使用 ruby-build安装ruby\"></a>使用 ruby-build安装ruby</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ruby-build 2.2.0 ~/local/ruby-2.2.0</div></pre></td></tr></table></figure>\n<h2 id=\"安装Gems\"><a href=\"#安装Gems\" class=\"headerlink\" title=\"安装Gems\"></a>安装Gems</h2><h3 id=\"直接安装\"><a href=\"#直接安装\" class=\"headerlink\" title=\"直接安装\"></a>直接安装</h3><p>安装Ruby之后，执行以下命令安装gems<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo gem install bundler</div></pre></td></tr></table></figure></p>\n<p>执行以下命令查看安装gems版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem env home</div></pre></td></tr></table></figure></p>\n<h3 id=\"源码安装\"><a href=\"#源码安装\" class=\"headerlink\" title=\"源码安装\"></a>源码安装</h3><p><a href=\"https://www.ruby-lang.org/en/downloads/\" target=\"_blank\" rel=\"external\">下载源码</a> <a href=\"https://www.ruby-lang.org/en/downloads/\" target=\"_blank\" rel=\"external\">https://www.ruby-lang.org/en/downloads/</a><br>进入解压缩后的目录执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ruby setup.rb</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h2 id=\"源码安装Ruby\"><a href=\"#源码安装Ruby\" class=\"headerlink\" title=\"源码安装Ruby\"></a>源码安装Ruby</h2><p>直接官网下载源码压缩包</p>\n<h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install gcc g++ make automake autoconf curl-devel openssl-devel zlib-devel httpd-devel apr-devel apr-util-devel sqlite-devel</div><div class=\"line\"></div><div class=\"line\">sudo apt-get install ruby-rdoc ruby-devel</div></pre></td></tr></table></figure>\n<p>解压缩下载的ruby源码，进入压缩目录依次执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">./configure</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure></p>\n<p>安装成功后执行以下命令查看安装的ruby版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ruby -v</div></pre></td></tr></table></figure></p>\n<p>可选rbenv安装或ruby-build安装</p>\n<h2 id=\"rbenv安装Ruby\"><a href=\"#rbenv安装Ruby\" class=\"headerlink\" title=\"rbenv安装Ruby\"></a>rbenv安装Ruby</h2><blockquote>\n<p>点击<a href=\"https://github.com/rbenv/rbenv\">此处</a>访问项目或直接访问 <a href=\"https://github.com/rbenv/rbenv\">https://github.com/rbenv/rbenv</a></p>\n</blockquote>\n<h3 id=\"克隆rbenv源码-amp-编译\"><a href=\"#克隆rbenv源码-amp-编译\" class=\"headerlink\" title=\"克隆rbenv源码&amp;编译\"></a>克隆rbenv源码&amp;编译</h3><p>克隆 rbenv 至 ~/.rbenv （非root用户）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/rbenv/rbenv.git ~/.rbenv</div></pre></td></tr></table></figure></p>\n<h3 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd ~/.rbenv &amp;&amp; src/configure &amp;&amp; make -C src</div></pre></td></tr></table></figure>\n<h3 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h3><p>以下 $HOME 表示当前用户的绝对路径，例如用户dev，$HOME则对应/home/dev</p>\n<h4 id=\"centOS\"><a href=\"#centOS\" class=\"headerlink\" title=\"centOS\"></a>centOS</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ echo &apos;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&apos; &gt;&gt;  ~/.bashrc</div><div class=\"line\">echo &apos;eval &quot;$(rbenv init -)&quot;&apos; &gt;&gt; ~/.bashrc</div><div class=\"line\">source ~/.bashrc</div></pre></td></tr></table></figure>\n<h4 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ echo &apos;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&apos; &gt;&gt; ~/.bashrc</div><div class=\"line\">echo &apos;eval &quot;$(rbenv init -)&quot;&apos; &gt;&gt; ~/.bashrc</div><div class=\"line\">source ~/.bashrc</div></pre></td></tr></table></figure>\n<h4 id=\"Zsh\"><a href=\"#Zsh\" class=\"headerlink\" title=\"Zsh\"></a>Zsh</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ echo &apos;export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;&apos; &gt;&gt; ~/.zshrc</div><div class=\"line\">echo &apos;eval &quot;$(rbenv init -)&quot;&apos; &gt;&gt; ~/.zshrc</div><div class=\"line\">source ~/.zshrc</div></pre></td></tr></table></figure>\n<h3 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">~/.rbenv/bin/rbenv init</div></pre></td></tr></table></figure>\n<h3 id=\"确认安装\"><a href=\"#确认安装\" class=\"headerlink\" title=\"确认安装\"></a>确认安装</h3><p>重启终端，执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">type rbenv</div></pre></td></tr></table></figure></p>\n<p>输出如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rbenv is hashed (/home/dev/.rbenv/bin/rbenv)</div></pre></td></tr></table></figure></p>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rbenv is a function</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装指定版本Ruby\"><a href=\"#安装指定版本Ruby\" class=\"headerlink\" title=\"安装指定版本Ruby\"></a>安装指定版本Ruby</h2><p>查看Ruby版本列表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rbenv install -l</div></pre></td></tr></table></figure></p>\n<p>找到需要的版本后执行 install，例如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rbenv install 2.0.0-p247</div></pre></td></tr></table></figure></p>\n<h2 id=\"使用ruby-build安装Ruby\"><a href=\"#使用ruby-build安装Ruby\" class=\"headerlink\" title=\"使用ruby-build安装Ruby\"></a>使用ruby-build安装Ruby</h2><p><a href=\"https://github.com/rbenv/ruby-build\">项目地址</a> <a href=\"https://github.com/rbenv/ruby-buil\">https://github.com/rbenv/ruby-buil</a></p>\n<p> ruby-build可以作为rbenv插件安装，也可作为独立的工具</p>\n<h3 id=\"克隆源码（作为插件安装）\"><a href=\"#克隆源码（作为插件安装）\" class=\"headerlink\" title=\"克隆源码（作为插件安装）\"></a>克隆源码（作为插件安装）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build</div></pre></td></tr></table></figure>\n<p>使配置生效（不同环境配置文件可能不同）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source ~/.bashrc</div></pre></td></tr></table></figure></p>\n<h3 id=\"作为独立工具\"><a href=\"#作为独立工具\" class=\"headerlink\" title=\"作为独立工具\"></a>作为独立工具</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/rbenv/ruby-build.git</div><div class=\"line\">cd ruby-build</div><div class=\"line\">./install.sh</div></pre></td></tr></table></figure>\n<h4 id=\"使用-ruby-build安装ruby\"><a href=\"#使用-ruby-build安装ruby\" class=\"headerlink\" title=\"使用 ruby-build安装ruby\"></a>使用 ruby-build安装ruby</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ruby-build 2.2.0 ~/local/ruby-2.2.0</div></pre></td></tr></table></figure>\n<h2 id=\"安装Gems\"><a href=\"#安装Gems\" class=\"headerlink\" title=\"安装Gems\"></a>安装Gems</h2><h3 id=\"直接安装\"><a href=\"#直接安装\" class=\"headerlink\" title=\"直接安装\"></a>直接安装</h3><p>安装Ruby之后，执行以下命令安装gems<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo gem install bundler</div></pre></td></tr></table></figure></p>\n<p>执行以下命令查看安装gems版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem env home</div></pre></td></tr></table></figure></p>\n<h3 id=\"源码安装\"><a href=\"#源码安装\" class=\"headerlink\" title=\"源码安装\"></a>源码安装</h3><p><a href=\"https://www.ruby-lang.org/en/downloads/\">下载源码</a> <a href=\"https://www.ruby-lang.org/en/downloads/\">https://www.ruby-lang.org/en/downloads/</a><br>进入解压缩后的目录执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ruby setup.rb</div></pre></td></tr></table></figure></p>\n"},{"title":"eclipse在Ubuntu16.04下不正常工作的问题","date":"2016-07-04T02:51:36.000Z","_content":"\n# 解决办法\n\n```bash\n$ cd /path/to/eclipse\n$ export SWT_GTK3=0\n$ ./eclipse\n```\n推荐使用命令行的方式，网上其他的解决方法例如将\n```bash\n--launcher.GTK_versions\n```\n添加到eclipse目录下的eclipse.ini文件的 -launcher.appendVmargs 之前\n```bash\n-startup\nplugins/org.eclipse.equinox.launcher_1.3.100.v20150511-1540.jar\nplugins/org.eclipse.equinox.launcher.gtk.linux.x86_64_1.1.300.v20150602-1417\n-product\norg.eclipse.epp.package.java.product\n--launcher.defaultAction\nopenFile\n-showsplash\norg.eclipse.platform\n--launcher.XXMaxPermSize\n256m\n--launcher.defaultAction\nopenFile\n--launcher.GTK_versions\n--launcher.appendVmargs\n-vmargs\n-Dosgi.requiredJavaVersion=1.7\n-XX:MaxPermSize=256m\n-Xms256m\n-Xmx1024m\n```\n发现还是不太稳定，经常用不了，也有推荐加到 -launcher.defaultAction 之前，但是都不稳定\n<br>\n如果不想重装系统的话，推荐命令行的方式，等待Ubuntu升级解决这个问题\n","source":"_posts/eclipse在Ubuntu16-04下不正常工作的问题.md","raw":"---\ntitle: eclipse在Ubuntu16.04下不正常工作的问题\ndate: 2016-07-04 10:51:36\ntags: [eclipse,ubuntu]\n---\n\n# 解决办法\n\n```bash\n$ cd /path/to/eclipse\n$ export SWT_GTK3=0\n$ ./eclipse\n```\n推荐使用命令行的方式，网上其他的解决方法例如将\n```bash\n--launcher.GTK_versions\n```\n添加到eclipse目录下的eclipse.ini文件的 -launcher.appendVmargs 之前\n```bash\n-startup\nplugins/org.eclipse.equinox.launcher_1.3.100.v20150511-1540.jar\nplugins/org.eclipse.equinox.launcher.gtk.linux.x86_64_1.1.300.v20150602-1417\n-product\norg.eclipse.epp.package.java.product\n--launcher.defaultAction\nopenFile\n-showsplash\norg.eclipse.platform\n--launcher.XXMaxPermSize\n256m\n--launcher.defaultAction\nopenFile\n--launcher.GTK_versions\n--launcher.appendVmargs\n-vmargs\n-Dosgi.requiredJavaVersion=1.7\n-XX:MaxPermSize=256m\n-Xms256m\n-Xmx1024m\n```\n发现还是不太稳定，经常用不了，也有推荐加到 -launcher.defaultAction 之前，但是都不稳定\n<br>\n如果不想重装系统的话，推荐命令行的方式，等待Ubuntu升级解决这个问题\n","slug":"eclipse在Ubuntu16-04下不正常工作的问题","published":1,"updated":"2017-08-18T13:17:27.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw8k0009jeh8cs5jtg13","content":"<h1 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> /path/to/eclipse</div><div class=\"line\">$ <span class=\"built_in\">export</span> SWT_GTK3=0</div><div class=\"line\">$ ./eclipse</div></pre></td></tr></table></figure>\n<p>推荐使用命令行的方式，网上其他的解决方法例如将<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">--launcher.GTK_versions</div></pre></td></tr></table></figure></p>\n<p>添加到eclipse目录下的eclipse.ini文件的 -launcher.appendVmargs 之前<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">-startup</div><div class=\"line\">plugins/org.eclipse.equinox.launcher_1.3.100.v20150511-1540.jar</div><div class=\"line\">plugins/org.eclipse.equinox.launcher.gtk.linux.x86_64_1.1.300.v20150602-1417</div><div class=\"line\">-product</div><div class=\"line\">org.eclipse.epp.package.java.product</div><div class=\"line\">--launcher.defaultAction</div><div class=\"line\">openFile</div><div class=\"line\">-showsplash</div><div class=\"line\">org.eclipse.platform</div><div class=\"line\">--launcher.XXMaxPermSize</div><div class=\"line\">256m</div><div class=\"line\">--launcher.defaultAction</div><div class=\"line\">openFile</div><div class=\"line\">--launcher.GTK_versions</div><div class=\"line\">--launcher.appendVmargs</div><div class=\"line\">-vmargs</div><div class=\"line\">-Dosgi.requiredJavaVersion=1.7</div><div class=\"line\">-XX:MaxPermSize=256m</div><div class=\"line\">-Xms256m</div><div class=\"line\">-Xmx1024m</div></pre></td></tr></table></figure></p>\n<p>发现还是不太稳定，经常用不了，也有推荐加到 -launcher.defaultAction 之前，但是都不稳定<br><br><br>如果不想重装系统的话，推荐命令行的方式，等待Ubuntu升级解决这个问题</p>\n","excerpt":"","more":"<h1 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> /path/to/eclipse</div><div class=\"line\">$ <span class=\"built_in\">export</span> SWT_GTK3=0</div><div class=\"line\">$ ./eclipse</div></pre></td></tr></table></figure>\n<p>推荐使用命令行的方式，网上其他的解决方法例如将<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">--launcher.GTK_versions</div></pre></td></tr></table></figure></p>\n<p>添加到eclipse目录下的eclipse.ini文件的 -launcher.appendVmargs 之前<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">-startup</div><div class=\"line\">plugins/org.eclipse.equinox.launcher_1.3.100.v20150511-1540.jar</div><div class=\"line\">plugins/org.eclipse.equinox.launcher.gtk.linux.x86_64_1.1.300.v20150602-1417</div><div class=\"line\">-product</div><div class=\"line\">org.eclipse.epp.package.java.product</div><div class=\"line\">--launcher.defaultAction</div><div class=\"line\">openFile</div><div class=\"line\">-showsplash</div><div class=\"line\">org.eclipse.platform</div><div class=\"line\">--launcher.XXMaxPermSize</div><div class=\"line\">256m</div><div class=\"line\">--launcher.defaultAction</div><div class=\"line\">openFile</div><div class=\"line\">--launcher.GTK_versions</div><div class=\"line\">--launcher.appendVmargs</div><div class=\"line\">-vmargs</div><div class=\"line\">-Dosgi.requiredJavaVersion=1.7</div><div class=\"line\">-XX:MaxPermSize=256m</div><div class=\"line\">-Xms256m</div><div class=\"line\">-Xmx1024m</div></pre></td></tr></table></figure></p>\n<p>发现还是不太稳定，经常用不了，也有推荐加到 -launcher.defaultAction 之前，但是都不稳定<br><br><br>如果不想重装系统的话，推荐命令行的方式，等待Ubuntu升级解决这个问题</p>\n"},{"title":"Mavn打包记录","date":"2016-07-04T03:44:50.000Z","_content":"\n# 不带依赖打包\n配置文件 pox.xml 中添加插件\n```bash\n<build>\n <plugins>  \n   <plugin>\n     <groupId>org.apache.maven.plugins</groupId>\n     <artifactId>maven-jar-plugin</artifactId>\n     <version>2.4</version>\n      <configuration>\n         <archive>\n            <manifest>\n              <addClasspath>true</addClasspath>\n              <classpathPrefix>lib/</classpathPrefix>\n              <mainClass>teclan.maven.Main</mainClass>\n            </manifest>\n         </archive>\n     </configuration>  \n\t</plugin>  \n </plugins>\n</build>  \n  ```\n\n  在项目目录下执行以下命令完成打包\n  ```bash\n  $ mvn package\n  ```\n  或者\n  ```bash\n  $ mvn assembly:assembly\n  ```\n  跳过测试打包执行\n  ```bash\n  $ mvn package -Dmaven.test.skip=true\n  ```\n\n  其中\n  ```Java\n    <mainClass>teclan.maven.Main</mainClass>  \n  ```\n  表示默认执行的是 teclan.maven.Main 类下面的 main 方法，执行命令：\n  ```bash\n  $ java -jar your-jar.jar\n  ```\n\n\n# 带依赖打包\n## 1、方式一\n   配置文件 pox.xml 中添加插件\n```Java\n<plugin>  \n    <groupId>org.apache.maven.plugins</groupId>  \n    <artifactId>maven-assembly-plugin</artifactId>  \n    <version>2.3</version>  \n    <configuration>  \n        <appendAssemblyId>false</appendAssemblyId>  \n        <descriptorRefs>  \n            <descriptorRef>jar-with-dependencies</descriptorRef>  \n        </descriptorRefs>  \n        <archive>  \n            <manifest>  \n                <mainClass>teclan.maven.Main</mainClass>  \n            </manifest>  \n        </archive>  \n    </configuration>  \n    <executions>  \n        <execution>  \n            <id>make-assembly</id>  \n            <phase>package</phase>  \n            <goals>  \n                <goal>assembly</goal>  \n            </goals>  \n        </execution>  \n    </executions>  \n</plugin>  \n```\n打包命令同上,依赖的包都在打包后的 .jar 文件里面，解压以后可以看到。\n## 1、方式二\n   配置文件 pox.xml 中添加插件\n```Java\n<build>  \n    <plugins>  \n        <!-- The configuration of maven-jar-plugin -->  \n        <plugin>  \n            <groupId>org.apache.maven.plugins</groupId>  \n            <artifactId>maven-jar-plugin</artifactId>  \n            <version>2.4</version>  \n            <!-- The configuration of the plugin -->  \n            <configuration>  \n                <!-- Configuration of the archiver -->  \n                <archive>  \n                    <!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件  -->  \n                    <addMavenDescriptor>false</addMavenDescriptor>  \n                    <!-- Manifest specific configuration -->  \n                    <manifest>  \n                        <!--是否要把第三方jar放到manifest的classpath中 -->  \n                        <addClasspath>true</addClasspath>  \n                        <!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/-->  \n                        <classpathPrefix>lib/</classpathPrefix>  \n                        <!-- 应用的main class -->  \n                        <mainClass>teclan.mavenpackage.App</mainClass>  \n                    </manifest>  \n                </archive>  \n                <!-- 过滤掉不希望包含在jar中的文件-->  \n                <excludes>  \n                    <exclude>${project.basedir}/xml/*</exclude>  \n                </excludes>  \n            </configuration>  \n        </plugin>  \n\n        <!-- The configuration of maven-assembly-plugin -->  \n        <plugin>  \n            <groupId>org.apache.maven.plugins</groupId>  \n            <artifactId>maven-assembly-plugin</artifactId>  \n            <version>2.4</version>  \n            <!-- The configuration of the plugin -->  \n            <configuration>  \n                <!-- Specifies the configuration file of the assembly plugin -->  \n                <descriptors>  \n                  <!-- 注意这个文件，要创建正确的文件或指向正确的文件 -->  \n                    <descriptor>src/main/assembly/package.xml</descriptor>  \n                </descriptors>  \n            </configuration>  \n            <executions>  \n                <execution>  \n                    <id>make-assembly</id>  \n                    <phase>package</phase>  \n                    <goals>  \n                        <goal>single</goal>  \n                    </goals>  \n                </execution>  \n            </executions>  \n        </plugin>  \n    </plugins>  \n</build>\n```\n之后创建src/main/assembly/package.xml，内容如下：\n```Java\n<assembly>  \n    <id>bin</id>  \n    <!-- 最终打包成一个用于发布的zip文件 -->  \n    <formats>  \n        <format>zip</format>  \n    </formats>  \n\n    <!-- Adds dependencies to zip package under lib directory -->  \n    <dependencySets>  \n        <dependencySet>  \n            <!--不使用项目的artifact，第三方jar不要解压，打包进zip文件的lib目录-->  \n            <useProjectArtifact>false</useProjectArtifact>  \n            <outputDirectory>lib</outputDirectory>  \n            <unpack>false</unpack>  \n        </dependencySet>  \n    </dependencySets>  \n\n    <fileSets>  \n        <!-- 把项目相关的说明文件，打包进zip文件的根目录 -->  \n        <fileSet>  \n            <directory>${project.basedir}</directory>  \n            <outputDirectory>/</outputDirectory>  \n            <includes>  \n                <include>README*</include>  \n                <include>LICENSE*</include>  \n                <include>NOTICE*</include>\n                <include>*.xml</include>   \n            </includes>  \n        </fileSet>  \n\n        <!-- 把项目的配置文件，打包进zip文件的config目录 -->  \n        <fileSet>  \n            <directory>${project.basedir}/src/main/config</directory>  \n            <outputDirectory>config</outputDirectory>  \n            <includes>  \n                <include>*.xml</include>  \n                <include>*.properties</include>  \n            </includes>  \n        </fileSet>  \n\n        <!-- 把项目的脚本文件目录（ src/main/scripts ）中的启动脚本文件，打包进zip文件的bin目录 -->  \n        <fileSet>  \n            <directory>${project.build.scriptSourceDirectory}</directory>  \n            <outputDirectory>bin</outputDirectory>  \n            <includes>  \n                <include>startup.*</include>  \n            </includes>  \n        </fileSet>  \n\n        <!-- 把项目的脚本文件（ src/main/scripts 除了启动脚本文件），打包进zip文件的scripts目录 -->  \n        <fileSet>  \n            <directory>${project.build.scriptSourceDirectory}</directory>  \n            <outputDirectory>scripts</outputDirectory>  \n            <excludes>  \n                <exclude>startup.*</exclude>  \n            </excludes>  \n        </fileSet>  \n\n        <!-- 把项目自己编译出来的jar文件，打包进zip文件的根目录 -->  \n        <fileSet>  \n            <directory>${project.build.directory}</directory>  \n            <outputDirectory></outputDirectory>  \n            <includes>  \n                <include>*.jar</include>  \n            </includes>  \n        </fileSet>  \n    </fileSets>  \n</assembly>  \n```\n打包命令同上，在target目录下面会生成一个.jar和.zip文件，.jar文件是不不带依赖，解压.zip文件可以看到 /lib , /config\n/scripts 和一个 .jar 以及项目说明文件，可以根据需要修改配置文件。 \n","source":"_posts/Mavn打包记录.md","raw":"---\ntitle: Mavn打包记录\ndate: 2016-07-04 11:44:50\ntags: [Maven,打包]\n---\n\n# 不带依赖打包\n配置文件 pox.xml 中添加插件\n```bash\n<build>\n <plugins>  \n   <plugin>\n     <groupId>org.apache.maven.plugins</groupId>\n     <artifactId>maven-jar-plugin</artifactId>\n     <version>2.4</version>\n      <configuration>\n         <archive>\n            <manifest>\n              <addClasspath>true</addClasspath>\n              <classpathPrefix>lib/</classpathPrefix>\n              <mainClass>teclan.maven.Main</mainClass>\n            </manifest>\n         </archive>\n     </configuration>  \n\t</plugin>  \n </plugins>\n</build>  \n  ```\n\n  在项目目录下执行以下命令完成打包\n  ```bash\n  $ mvn package\n  ```\n  或者\n  ```bash\n  $ mvn assembly:assembly\n  ```\n  跳过测试打包执行\n  ```bash\n  $ mvn package -Dmaven.test.skip=true\n  ```\n\n  其中\n  ```Java\n    <mainClass>teclan.maven.Main</mainClass>  \n  ```\n  表示默认执行的是 teclan.maven.Main 类下面的 main 方法，执行命令：\n  ```bash\n  $ java -jar your-jar.jar\n  ```\n\n\n# 带依赖打包\n## 1、方式一\n   配置文件 pox.xml 中添加插件\n```Java\n<plugin>  \n    <groupId>org.apache.maven.plugins</groupId>  \n    <artifactId>maven-assembly-plugin</artifactId>  \n    <version>2.3</version>  \n    <configuration>  \n        <appendAssemblyId>false</appendAssemblyId>  \n        <descriptorRefs>  \n            <descriptorRef>jar-with-dependencies</descriptorRef>  \n        </descriptorRefs>  \n        <archive>  \n            <manifest>  \n                <mainClass>teclan.maven.Main</mainClass>  \n            </manifest>  \n        </archive>  \n    </configuration>  \n    <executions>  \n        <execution>  \n            <id>make-assembly</id>  \n            <phase>package</phase>  \n            <goals>  \n                <goal>assembly</goal>  \n            </goals>  \n        </execution>  \n    </executions>  \n</plugin>  \n```\n打包命令同上,依赖的包都在打包后的 .jar 文件里面，解压以后可以看到。\n## 1、方式二\n   配置文件 pox.xml 中添加插件\n```Java\n<build>  \n    <plugins>  \n        <!-- The configuration of maven-jar-plugin -->  \n        <plugin>  \n            <groupId>org.apache.maven.plugins</groupId>  \n            <artifactId>maven-jar-plugin</artifactId>  \n            <version>2.4</version>  \n            <!-- The configuration of the plugin -->  \n            <configuration>  \n                <!-- Configuration of the archiver -->  \n                <archive>  \n                    <!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件  -->  \n                    <addMavenDescriptor>false</addMavenDescriptor>  \n                    <!-- Manifest specific configuration -->  \n                    <manifest>  \n                        <!--是否要把第三方jar放到manifest的classpath中 -->  \n                        <addClasspath>true</addClasspath>  \n                        <!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/-->  \n                        <classpathPrefix>lib/</classpathPrefix>  \n                        <!-- 应用的main class -->  \n                        <mainClass>teclan.mavenpackage.App</mainClass>  \n                    </manifest>  \n                </archive>  \n                <!-- 过滤掉不希望包含在jar中的文件-->  \n                <excludes>  \n                    <exclude>${project.basedir}/xml/*</exclude>  \n                </excludes>  \n            </configuration>  \n        </plugin>  \n\n        <!-- The configuration of maven-assembly-plugin -->  \n        <plugin>  \n            <groupId>org.apache.maven.plugins</groupId>  \n            <artifactId>maven-assembly-plugin</artifactId>  \n            <version>2.4</version>  \n            <!-- The configuration of the plugin -->  \n            <configuration>  \n                <!-- Specifies the configuration file of the assembly plugin -->  \n                <descriptors>  \n                  <!-- 注意这个文件，要创建正确的文件或指向正确的文件 -->  \n                    <descriptor>src/main/assembly/package.xml</descriptor>  \n                </descriptors>  \n            </configuration>  \n            <executions>  \n                <execution>  \n                    <id>make-assembly</id>  \n                    <phase>package</phase>  \n                    <goals>  \n                        <goal>single</goal>  \n                    </goals>  \n                </execution>  \n            </executions>  \n        </plugin>  \n    </plugins>  \n</build>\n```\n之后创建src/main/assembly/package.xml，内容如下：\n```Java\n<assembly>  \n    <id>bin</id>  \n    <!-- 最终打包成一个用于发布的zip文件 -->  \n    <formats>  \n        <format>zip</format>  \n    </formats>  \n\n    <!-- Adds dependencies to zip package under lib directory -->  \n    <dependencySets>  \n        <dependencySet>  \n            <!--不使用项目的artifact，第三方jar不要解压，打包进zip文件的lib目录-->  \n            <useProjectArtifact>false</useProjectArtifact>  \n            <outputDirectory>lib</outputDirectory>  \n            <unpack>false</unpack>  \n        </dependencySet>  \n    </dependencySets>  \n\n    <fileSets>  \n        <!-- 把项目相关的说明文件，打包进zip文件的根目录 -->  \n        <fileSet>  \n            <directory>${project.basedir}</directory>  \n            <outputDirectory>/</outputDirectory>  \n            <includes>  \n                <include>README*</include>  \n                <include>LICENSE*</include>  \n                <include>NOTICE*</include>\n                <include>*.xml</include>   \n            </includes>  \n        </fileSet>  \n\n        <!-- 把项目的配置文件，打包进zip文件的config目录 -->  \n        <fileSet>  \n            <directory>${project.basedir}/src/main/config</directory>  \n            <outputDirectory>config</outputDirectory>  \n            <includes>  \n                <include>*.xml</include>  \n                <include>*.properties</include>  \n            </includes>  \n        </fileSet>  \n\n        <!-- 把项目的脚本文件目录（ src/main/scripts ）中的启动脚本文件，打包进zip文件的bin目录 -->  \n        <fileSet>  \n            <directory>${project.build.scriptSourceDirectory}</directory>  \n            <outputDirectory>bin</outputDirectory>  \n            <includes>  \n                <include>startup.*</include>  \n            </includes>  \n        </fileSet>  \n\n        <!-- 把项目的脚本文件（ src/main/scripts 除了启动脚本文件），打包进zip文件的scripts目录 -->  \n        <fileSet>  \n            <directory>${project.build.scriptSourceDirectory}</directory>  \n            <outputDirectory>scripts</outputDirectory>  \n            <excludes>  \n                <exclude>startup.*</exclude>  \n            </excludes>  \n        </fileSet>  \n\n        <!-- 把项目自己编译出来的jar文件，打包进zip文件的根目录 -->  \n        <fileSet>  \n            <directory>${project.build.directory}</directory>  \n            <outputDirectory></outputDirectory>  \n            <includes>  \n                <include>*.jar</include>  \n            </includes>  \n        </fileSet>  \n    </fileSets>  \n</assembly>  \n```\n打包命令同上，在target目录下面会生成一个.jar和.zip文件，.jar文件是不不带依赖，解压.zip文件可以看到 /lib , /config\n/scripts 和一个 .jar 以及项目说明文件，可以根据需要修改配置文件。 \n","slug":"Mavn打包记录","published":1,"updated":"2017-08-18T13:17:27.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw8p000cjeh89ko7jw6o","content":"<h1 id=\"不带依赖打包\"><a href=\"#不带依赖打包\" class=\"headerlink\" title=\"不带依赖打包\"></a>不带依赖打包</h1><p>配置文件 pox.xml 中添加插件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;build&gt;</div><div class=\"line\"> &lt;plugins&gt;  </div><div class=\"line\">   &lt;plugin&gt;</div><div class=\"line\">     &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class=\"line\">     &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;</div><div class=\"line\">     &lt;version&gt;2.4&lt;/version&gt;</div><div class=\"line\">      &lt;configuration&gt;</div><div class=\"line\">         &lt;archive&gt;</div><div class=\"line\">            &lt;manifest&gt;</div><div class=\"line\">              &lt;addClasspath&gt;<span class=\"literal\">true</span>&lt;/addClasspath&gt;</div><div class=\"line\">              &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;</div><div class=\"line\">              &lt;mainClass&gt;teclan.maven.Main&lt;/mainClass&gt;</div><div class=\"line\">            &lt;/manifest&gt;</div><div class=\"line\">         &lt;/archive&gt;</div><div class=\"line\">     &lt;/configuration&gt;  </div><div class=\"line\">\t&lt;/plugin&gt;  </div><div class=\"line\"> &lt;/plugins&gt;</div><div class=\"line\">&lt;/build&gt;</div></pre></td></tr></table></figure></p>\n<p>  在项目目录下执行以下命令完成打包<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mvn package</div></pre></td></tr></table></figure></p>\n<p>  或者<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mvn assembly:assembly</div></pre></td></tr></table></figure></p>\n<p>  跳过测试打包执行<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mvn package -Dmaven.test.skip=<span class=\"literal\">true</span></div></pre></td></tr></table></figure></p>\n<p>  其中<br>  <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;mainClass&gt;teclan.maven.Main&lt;/mainClass&gt;</div></pre></td></tr></table></figure></p>\n<p>  表示默认执行的是 teclan.maven.Main 类下面的 main 方法，执行命令：<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ java -jar your-jar.jar</div></pre></td></tr></table></figure></p>\n<h1 id=\"带依赖打包\"><a href=\"#带依赖打包\" class=\"headerlink\" title=\"带依赖打包\"></a>带依赖打包</h1><h2 id=\"1、方式一\"><a href=\"#1、方式一\" class=\"headerlink\" title=\"1、方式一\"></a>1、方式一</h2><p>   配置文件 pox.xml 中添加插件<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;plugin&gt;  </div><div class=\"line\">    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;  </div><div class=\"line\">    &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;  </div><div class=\"line\">    &lt;version&gt;2.3&lt;/version&gt;  </div><div class=\"line\">    &lt;configuration&gt;  </div><div class=\"line\">        &lt;appendAssemblyId&gt;false&lt;/appendAssemblyId&gt;  </div><div class=\"line\">        &lt;descriptorRefs&gt;  </div><div class=\"line\">            &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;  </div><div class=\"line\">        &lt;/descriptorRefs&gt;  </div><div class=\"line\">        &lt;archive&gt;  </div><div class=\"line\">            &lt;manifest&gt;  </div><div class=\"line\">                &lt;mainClass&gt;teclan.maven.Main&lt;/mainClass&gt;  </div><div class=\"line\">            &lt;/manifest&gt;  </div><div class=\"line\">        &lt;/archive&gt;  </div><div class=\"line\">    &lt;/configuration&gt;  </div><div class=\"line\">    &lt;executions&gt;  </div><div class=\"line\">        &lt;execution&gt;  </div><div class=\"line\">            &lt;id&gt;make-assembly&lt;/id&gt;  </div><div class=\"line\">            &lt;phase&gt;package&lt;/phase&gt;  </div><div class=\"line\">            &lt;goals&gt;  </div><div class=\"line\">                &lt;goal&gt;assembly&lt;/goal&gt;  </div><div class=\"line\">            &lt;/goals&gt;  </div><div class=\"line\">        &lt;/execution&gt;  </div><div class=\"line\">    &lt;/executions&gt;  </div><div class=\"line\">&lt;/plugin&gt;</div></pre></td></tr></table></figure></p>\n<p>打包命令同上,依赖的包都在打包后的 .jar 文件里面，解压以后可以看到。</p>\n<h2 id=\"1、方式二\"><a href=\"#1、方式二\" class=\"headerlink\" title=\"1、方式二\"></a>1、方式二</h2><p>   配置文件 pox.xml 中添加插件<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;build&gt;  </div><div class=\"line\">    &lt;plugins&gt;  </div><div class=\"line\">        &lt;!-- The configuration of maven-jar-plugin --&gt;  </div><div class=\"line\">        &lt;plugin&gt;  </div><div class=\"line\">            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;  </div><div class=\"line\">            &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;  </div><div class=\"line\">            &lt;version&gt;2.4&lt;/version&gt;  </div><div class=\"line\">            &lt;!-- The configuration of the plugin --&gt;  </div><div class=\"line\">            &lt;configuration&gt;  </div><div class=\"line\">                &lt;!-- Configuration of the archiver --&gt;  </div><div class=\"line\">                &lt;archive&gt;  </div><div class=\"line\">                    &lt;!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件  --&gt;  </div><div class=\"line\">                    &lt;addMavenDescriptor&gt;false&lt;/addMavenDescriptor&gt;  </div><div class=\"line\">                    &lt;!-- Manifest specific configuration --&gt;  </div><div class=\"line\">                    &lt;manifest&gt;  </div><div class=\"line\">                        &lt;!--是否要把第三方jar放到manifest的classpath中 --&gt;  </div><div class=\"line\">                        &lt;addClasspath&gt;true&lt;/addClasspath&gt;  </div><div class=\"line\">                        &lt;!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/--&gt;  </div><div class=\"line\">                        &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;  </div><div class=\"line\">                        &lt;!-- 应用的main class --&gt;  </div><div class=\"line\">                        &lt;mainClass&gt;teclan.mavenpackage.App&lt;/mainClass&gt;  </div><div class=\"line\">                    &lt;/manifest&gt;  </div><div class=\"line\">                &lt;/archive&gt;  </div><div class=\"line\">                &lt;!-- 过滤掉不希望包含在jar中的文件--&gt;  </div><div class=\"line\">                &lt;excludes&gt;  </div><div class=\"line\">                    &lt;exclude&gt;$&#123;project.basedir&#125;/xml/*&lt;/exclude&gt;  </div><div class=\"line\">                &lt;/excludes&gt;  </div><div class=\"line\">            &lt;/configuration&gt;  </div><div class=\"line\">        &lt;/plugin&gt;  </div><div class=\"line\"></div><div class=\"line\">        &lt;!-- The configuration of maven-assembly-plugin --&gt;  </div><div class=\"line\">        &lt;plugin&gt;  </div><div class=\"line\">            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;  </div><div class=\"line\">            &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;  </div><div class=\"line\">            &lt;version&gt;2.4&lt;/version&gt;  </div><div class=\"line\">            &lt;!-- The configuration of the plugin --&gt;  </div><div class=\"line\">            &lt;configuration&gt;  </div><div class=\"line\">                &lt;!-- Specifies the configuration file of the assembly plugin --&gt;  </div><div class=\"line\">                &lt;descriptors&gt;  </div><div class=\"line\">                  &lt;!-- 注意这个文件，要创建正确的文件或指向正确的文件 --&gt;  </div><div class=\"line\">                    &lt;descriptor&gt;src/main/assembly/package.xml&lt;/descriptor&gt;  </div><div class=\"line\">                &lt;/descriptors&gt;  </div><div class=\"line\">            &lt;/configuration&gt;  </div><div class=\"line\">            &lt;executions&gt;  </div><div class=\"line\">                &lt;execution&gt;  </div><div class=\"line\">                    &lt;id&gt;make-assembly&lt;/id&gt;  </div><div class=\"line\">                    &lt;phase&gt;package&lt;/phase&gt;  </div><div class=\"line\">                    &lt;goals&gt;  </div><div class=\"line\">                        &lt;goal&gt;single&lt;/goal&gt;  </div><div class=\"line\">                    &lt;/goals&gt;  </div><div class=\"line\">                &lt;/execution&gt;  </div><div class=\"line\">            &lt;/executions&gt;  </div><div class=\"line\">        &lt;/plugin&gt;  </div><div class=\"line\">    &lt;/plugins&gt;  </div><div class=\"line\">&lt;/build&gt;</div></pre></td></tr></table></figure></p>\n<p>之后创建src/main/assembly/package.xml，内容如下：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;assembly&gt;  </div><div class=\"line\">    &lt;id&gt;bin&lt;/id&gt;  </div><div class=\"line\">    &lt;!-- 最终打包成一个用于发布的zip文件 --&gt;  </div><div class=\"line\">    &lt;formats&gt;  </div><div class=\"line\">        &lt;format&gt;zip&lt;/format&gt;  </div><div class=\"line\">    &lt;/formats&gt;  </div><div class=\"line\"></div><div class=\"line\">    &lt;!-- Adds dependencies to zip package under lib directory --&gt;  </div><div class=\"line\">    &lt;dependencySets&gt;  </div><div class=\"line\">        &lt;dependencySet&gt;  </div><div class=\"line\">            &lt;!--不使用项目的artifact，第三方jar不要解压，打包进zip文件的lib目录--&gt;  </div><div class=\"line\">            &lt;useProjectArtifact&gt;false&lt;/useProjectArtifact&gt;  </div><div class=\"line\">            &lt;outputDirectory&gt;lib&lt;/outputDirectory&gt;  </div><div class=\"line\">            &lt;unpack&gt;false&lt;/unpack&gt;  </div><div class=\"line\">        &lt;/dependencySet&gt;  </div><div class=\"line\">    &lt;/dependencySets&gt;  </div><div class=\"line\"></div><div class=\"line\">    &lt;fileSets&gt;  </div><div class=\"line\">        &lt;!-- 把项目相关的说明文件，打包进zip文件的根目录 --&gt;  </div><div class=\"line\">        &lt;fileSet&gt;  </div><div class=\"line\">            &lt;directory&gt;$&#123;project.basedir&#125;&lt;/directory&gt;  </div><div class=\"line\">            &lt;outputDirectory&gt;/&lt;/outputDirectory&gt;  </div><div class=\"line\">            &lt;includes&gt;  </div><div class=\"line\">                &lt;include&gt;README*&lt;/include&gt;  </div><div class=\"line\">                &lt;include&gt;LICENSE*&lt;/include&gt;  </div><div class=\"line\">                &lt;include&gt;NOTICE*&lt;/include&gt;</div><div class=\"line\">                &lt;include&gt;*.xml&lt;/include&gt;   </div><div class=\"line\">            &lt;/includes&gt;  </div><div class=\"line\">        &lt;/fileSet&gt;  </div><div class=\"line\"></div><div class=\"line\">        &lt;!-- 把项目的配置文件，打包进zip文件的config目录 --&gt;  </div><div class=\"line\">        &lt;fileSet&gt;  </div><div class=\"line\">            &lt;directory&gt;$&#123;project.basedir&#125;/src/main/config&lt;/directory&gt;  </div><div class=\"line\">            &lt;outputDirectory&gt;config&lt;/outputDirectory&gt;  </div><div class=\"line\">            &lt;includes&gt;  </div><div class=\"line\">                &lt;include&gt;*.xml&lt;/include&gt;  </div><div class=\"line\">                &lt;include&gt;*.properties&lt;/include&gt;  </div><div class=\"line\">            &lt;/includes&gt;  </div><div class=\"line\">        &lt;/fileSet&gt;  </div><div class=\"line\"></div><div class=\"line\">        &lt;!-- 把项目的脚本文件目录（ src/main/scripts ）中的启动脚本文件，打包进zip文件的bin目录 --&gt;  </div><div class=\"line\">        &lt;fileSet&gt;  </div><div class=\"line\">            &lt;directory&gt;$&#123;project.build.scriptSourceDirectory&#125;&lt;/directory&gt;  </div><div class=\"line\">            &lt;outputDirectory&gt;bin&lt;/outputDirectory&gt;  </div><div class=\"line\">            &lt;includes&gt;  </div><div class=\"line\">                &lt;include&gt;startup.*&lt;/include&gt;  </div><div class=\"line\">            &lt;/includes&gt;  </div><div class=\"line\">        &lt;/fileSet&gt;  </div><div class=\"line\"></div><div class=\"line\">        &lt;!-- 把项目的脚本文件（ src/main/scripts 除了启动脚本文件），打包进zip文件的scripts目录 --&gt;  </div><div class=\"line\">        &lt;fileSet&gt;  </div><div class=\"line\">            &lt;directory&gt;$&#123;project.build.scriptSourceDirectory&#125;&lt;/directory&gt;  </div><div class=\"line\">            &lt;outputDirectory&gt;scripts&lt;/outputDirectory&gt;  </div><div class=\"line\">            &lt;excludes&gt;  </div><div class=\"line\">                &lt;exclude&gt;startup.*&lt;/exclude&gt;  </div><div class=\"line\">            &lt;/excludes&gt;  </div><div class=\"line\">        &lt;/fileSet&gt;  </div><div class=\"line\"></div><div class=\"line\">        &lt;!-- 把项目自己编译出来的jar文件，打包进zip文件的根目录 --&gt;  </div><div class=\"line\">        &lt;fileSet&gt;  </div><div class=\"line\">            &lt;directory&gt;$&#123;project.build.directory&#125;&lt;/directory&gt;  </div><div class=\"line\">            &lt;outputDirectory&gt;&lt;/outputDirectory&gt;  </div><div class=\"line\">            &lt;includes&gt;  </div><div class=\"line\">                &lt;include&gt;*.jar&lt;/include&gt;  </div><div class=\"line\">            &lt;/includes&gt;  </div><div class=\"line\">        &lt;/fileSet&gt;  </div><div class=\"line\">    &lt;/fileSets&gt;  </div><div class=\"line\">&lt;/assembly&gt;</div></pre></td></tr></table></figure></p>\n<p>打包命令同上，在target目录下面会生成一个.jar和.zip文件，.jar文件是不不带依赖，解压.zip文件可以看到 /lib , /config<br>/scripts 和一个 .jar 以及项目说明文件，可以根据需要修改配置文件。 </p>\n","excerpt":"","more":"<h1 id=\"不带依赖打包\"><a href=\"#不带依赖打包\" class=\"headerlink\" title=\"不带依赖打包\"></a>不带依赖打包</h1><p>配置文件 pox.xml 中添加插件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;build&gt;</div><div class=\"line\"> &lt;plugins&gt;  </div><div class=\"line\">   &lt;plugin&gt;</div><div class=\"line\">     &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class=\"line\">     &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;</div><div class=\"line\">     &lt;version&gt;2.4&lt;/version&gt;</div><div class=\"line\">      &lt;configuration&gt;</div><div class=\"line\">         &lt;archive&gt;</div><div class=\"line\">            &lt;manifest&gt;</div><div class=\"line\">              &lt;addClasspath&gt;<span class=\"literal\">true</span>&lt;/addClasspath&gt;</div><div class=\"line\">              &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;</div><div class=\"line\">              &lt;mainClass&gt;teclan.maven.Main&lt;/mainClass&gt;</div><div class=\"line\">            &lt;/manifest&gt;</div><div class=\"line\">         &lt;/archive&gt;</div><div class=\"line\">     &lt;/configuration&gt;  </div><div class=\"line\">\t&lt;/plugin&gt;  </div><div class=\"line\"> &lt;/plugins&gt;</div><div class=\"line\">&lt;/build&gt;</div></pre></td></tr></table></figure></p>\n<p>  在项目目录下执行以下命令完成打包<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mvn package</div></pre></td></tr></table></figure></p>\n<p>  或者<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mvn assembly:assembly</div></pre></td></tr></table></figure></p>\n<p>  跳过测试打包执行<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mvn package -Dmaven.test.skip=<span class=\"literal\">true</span></div></pre></td></tr></table></figure></p>\n<p>  其中<br>  <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;mainClass&gt;teclan.maven.Main&lt;/mainClass&gt;</div></pre></td></tr></table></figure></p>\n<p>  表示默认执行的是 teclan.maven.Main 类下面的 main 方法，执行命令：<br>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ java -jar your-jar.jar</div></pre></td></tr></table></figure></p>\n<h1 id=\"带依赖打包\"><a href=\"#带依赖打包\" class=\"headerlink\" title=\"带依赖打包\"></a>带依赖打包</h1><h2 id=\"1、方式一\"><a href=\"#1、方式一\" class=\"headerlink\" title=\"1、方式一\"></a>1、方式一</h2><p>   配置文件 pox.xml 中添加插件<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;plugin&gt;  </div><div class=\"line\">    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;  </div><div class=\"line\">    &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;  </div><div class=\"line\">    &lt;version&gt;2.3&lt;/version&gt;  </div><div class=\"line\">    &lt;configuration&gt;  </div><div class=\"line\">        &lt;appendAssemblyId&gt;false&lt;/appendAssemblyId&gt;  </div><div class=\"line\">        &lt;descriptorRefs&gt;  </div><div class=\"line\">            &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;  </div><div class=\"line\">        &lt;/descriptorRefs&gt;  </div><div class=\"line\">        &lt;archive&gt;  </div><div class=\"line\">            &lt;manifest&gt;  </div><div class=\"line\">                &lt;mainClass&gt;teclan.maven.Main&lt;/mainClass&gt;  </div><div class=\"line\">            &lt;/manifest&gt;  </div><div class=\"line\">        &lt;/archive&gt;  </div><div class=\"line\">    &lt;/configuration&gt;  </div><div class=\"line\">    &lt;executions&gt;  </div><div class=\"line\">        &lt;execution&gt;  </div><div class=\"line\">            &lt;id&gt;make-assembly&lt;/id&gt;  </div><div class=\"line\">            &lt;phase&gt;package&lt;/phase&gt;  </div><div class=\"line\">            &lt;goals&gt;  </div><div class=\"line\">                &lt;goal&gt;assembly&lt;/goal&gt;  </div><div class=\"line\">            &lt;/goals&gt;  </div><div class=\"line\">        &lt;/execution&gt;  </div><div class=\"line\">    &lt;/executions&gt;  </div><div class=\"line\">&lt;/plugin&gt;</div></pre></td></tr></table></figure></p>\n<p>打包命令同上,依赖的包都在打包后的 .jar 文件里面，解压以后可以看到。</p>\n<h2 id=\"1、方式二\"><a href=\"#1、方式二\" class=\"headerlink\" title=\"1、方式二\"></a>1、方式二</h2><p>   配置文件 pox.xml 中添加插件<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;build&gt;  </div><div class=\"line\">    &lt;plugins&gt;  </div><div class=\"line\">        &lt;!-- The configuration of maven-jar-plugin --&gt;  </div><div class=\"line\">        &lt;plugin&gt;  </div><div class=\"line\">            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;  </div><div class=\"line\">            &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;  </div><div class=\"line\">            &lt;version&gt;2.4&lt;/version&gt;  </div><div class=\"line\">            &lt;!-- The configuration of the plugin --&gt;  </div><div class=\"line\">            &lt;configuration&gt;  </div><div class=\"line\">                &lt;!-- Configuration of the archiver --&gt;  </div><div class=\"line\">                &lt;archive&gt;  </div><div class=\"line\">                    &lt;!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件  --&gt;  </div><div class=\"line\">                    &lt;addMavenDescriptor&gt;false&lt;/addMavenDescriptor&gt;  </div><div class=\"line\">                    &lt;!-- Manifest specific configuration --&gt;  </div><div class=\"line\">                    &lt;manifest&gt;  </div><div class=\"line\">                        &lt;!--是否要把第三方jar放到manifest的classpath中 --&gt;  </div><div class=\"line\">                        &lt;addClasspath&gt;true&lt;/addClasspath&gt;  </div><div class=\"line\">                        &lt;!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/--&gt;  </div><div class=\"line\">                        &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;  </div><div class=\"line\">                        &lt;!-- 应用的main class --&gt;  </div><div class=\"line\">                        &lt;mainClass&gt;teclan.mavenpackage.App&lt;/mainClass&gt;  </div><div class=\"line\">                    &lt;/manifest&gt;  </div><div class=\"line\">                &lt;/archive&gt;  </div><div class=\"line\">                &lt;!-- 过滤掉不希望包含在jar中的文件--&gt;  </div><div class=\"line\">                &lt;excludes&gt;  </div><div class=\"line\">                    &lt;exclude&gt;$&#123;project.basedir&#125;/xml/*&lt;/exclude&gt;  </div><div class=\"line\">                &lt;/excludes&gt;  </div><div class=\"line\">            &lt;/configuration&gt;  </div><div class=\"line\">        &lt;/plugin&gt;  </div><div class=\"line\"></div><div class=\"line\">        &lt;!-- The configuration of maven-assembly-plugin --&gt;  </div><div class=\"line\">        &lt;plugin&gt;  </div><div class=\"line\">            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;  </div><div class=\"line\">            &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;  </div><div class=\"line\">            &lt;version&gt;2.4&lt;/version&gt;  </div><div class=\"line\">            &lt;!-- The configuration of the plugin --&gt;  </div><div class=\"line\">            &lt;configuration&gt;  </div><div class=\"line\">                &lt;!-- Specifies the configuration file of the assembly plugin --&gt;  </div><div class=\"line\">                &lt;descriptors&gt;  </div><div class=\"line\">                  &lt;!-- 注意这个文件，要创建正确的文件或指向正确的文件 --&gt;  </div><div class=\"line\">                    &lt;descriptor&gt;src/main/assembly/package.xml&lt;/descriptor&gt;  </div><div class=\"line\">                &lt;/descriptors&gt;  </div><div class=\"line\">            &lt;/configuration&gt;  </div><div class=\"line\">            &lt;executions&gt;  </div><div class=\"line\">                &lt;execution&gt;  </div><div class=\"line\">                    &lt;id&gt;make-assembly&lt;/id&gt;  </div><div class=\"line\">                    &lt;phase&gt;package&lt;/phase&gt;  </div><div class=\"line\">                    &lt;goals&gt;  </div><div class=\"line\">                        &lt;goal&gt;single&lt;/goal&gt;  </div><div class=\"line\">                    &lt;/goals&gt;  </div><div class=\"line\">                &lt;/execution&gt;  </div><div class=\"line\">            &lt;/executions&gt;  </div><div class=\"line\">        &lt;/plugin&gt;  </div><div class=\"line\">    &lt;/plugins&gt;  </div><div class=\"line\">&lt;/build&gt;</div></pre></td></tr></table></figure></p>\n<p>之后创建src/main/assembly/package.xml，内容如下：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;assembly&gt;  </div><div class=\"line\">    &lt;id&gt;bin&lt;/id&gt;  </div><div class=\"line\">    &lt;!-- 最终打包成一个用于发布的zip文件 --&gt;  </div><div class=\"line\">    &lt;formats&gt;  </div><div class=\"line\">        &lt;format&gt;zip&lt;/format&gt;  </div><div class=\"line\">    &lt;/formats&gt;  </div><div class=\"line\"></div><div class=\"line\">    &lt;!-- Adds dependencies to zip package under lib directory --&gt;  </div><div class=\"line\">    &lt;dependencySets&gt;  </div><div class=\"line\">        &lt;dependencySet&gt;  </div><div class=\"line\">            &lt;!--不使用项目的artifact，第三方jar不要解压，打包进zip文件的lib目录--&gt;  </div><div class=\"line\">            &lt;useProjectArtifact&gt;false&lt;/useProjectArtifact&gt;  </div><div class=\"line\">            &lt;outputDirectory&gt;lib&lt;/outputDirectory&gt;  </div><div class=\"line\">            &lt;unpack&gt;false&lt;/unpack&gt;  </div><div class=\"line\">        &lt;/dependencySet&gt;  </div><div class=\"line\">    &lt;/dependencySets&gt;  </div><div class=\"line\"></div><div class=\"line\">    &lt;fileSets&gt;  </div><div class=\"line\">        &lt;!-- 把项目相关的说明文件，打包进zip文件的根目录 --&gt;  </div><div class=\"line\">        &lt;fileSet&gt;  </div><div class=\"line\">            &lt;directory&gt;$&#123;project.basedir&#125;&lt;/directory&gt;  </div><div class=\"line\">            &lt;outputDirectory&gt;/&lt;/outputDirectory&gt;  </div><div class=\"line\">            &lt;includes&gt;  </div><div class=\"line\">                &lt;include&gt;README*&lt;/include&gt;  </div><div class=\"line\">                &lt;include&gt;LICENSE*&lt;/include&gt;  </div><div class=\"line\">                &lt;include&gt;NOTICE*&lt;/include&gt;</div><div class=\"line\">                &lt;include&gt;*.xml&lt;/include&gt;   </div><div class=\"line\">            &lt;/includes&gt;  </div><div class=\"line\">        &lt;/fileSet&gt;  </div><div class=\"line\"></div><div class=\"line\">        &lt;!-- 把项目的配置文件，打包进zip文件的config目录 --&gt;  </div><div class=\"line\">        &lt;fileSet&gt;  </div><div class=\"line\">            &lt;directory&gt;$&#123;project.basedir&#125;/src/main/config&lt;/directory&gt;  </div><div class=\"line\">            &lt;outputDirectory&gt;config&lt;/outputDirectory&gt;  </div><div class=\"line\">            &lt;includes&gt;  </div><div class=\"line\">                &lt;include&gt;*.xml&lt;/include&gt;  </div><div class=\"line\">                &lt;include&gt;*.properties&lt;/include&gt;  </div><div class=\"line\">            &lt;/includes&gt;  </div><div class=\"line\">        &lt;/fileSet&gt;  </div><div class=\"line\"></div><div class=\"line\">        &lt;!-- 把项目的脚本文件目录（ src/main/scripts ）中的启动脚本文件，打包进zip文件的bin目录 --&gt;  </div><div class=\"line\">        &lt;fileSet&gt;  </div><div class=\"line\">            &lt;directory&gt;$&#123;project.build.scriptSourceDirectory&#125;&lt;/directory&gt;  </div><div class=\"line\">            &lt;outputDirectory&gt;bin&lt;/outputDirectory&gt;  </div><div class=\"line\">            &lt;includes&gt;  </div><div class=\"line\">                &lt;include&gt;startup.*&lt;/include&gt;  </div><div class=\"line\">            &lt;/includes&gt;  </div><div class=\"line\">        &lt;/fileSet&gt;  </div><div class=\"line\"></div><div class=\"line\">        &lt;!-- 把项目的脚本文件（ src/main/scripts 除了启动脚本文件），打包进zip文件的scripts目录 --&gt;  </div><div class=\"line\">        &lt;fileSet&gt;  </div><div class=\"line\">            &lt;directory&gt;$&#123;project.build.scriptSourceDirectory&#125;&lt;/directory&gt;  </div><div class=\"line\">            &lt;outputDirectory&gt;scripts&lt;/outputDirectory&gt;  </div><div class=\"line\">            &lt;excludes&gt;  </div><div class=\"line\">                &lt;exclude&gt;startup.*&lt;/exclude&gt;  </div><div class=\"line\">            &lt;/excludes&gt;  </div><div class=\"line\">        &lt;/fileSet&gt;  </div><div class=\"line\"></div><div class=\"line\">        &lt;!-- 把项目自己编译出来的jar文件，打包进zip文件的根目录 --&gt;  </div><div class=\"line\">        &lt;fileSet&gt;  </div><div class=\"line\">            &lt;directory&gt;$&#123;project.build.directory&#125;&lt;/directory&gt;  </div><div class=\"line\">            &lt;outputDirectory&gt;&lt;/outputDirectory&gt;  </div><div class=\"line\">            &lt;includes&gt;  </div><div class=\"line\">                &lt;include&gt;*.jar&lt;/include&gt;  </div><div class=\"line\">            &lt;/includes&gt;  </div><div class=\"line\">        &lt;/fileSet&gt;  </div><div class=\"line\">    &lt;/fileSets&gt;  </div><div class=\"line\">&lt;/assembly&gt;</div></pre></td></tr></table></figure></p>\n<p>打包命令同上，在target目录下面会生成一个.jar和.zip文件，.jar文件是不不带依赖，解压.zip文件可以看到 /lib , /config<br>/scripts 和一个 .jar 以及项目说明文件，可以根据需要修改配置文件。 </p>\n"},{"title":"maven多模块","date":"2016-07-07T10:03:12.000Z","_content":"# Maven 多模块\n\n[项目示例](https://github.com/teclan/teclan-parent)\n\n ## 新建 Maven 父项目\n 根据需要删除目录下面的src/,只保留pox.xml,将\n ```Java\n <packaging>jar</packaging>\n ```\n 改成\n ```Java\n <packaging>pom</packaging>\n ```\n 设置父项目版本和编码，子项目版本一般跟父项目一致，故使用父项目的配置即可\n ```Java\n <properties>\n \t   <teclan.version>0.1.0-SNAPSHOT</teclan.version>\n     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n </properties>\n ```\n## 新建子项目(Module)\n 配置同普通maven项目，例如创建示例Module项目 model-Demo1 和 model-Demo2,\n 则在父项目的pom.xml中可看到增加如下内容\n ```Java\n <modules>\n    <module>module-demo1</module>\n  \t<module>module-demo2</module>\n  </modules>\n  ```\n# 依赖\n子项目用到的共同依赖可以放到父项目中，如果子项目与父项目的依赖组件相同，但是版本号不同，\n那么子项目会调用子项目的依赖组件\n\n# 测试\n在父项目下执行\n```bash\n$ mvn test\n```\n会执行所以子项目的单元测试，例如示例项目中：\n```bash\n$ path/to/project  mvn test\n```\n结果如下：\n![](https://img.alicdn.com/imgextra/i4/1095268166/TB2q4wWspXXXXbIXXXXXXXXXXXX_!!1095268166.png)\n# 打包\n```bash\n$ path/to/project mvn package -Dmaven.test.skip=True\n```\n每个子项目单独打出jar,其他配置待后续更新...\n","source":"_posts/maven多模块.md","raw":"---\ntitle: maven多模块\ndate: 2016-07-07 18:03:12\ntags: [maven]\n---\n# Maven 多模块\n\n[项目示例](https://github.com/teclan/teclan-parent)\n\n ## 新建 Maven 父项目\n 根据需要删除目录下面的src/,只保留pox.xml,将\n ```Java\n <packaging>jar</packaging>\n ```\n 改成\n ```Java\n <packaging>pom</packaging>\n ```\n 设置父项目版本和编码，子项目版本一般跟父项目一致，故使用父项目的配置即可\n ```Java\n <properties>\n \t   <teclan.version>0.1.0-SNAPSHOT</teclan.version>\n     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n </properties>\n ```\n## 新建子项目(Module)\n 配置同普通maven项目，例如创建示例Module项目 model-Demo1 和 model-Demo2,\n 则在父项目的pom.xml中可看到增加如下内容\n ```Java\n <modules>\n    <module>module-demo1</module>\n  \t<module>module-demo2</module>\n  </modules>\n  ```\n# 依赖\n子项目用到的共同依赖可以放到父项目中，如果子项目与父项目的依赖组件相同，但是版本号不同，\n那么子项目会调用子项目的依赖组件\n\n# 测试\n在父项目下执行\n```bash\n$ mvn test\n```\n会执行所以子项目的单元测试，例如示例项目中：\n```bash\n$ path/to/project  mvn test\n```\n结果如下：\n![](https://img.alicdn.com/imgextra/i4/1095268166/TB2q4wWspXXXXbIXXXXXXXXXXXX_!!1095268166.png)\n# 打包\n```bash\n$ path/to/project mvn package -Dmaven.test.skip=True\n```\n每个子项目单独打出jar,其他配置待后续更新...\n","slug":"maven多模块","published":1,"updated":"2017-08-18T13:17:27.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw8q000djeh860y2j2r2","content":"<h1 id=\"Maven-多模块\"><a href=\"#Maven-多模块\" class=\"headerlink\" title=\"Maven 多模块\"></a>Maven 多模块</h1><p><a href=\"https://github.com/teclan/teclan-parent\" target=\"_blank\" rel=\"external\">项目示例</a></p>\n<h2 id=\"新建-Maven-父项目\"><a href=\"#新建-Maven-父项目\" class=\"headerlink\" title=\"新建 Maven 父项目\"></a>新建 Maven 父项目</h2><p> 根据需要删除目录下面的src/,只保留pox.xml,将<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;packaging&gt;jar&lt;/packaging&gt;</div></pre></td></tr></table></figure></p>\n<p> 改成<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;packaging&gt;pom&lt;/packaging&gt;</div></pre></td></tr></table></figure></p>\n<p> 设置父项目版本和编码，子项目版本一般跟父项目一致，故使用父项目的配置即可<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;properties&gt;</div><div class=\"line\">\t   &lt;teclan.version&gt;0.1.0-SNAPSHOT&lt;/teclan.version&gt;</div><div class=\"line\">    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</div><div class=\"line\">&lt;/properties&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"新建子项目-Module\"><a href=\"#新建子项目-Module\" class=\"headerlink\" title=\"新建子项目(Module)\"></a>新建子项目(Module)</h2><p> 配置同普通maven项目，例如创建示例Module项目 model-Demo1 和 model-Demo2,<br> 则在父项目的pom.xml中可看到增加如下内容<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;modules&gt;</div><div class=\"line\">   &lt;module&gt;module-demo1&lt;/module&gt;</div><div class=\"line\"> \t&lt;module&gt;module-demo2&lt;/module&gt;</div><div class=\"line\"> &lt;/modules&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h1><p>子项目用到的共同依赖可以放到父项目中，如果子项目与父项目的依赖组件相同，但是版本号不同，<br>那么子项目会调用子项目的依赖组件</p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>在父项目下执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mvn <span class=\"built_in\">test</span></div></pre></td></tr></table></figure></p>\n<p>会执行所以子项目的单元测试，例如示例项目中：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ path/to/project  mvn <span class=\"built_in\">test</span></div></pre></td></tr></table></figure></p>\n<p>结果如下：<br><img src=\"https://img.alicdn.com/imgextra/i4/1095268166/TB2q4wWspXXXXbIXXXXXXXXXXXX_!!1095268166.png\" alt=\"\"></p>\n<h1 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ path/to/project mvn package -Dmaven.test.skip=True</div></pre></td></tr></table></figure>\n<p>每个子项目单独打出jar,其他配置待后续更新…</p>\n","excerpt":"","more":"<h1 id=\"Maven-多模块\"><a href=\"#Maven-多模块\" class=\"headerlink\" title=\"Maven 多模块\"></a>Maven 多模块</h1><p><a href=\"https://github.com/teclan/teclan-parent\">项目示例</a></p>\n<h2 id=\"新建-Maven-父项目\"><a href=\"#新建-Maven-父项目\" class=\"headerlink\" title=\"新建 Maven 父项目\"></a>新建 Maven 父项目</h2><p> 根据需要删除目录下面的src/,只保留pox.xml,将<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;packaging&gt;jar&lt;/packaging&gt;</div></pre></td></tr></table></figure></p>\n<p> 改成<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;packaging&gt;pom&lt;/packaging&gt;</div></pre></td></tr></table></figure></p>\n<p> 设置父项目版本和编码，子项目版本一般跟父项目一致，故使用父项目的配置即可<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;properties&gt;</div><div class=\"line\">\t   &lt;teclan.version&gt;0.1.0-SNAPSHOT&lt;/teclan.version&gt;</div><div class=\"line\">    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</div><div class=\"line\">&lt;/properties&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"新建子项目-Module\"><a href=\"#新建子项目-Module\" class=\"headerlink\" title=\"新建子项目(Module)\"></a>新建子项目(Module)</h2><p> 配置同普通maven项目，例如创建示例Module项目 model-Demo1 和 model-Demo2,<br> 则在父项目的pom.xml中可看到增加如下内容<br> <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;modules&gt;</div><div class=\"line\">   &lt;module&gt;module-demo1&lt;/module&gt;</div><div class=\"line\"> \t&lt;module&gt;module-demo2&lt;/module&gt;</div><div class=\"line\"> &lt;/modules&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h1><p>子项目用到的共同依赖可以放到父项目中，如果子项目与父项目的依赖组件相同，但是版本号不同，<br>那么子项目会调用子项目的依赖组件</p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><p>在父项目下执行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mvn <span class=\"built_in\">test</span></div></pre></td></tr></table></figure></p>\n<p>会执行所以子项目的单元测试，例如示例项目中：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ path/to/project  mvn <span class=\"built_in\">test</span></div></pre></td></tr></table></figure></p>\n<p>结果如下：<br><img src=\"https://img.alicdn.com/imgextra/i4/1095268166/TB2q4wWspXXXXbIXXXXXXXXXXXX_!!1095268166.png\" alt=\"\"></p>\n<h1 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ path/to/project mvn package -Dmaven.test.skip=True</div></pre></td></tr></table></figure>\n<p>每个子项目单独打出jar,其他配置待后续更新…</p>\n"},{"title":"linux 装机必备","date":"2016-11-03T12:39:28.000Z","_content":"# 系统设置打不开\n重装桌面\n```\napt-get install ubuntu-desktop\n```\n# 右键打开终端\n安装 nautilus-open-terminal\n```\napt-get install nautilus-open-terminal\n```\n# 使用 oh-my-zsh\n```\napt-get install zsh\nsh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n\n# oh-my-zsh 替换 系统 bash\nchsh -s /bin/zsh\n```\n# 更新软件源\n\n## 备份系统系带软件源\n```\ncp /etc/apt/sources.list /etc/apt/sources.list_backup\n```\n## 使用新的软件源，例如 ustc 源，打开 sources.list，替换成以下内容\n```\ndeb http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse\ndeb http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\ndeb http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\ndeb http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse\ndeb http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\ndeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse\ndeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\ndeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\ndeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse\ndeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\n```\n## 刷新列表\n```\napt-get update\n# 如果出现以下异常，先将 apt 进程杀掉，重新执行 apt-get update 即可\n   E: Could not get lock /var/lib/apt/lists/lock - open (11 Resource temporarily unavailable)\n   E: Unable to lock the list directory\n```\n\n# 推荐\n\n## tilda\n```\napt-get install tilda\n```\n## htop\n```\napt-get install htop\n```\n## 全屏启动终端\nsystem-->All Setings-->Keyboard-->Shortcuts-->Custom Shortcuts,\n点击加号（+）添加快捷键名称和对应的命令，完成后选择应用。双击新建快捷键右侧设置快捷键\n","source":"_posts/linux-装机必备.md","raw":"---\ntitle: linux 装机必备\ndate: 2016-11-03 20:39:28\ntags: [linux,oh-my-zsh]\n---\n# 系统设置打不开\n重装桌面\n```\napt-get install ubuntu-desktop\n```\n# 右键打开终端\n安装 nautilus-open-terminal\n```\napt-get install nautilus-open-terminal\n```\n# 使用 oh-my-zsh\n```\napt-get install zsh\nsh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n\n# oh-my-zsh 替换 系统 bash\nchsh -s /bin/zsh\n```\n# 更新软件源\n\n## 备份系统系带软件源\n```\ncp /etc/apt/sources.list /etc/apt/sources.list_backup\n```\n## 使用新的软件源，例如 ustc 源，打开 sources.list，替换成以下内容\n```\ndeb http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse\ndeb http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\ndeb http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\ndeb http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse\ndeb http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\ndeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse\ndeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\ndeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\ndeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse\ndeb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\n```\n## 刷新列表\n```\napt-get update\n# 如果出现以下异常，先将 apt 进程杀掉，重新执行 apt-get update 即可\n   E: Could not get lock /var/lib/apt/lists/lock - open (11 Resource temporarily unavailable)\n   E: Unable to lock the list directory\n```\n\n# 推荐\n\n## tilda\n```\napt-get install tilda\n```\n## htop\n```\napt-get install htop\n```\n## 全屏启动终端\nsystem-->All Setings-->Keyboard-->Shortcuts-->Custom Shortcuts,\n点击加号（+）添加快捷键名称和对应的命令，完成后选择应用。双击新建快捷键右侧设置快捷键\n","slug":"linux-装机必备","published":1,"updated":"2017-08-18T13:17:27.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw8s000fjeh80wzoumht","content":"<h1 id=\"系统设置打不开\"><a href=\"#系统设置打不开\" class=\"headerlink\" title=\"系统设置打不开\"></a>系统设置打不开</h1><p>重装桌面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install ubuntu-desktop</div></pre></td></tr></table></figure></p>\n<h1 id=\"右键打开终端\"><a href=\"#右键打开终端\" class=\"headerlink\" title=\"右键打开终端\"></a>右键打开终端</h1><p>安装 nautilus-open-terminal<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install nautilus-open-terminal</div></pre></td></tr></table></figure></p>\n<h1 id=\"使用-oh-my-zsh\"><a href=\"#使用-oh-my-zsh\" class=\"headerlink\" title=\"使用 oh-my-zsh\"></a>使用 oh-my-zsh</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install zsh</div><div class=\"line\">sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div><div class=\"line\"></div><div class=\"line\"># oh-my-zsh 替换 系统 bash</div><div class=\"line\">chsh -s /bin/zsh</div></pre></td></tr></table></figure>\n<h1 id=\"更新软件源\"><a href=\"#更新软件源\" class=\"headerlink\" title=\"更新软件源\"></a>更新软件源</h1><h2 id=\"备份系统系带软件源\"><a href=\"#备份系统系带软件源\" class=\"headerlink\" title=\"备份系统系带软件源\"></a>备份系统系带软件源</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /etc/apt/sources.list /etc/apt/sources.list_backup</div></pre></td></tr></table></figure>\n<h2 id=\"使用新的软件源，例如-ustc-源，打开-sources-list，替换成以下内容\"><a href=\"#使用新的软件源，例如-ustc-源，打开-sources-list，替换成以下内容\" class=\"headerlink\" title=\"使用新的软件源，例如 ustc 源，打开 sources.list，替换成以下内容\"></a>使用新的软件源，例如 ustc 源，打开 sources.list，替换成以下内容</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</div><div class=\"line\">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</div><div class=\"line\">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</div><div class=\"line\">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class=\"line\">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</div><div class=\"line\">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</div><div class=\"line\">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</div><div class=\"line\">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</div><div class=\"line\">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class=\"line\">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</div></pre></td></tr></table></figure>\n<h2 id=\"刷新列表\"><a href=\"#刷新列表\" class=\"headerlink\" title=\"刷新列表\"></a>刷新列表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get update</div><div class=\"line\"># 如果出现以下异常，先将 apt 进程杀掉，重新执行 apt-get update 即可</div><div class=\"line\">   E: Could not get lock /var/lib/apt/lists/lock - open (11 Resource temporarily unavailable)</div><div class=\"line\">   E: Unable to lock the list directory</div></pre></td></tr></table></figure>\n<h1 id=\"推荐\"><a href=\"#推荐\" class=\"headerlink\" title=\"推荐\"></a>推荐</h1><h2 id=\"tilda\"><a href=\"#tilda\" class=\"headerlink\" title=\"tilda\"></a>tilda</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install tilda</div></pre></td></tr></table></figure>\n<h2 id=\"htop\"><a href=\"#htop\" class=\"headerlink\" title=\"htop\"></a>htop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install htop</div></pre></td></tr></table></figure>\n<h2 id=\"全屏启动终端\"><a href=\"#全屏启动终端\" class=\"headerlink\" title=\"全屏启动终端\"></a>全屏启动终端</h2><p>system–&gt;All Setings–&gt;Keyboard–&gt;Shortcuts–&gt;Custom Shortcuts,<br>点击加号（+）添加快捷键名称和对应的命令，完成后选择应用。双击新建快捷键右侧设置快捷键</p>\n","excerpt":"","more":"<h1 id=\"系统设置打不开\"><a href=\"#系统设置打不开\" class=\"headerlink\" title=\"系统设置打不开\"></a>系统设置打不开</h1><p>重装桌面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install ubuntu-desktop</div></pre></td></tr></table></figure></p>\n<h1 id=\"右键打开终端\"><a href=\"#右键打开终端\" class=\"headerlink\" title=\"右键打开终端\"></a>右键打开终端</h1><p>安装 nautilus-open-terminal<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install nautilus-open-terminal</div></pre></td></tr></table></figure></p>\n<h1 id=\"使用-oh-my-zsh\"><a href=\"#使用-oh-my-zsh\" class=\"headerlink\" title=\"使用 oh-my-zsh\"></a>使用 oh-my-zsh</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install zsh</div><div class=\"line\">sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div><div class=\"line\"></div><div class=\"line\"># oh-my-zsh 替换 系统 bash</div><div class=\"line\">chsh -s /bin/zsh</div></pre></td></tr></table></figure>\n<h1 id=\"更新软件源\"><a href=\"#更新软件源\" class=\"headerlink\" title=\"更新软件源\"></a>更新软件源</h1><h2 id=\"备份系统系带软件源\"><a href=\"#备份系统系带软件源\" class=\"headerlink\" title=\"备份系统系带软件源\"></a>备份系统系带软件源</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /etc/apt/sources.list /etc/apt/sources.list_backup</div></pre></td></tr></table></figure>\n<h2 id=\"使用新的软件源，例如-ustc-源，打开-sources-list，替换成以下内容\"><a href=\"#使用新的软件源，例如-ustc-源，打开-sources-list，替换成以下内容\" class=\"headerlink\" title=\"使用新的软件源，例如 ustc 源，打开 sources.list，替换成以下内容\"></a>使用新的软件源，例如 ustc 源，打开 sources.list，替换成以下内容</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</div><div class=\"line\">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</div><div class=\"line\">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</div><div class=\"line\">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class=\"line\">deb http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</div><div class=\"line\">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</div><div class=\"line\">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</div><div class=\"line\">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</div><div class=\"line\">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</div><div class=\"line\">deb-src http://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</div></pre></td></tr></table></figure>\n<h2 id=\"刷新列表\"><a href=\"#刷新列表\" class=\"headerlink\" title=\"刷新列表\"></a>刷新列表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get update</div><div class=\"line\"># 如果出现以下异常，先将 apt 进程杀掉，重新执行 apt-get update 即可</div><div class=\"line\">   E: Could not get lock /var/lib/apt/lists/lock - open (11 Resource temporarily unavailable)</div><div class=\"line\">   E: Unable to lock the list directory</div></pre></td></tr></table></figure>\n<h1 id=\"推荐\"><a href=\"#推荐\" class=\"headerlink\" title=\"推荐\"></a>推荐</h1><h2 id=\"tilda\"><a href=\"#tilda\" class=\"headerlink\" title=\"tilda\"></a>tilda</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install tilda</div></pre></td></tr></table></figure>\n<h2 id=\"htop\"><a href=\"#htop\" class=\"headerlink\" title=\"htop\"></a>htop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install htop</div></pre></td></tr></table></figure>\n<h2 id=\"全屏启动终端\"><a href=\"#全屏启动终端\" class=\"headerlink\" title=\"全屏启动终端\"></a>全屏启动终端</h2><p>system–&gt;All Setings–&gt;Keyboard–&gt;Shortcuts–&gt;Custom Shortcuts,<br>点击加号（+）添加快捷键名称和对应的命令，完成后选择应用。双击新建快捷键右侧设置快捷键</p>\n"},{"title":"mysql 中文乱码问题","date":"2016-08-29T08:36:46.000Z","_content":"\n\n### JDBC操作数据库中文乱码\n这种情况在跨平台数据操作出现的比较，一般常用的驱动和URL如下：\n```\nDRIVER：com.mysql.jdbc.Driver\nURL ： jdbc:mysql://%s:%d/%s\n```\n如果出现乱码，请在URL中指定连接的操作编码，如下:\n```\nDRIVER：com.mysql.jdbc.Driver\nURL ： jdbc:mysql://%s:%d/%s?useUnicode=true&characterEncoding=UTF-8\n```\n\n\n### 在数据表中插入中文数据异常\n错误详情\n```\nERROR 1366 (HY000): Incorrect string value:xxx\n```\n一般这种情况出现在直接使用控制台操作数据库，一般的方式是重建数据库或建表时指定编码，当然，\n如果能在安装数据库的时候就把相关参数配置正确，那是最好的\n#### 重建数据库\n```\ncreate database db_name;//此时使用的是默认编码，插入中文会乱码\nalter database db_name default character set gb2312 default collate gb2312_chinese_ci;//修改数据库的设置字符集和字符校对规则,之后中文不再乱码\n```\n#### 建表时指定编码和检验规则，例如\n```\ncreate table table_name(\n   id int primary key,\n   name varchar(100) character set gb2312 collate gb2312_chinese_ci\n)default character set gb2312 default collate gb2312_chinese_ci;\n```\n\n#### 其他参资料\n```\n# 查看MySQL能够支持的多种字符集：\nshow character set;\n\n# 查看字符集的校对规则：\nshow collation;\nshow collation like 'gb%';\n\n# 每个字符集有一个默认校对规则。\n# 创建数据库时设置字符集和字符校对规则：\ncreate database db_name default character set utf8 default collate utf8_general_ci;\n\n# 修改数据库的设置字符集和字符校对规则：\nalter database db_name default character set gb2312 default collate gb2312_chinese_ci;\n\n# 修改表的字符集与表的字符校对规则：\nalter table table_name default character set utf8 default collate utf8_general_ci;\n\n# 修改表的列的字符集与表的列的字符校对规则：\nalter table table_name modify name varchar(100) character set utf8 collate utf8_general_ci;\n\n# 查看表的字符集与字符校对规则：\nshow create table table_name;\n\n# 查看字符集系统变量：\nshow variables like 'character_set_%';\n# 查看校对规则系统变量：\nshow variables like 'collation_%';\n\n# 字符集系统变量介绍：\ncharacter_set_server：默认的内部操作字符集\ncharacter_set_client：客户端来源数据使用的字符集\ncharacter_set_connection：连接层字符集\ncharacter_set_results：查询结果字符集\ncharacter_set_database：当前选中数据库的默认字符集\ncharacter_set_system：系统元数据(字段名等)字符集\n\n```\n","source":"_posts/mysql-中文乱码问题.md","raw":"---\ntitle: mysql 中文乱码问题\ndate: 2016-08-29 16:36:46\ntags: [mysql,编码,乱码]\n---\n\n\n### JDBC操作数据库中文乱码\n这种情况在跨平台数据操作出现的比较，一般常用的驱动和URL如下：\n```\nDRIVER：com.mysql.jdbc.Driver\nURL ： jdbc:mysql://%s:%d/%s\n```\n如果出现乱码，请在URL中指定连接的操作编码，如下:\n```\nDRIVER：com.mysql.jdbc.Driver\nURL ： jdbc:mysql://%s:%d/%s?useUnicode=true&characterEncoding=UTF-8\n```\n\n\n### 在数据表中插入中文数据异常\n错误详情\n```\nERROR 1366 (HY000): Incorrect string value:xxx\n```\n一般这种情况出现在直接使用控制台操作数据库，一般的方式是重建数据库或建表时指定编码，当然，\n如果能在安装数据库的时候就把相关参数配置正确，那是最好的\n#### 重建数据库\n```\ncreate database db_name;//此时使用的是默认编码，插入中文会乱码\nalter database db_name default character set gb2312 default collate gb2312_chinese_ci;//修改数据库的设置字符集和字符校对规则,之后中文不再乱码\n```\n#### 建表时指定编码和检验规则，例如\n```\ncreate table table_name(\n   id int primary key,\n   name varchar(100) character set gb2312 collate gb2312_chinese_ci\n)default character set gb2312 default collate gb2312_chinese_ci;\n```\n\n#### 其他参资料\n```\n# 查看MySQL能够支持的多种字符集：\nshow character set;\n\n# 查看字符集的校对规则：\nshow collation;\nshow collation like 'gb%';\n\n# 每个字符集有一个默认校对规则。\n# 创建数据库时设置字符集和字符校对规则：\ncreate database db_name default character set utf8 default collate utf8_general_ci;\n\n# 修改数据库的设置字符集和字符校对规则：\nalter database db_name default character set gb2312 default collate gb2312_chinese_ci;\n\n# 修改表的字符集与表的字符校对规则：\nalter table table_name default character set utf8 default collate utf8_general_ci;\n\n# 修改表的列的字符集与表的列的字符校对规则：\nalter table table_name modify name varchar(100) character set utf8 collate utf8_general_ci;\n\n# 查看表的字符集与字符校对规则：\nshow create table table_name;\n\n# 查看字符集系统变量：\nshow variables like 'character_set_%';\n# 查看校对规则系统变量：\nshow variables like 'collation_%';\n\n# 字符集系统变量介绍：\ncharacter_set_server：默认的内部操作字符集\ncharacter_set_client：客户端来源数据使用的字符集\ncharacter_set_connection：连接层字符集\ncharacter_set_results：查询结果字符集\ncharacter_set_database：当前选中数据库的默认字符集\ncharacter_set_system：系统元数据(字段名等)字符集\n\n```\n","slug":"mysql-中文乱码问题","published":1,"updated":"2017-08-18T13:57:38.328Z","_id":"cj6hwvw8u000gjeh8x63kujlo","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"JDBC操作数据库中文乱码\"><a href=\"#JDBC操作数据库中文乱码\" class=\"headerlink\" title=\"JDBC操作数据库中文乱码\"></a>JDBC操作数据库中文乱码</h3><p>这种情况在跨平台数据操作出现的比较，一般常用的驱动和URL如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">DRIVER：com.mysql.jdbc.Driver</div><div class=\"line\">URL ： jdbc:mysql://%s:%d/%s</div></pre></td></tr></table></figure></p>\n<p>如果出现乱码，请在URL中指定连接的操作编码，如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">DRIVER：com.mysql.jdbc.Driver</div><div class=\"line\">URL ： jdbc:mysql://%s:%d/%s?useUnicode=true&amp;characterEncoding=UTF-8</div></pre></td></tr></table></figure></p>\n<h3 id=\"在数据表中插入中文数据异常\"><a href=\"#在数据表中插入中文数据异常\" class=\"headerlink\" title=\"在数据表中插入中文数据异常\"></a>在数据表中插入中文数据异常</h3><p>错误详情<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ERROR 1366 (HY000): Incorrect string value:xxx</div></pre></td></tr></table></figure></p>\n<p>一般这种情况出现在直接使用控制台操作数据库，一般的方式是重建数据库或建表时指定编码，当然，<br>如果能在安装数据库的时候就把相关参数配置正确，那是最好的</p>\n<h4 id=\"重建数据库\"><a href=\"#重建数据库\" class=\"headerlink\" title=\"重建数据库\"></a>重建数据库</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">create database db_name;//此时使用的是默认编码，插入中文会乱码</div><div class=\"line\">alter database db_name default character set gb2312 default collate gb2312_chinese_ci;//修改数据库的设置字符集和字符校对规则,之后中文不再乱码</div></pre></td></tr></table></figure>\n<h4 id=\"建表时指定编码和检验规则，例如\"><a href=\"#建表时指定编码和检验规则，例如\" class=\"headerlink\" title=\"建表时指定编码和检验规则，例如\"></a>建表时指定编码和检验规则，例如</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table table_name(</div><div class=\"line\">   id int primary key,</div><div class=\"line\">   name varchar(100) character set gb2312 collate gb2312_chinese_ci</div><div class=\"line\">)default character set gb2312 default collate gb2312_chinese_ci;</div></pre></td></tr></table></figure>\n<h4 id=\"其他参资料\"><a href=\"#其他参资料\" class=\"headerlink\" title=\"其他参资料\"></a>其他参资料</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 查看MySQL能够支持的多种字符集：</div><div class=\"line\">show character set;</div><div class=\"line\"></div><div class=\"line\"># 查看字符集的校对规则：</div><div class=\"line\">show collation;</div><div class=\"line\">show collation like &apos;gb%&apos;;</div><div class=\"line\"></div><div class=\"line\"># 每个字符集有一个默认校对规则。</div><div class=\"line\"># 创建数据库时设置字符集和字符校对规则：</div><div class=\"line\">create database db_name default character set utf8 default collate utf8_general_ci;</div><div class=\"line\"></div><div class=\"line\"># 修改数据库的设置字符集和字符校对规则：</div><div class=\"line\">alter database db_name default character set gb2312 default collate gb2312_chinese_ci;</div><div class=\"line\"></div><div class=\"line\"># 修改表的字符集与表的字符校对规则：</div><div class=\"line\">alter table table_name default character set utf8 default collate utf8_general_ci;</div><div class=\"line\"></div><div class=\"line\"># 修改表的列的字符集与表的列的字符校对规则：</div><div class=\"line\">alter table table_name modify name varchar(100) character set utf8 collate utf8_general_ci;</div><div class=\"line\"></div><div class=\"line\"># 查看表的字符集与字符校对规则：</div><div class=\"line\">show create table table_name;</div><div class=\"line\"></div><div class=\"line\"># 查看字符集系统变量：</div><div class=\"line\">show variables like &apos;character_set_%&apos;;</div><div class=\"line\"># 查看校对规则系统变量：</div><div class=\"line\">show variables like &apos;collation_%&apos;;</div><div class=\"line\"></div><div class=\"line\"># 字符集系统变量介绍：</div><div class=\"line\">character_set_server：默认的内部操作字符集</div><div class=\"line\">character_set_client：客户端来源数据使用的字符集</div><div class=\"line\">character_set_connection：连接层字符集</div><div class=\"line\">character_set_results：查询结果字符集</div><div class=\"line\">character_set_database：当前选中数据库的默认字符集</div><div class=\"line\">character_set_system：系统元数据(字段名等)字符集</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"JDBC操作数据库中文乱码\"><a href=\"#JDBC操作数据库中文乱码\" class=\"headerlink\" title=\"JDBC操作数据库中文乱码\"></a>JDBC操作数据库中文乱码</h3><p>这种情况在跨平台数据操作出现的比较，一般常用的驱动和URL如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">DRIVER：com.mysql.jdbc.Driver</div><div class=\"line\">URL ： jdbc:mysql://%s:%d/%s</div></pre></td></tr></table></figure></p>\n<p>如果出现乱码，请在URL中指定连接的操作编码，如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">DRIVER：com.mysql.jdbc.Driver</div><div class=\"line\">URL ： jdbc:mysql://%s:%d/%s?useUnicode=true&amp;characterEncoding=UTF-8</div></pre></td></tr></table></figure></p>\n<h3 id=\"在数据表中插入中文数据异常\"><a href=\"#在数据表中插入中文数据异常\" class=\"headerlink\" title=\"在数据表中插入中文数据异常\"></a>在数据表中插入中文数据异常</h3><p>错误详情<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ERROR 1366 (HY000): Incorrect string value:xxx</div></pre></td></tr></table></figure></p>\n<p>一般这种情况出现在直接使用控制台操作数据库，一般的方式是重建数据库或建表时指定编码，当然，<br>如果能在安装数据库的时候就把相关参数配置正确，那是最好的</p>\n<h4 id=\"重建数据库\"><a href=\"#重建数据库\" class=\"headerlink\" title=\"重建数据库\"></a>重建数据库</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">create database db_name;//此时使用的是默认编码，插入中文会乱码</div><div class=\"line\">alter database db_name default character set gb2312 default collate gb2312_chinese_ci;//修改数据库的设置字符集和字符校对规则,之后中文不再乱码</div></pre></td></tr></table></figure>\n<h4 id=\"建表时指定编码和检验规则，例如\"><a href=\"#建表时指定编码和检验规则，例如\" class=\"headerlink\" title=\"建表时指定编码和检验规则，例如\"></a>建表时指定编码和检验规则，例如</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table table_name(</div><div class=\"line\">   id int primary key,</div><div class=\"line\">   name varchar(100) character set gb2312 collate gb2312_chinese_ci</div><div class=\"line\">)default character set gb2312 default collate gb2312_chinese_ci;</div></pre></td></tr></table></figure>\n<h4 id=\"其他参资料\"><a href=\"#其他参资料\" class=\"headerlink\" title=\"其他参资料\"></a>其他参资料</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 查看MySQL能够支持的多种字符集：</div><div class=\"line\">show character set;</div><div class=\"line\"></div><div class=\"line\"># 查看字符集的校对规则：</div><div class=\"line\">show collation;</div><div class=\"line\">show collation like &apos;gb%&apos;;</div><div class=\"line\"></div><div class=\"line\"># 每个字符集有一个默认校对规则。</div><div class=\"line\"># 创建数据库时设置字符集和字符校对规则：</div><div class=\"line\">create database db_name default character set utf8 default collate utf8_general_ci;</div><div class=\"line\"></div><div class=\"line\"># 修改数据库的设置字符集和字符校对规则：</div><div class=\"line\">alter database db_name default character set gb2312 default collate gb2312_chinese_ci;</div><div class=\"line\"></div><div class=\"line\"># 修改表的字符集与表的字符校对规则：</div><div class=\"line\">alter table table_name default character set utf8 default collate utf8_general_ci;</div><div class=\"line\"></div><div class=\"line\"># 修改表的列的字符集与表的列的字符校对规则：</div><div class=\"line\">alter table table_name modify name varchar(100) character set utf8 collate utf8_general_ci;</div><div class=\"line\"></div><div class=\"line\"># 查看表的字符集与字符校对规则：</div><div class=\"line\">show create table table_name;</div><div class=\"line\"></div><div class=\"line\"># 查看字符集系统变量：</div><div class=\"line\">show variables like &apos;character_set_%&apos;;</div><div class=\"line\"># 查看校对规则系统变量：</div><div class=\"line\">show variables like &apos;collation_%&apos;;</div><div class=\"line\"></div><div class=\"line\"># 字符集系统变量介绍：</div><div class=\"line\">character_set_server：默认的内部操作字符集</div><div class=\"line\">character_set_client：客户端来源数据使用的字符集</div><div class=\"line\">character_set_connection：连接层字符集</div><div class=\"line\">character_set_results：查询结果字符集</div><div class=\"line\">character_set_database：当前选中数据库的默认字符集</div><div class=\"line\">character_set_system：系统元数据(字段名等)字符集</div></pre></td></tr></table></figure>\n"},{"title":"oracle 数据库常见异常与配置","date":"2017-06-20T11:37:14.000Z","_content":"\n### 连接被拒绝\n\n错误报告-\nCaused by: java.sql.SQLException: Listener refused the connection with the following error:\nORA-12519, TNS:no appropriate service handler found\n\n解决办法：\n\n1、查看当前连接数\n```\nselect count(*) from v$process;\n```\n2、查看数据库允许的最大连接数\n```\nselect value from v$parameter where name = 'processes';\n```\n3、修改最大连接数（重启生效）:\n```\nalter system set processes = 300 scope = spfile;\n```\n\n### 模式空间不足\n\n错误报告 -\nORA-01653: 表 SYSTEM.XNV73 无法通过 8 (在表空间 SYSTEM 中) 扩展\nORA-06512: 在 line 24\n01653. 00000 -  \"unable to extend table %s.%s by %s in tablespace %s\"\nCause:    Failed to allocate an extent of the required number of blocks for\n           a table segment in the tablespace indicated.\nAction:   Use ALTER TABLESPACE ADD DATAFILE statement to add one or more\n           files to the tablespace indicated.\n\n解决办法：\n1、查看指定模式的磁盘存储路径\n```\nSELECT FILE_NAME, BYTES FROM DBA_DATA_FILES WHERE TABLESPACE_NAME = 'SYSTEM'; # 形如：// /u01/app/oracle/oradata/XE/system.dbf\n```\n2、添加磁盘空间（添加的磁盘空间不能任意设置，必须是数据库目录下，建议与默认位置相同）\n```\nALTER TABLESPACE SYSTEM ADD DATAFILE '/u01/app/oracle/oradata/XE/system01.dbf' SIZE 500M;\n```\n### 数据库中文乱码\n\n通过ORACLE的SQL PLUS修改服务器端字符集，在SQL*PLUS 中，以DBA登录\nconn 用户名 as sysdba\n然后执行以下命令\n```\nshutdown immediate; (把database停了)\nstartup mount; (把database重开去可更改情況)\nalter system enable restricted session;\nalter system set job_queue_processes=0;\nalter system set aq_tm_processes=0;\nalter database open;\nalter database character set utf8; # 执行失败时，尝试强制转化\n# alter database character set internal_use utf8;(强制转换编码格式，有可能会导致数据库中的中文变成乱码)\nshutdown immediate;\nstartup;\n```\n\n### 创建用户与授权\n\n#### 1、创建用户\n```\n create user 用户名 identified by 口令;\n ```\n#### 2、权限与角色\n > oracle为兼容以前版本，提供三种标准角色（role）:connect/resource和dba。\n 三种标准角色：\n      1). connect role(连接角色)\n      临时用户，特指不需要建表的用户，通常只赋予他们connect role.connect是使用oracle简单权限，这种权限只对其他用户的表有访问权限，\n      包括select/insert/update和delete等。拥有connect role 的用户还能够创建表、视图、序列（sequence）、簇（cluster）、\n      同义词(synonym)、回话（session）和其他  数据的链（link）。\n      2). resource role(资源角色)\n      更可靠和正式的数据库用户可以授予resource role。resource提供给用户另外的权限以创建他们自己的表、序列、过程(procedure)、触发器(trigger)、索引(index)和簇(cluster)。\n      3). dba role(数据库管理员角色)\n      dba role拥有所有的系统权限，包括无限制的空间限额和给其他用户授予各种权限的能力。system由dba用户拥有。\n      此外，用户还可以在oracle创建自己的role。用户创建的role可以由表或系统权限或两者的组合构成。为了创建role，用户必须具有create role系统权限。\n\n##### 2.1、授权\n```\n grant connect, resource to 用户名;\n```\n##### 2.2、撤销权限\n\n```\n revoke connect, resource from 用户名;\n```\n##### 2.3、创建角色\n```\n create role 角色名;\n ```\n##### 2.4、授权角色\n```\ngrant select on 表名 to 角色名;\n```\n例如：\n```\n grant select on 表名 to testRole; # 现在，拥有testRole角色的所有用户都具有对 [表名] 的select查询权限\n ```\n##### 2.5、删除角色\n```\n drop role 角色名;\n ```\n","source":"_posts/oracle-数据库常见异常与配置.md","raw":"---\ntitle: oracle 数据库常见异常与配置\ndate: 2017-06-20 19:37:14\ntags: [oracle,编码,乱码]\n---\n\n### 连接被拒绝\n\n错误报告-\nCaused by: java.sql.SQLException: Listener refused the connection with the following error:\nORA-12519, TNS:no appropriate service handler found\n\n解决办法：\n\n1、查看当前连接数\n```\nselect count(*) from v$process;\n```\n2、查看数据库允许的最大连接数\n```\nselect value from v$parameter where name = 'processes';\n```\n3、修改最大连接数（重启生效）:\n```\nalter system set processes = 300 scope = spfile;\n```\n\n### 模式空间不足\n\n错误报告 -\nORA-01653: 表 SYSTEM.XNV73 无法通过 8 (在表空间 SYSTEM 中) 扩展\nORA-06512: 在 line 24\n01653. 00000 -  \"unable to extend table %s.%s by %s in tablespace %s\"\nCause:    Failed to allocate an extent of the required number of blocks for\n           a table segment in the tablespace indicated.\nAction:   Use ALTER TABLESPACE ADD DATAFILE statement to add one or more\n           files to the tablespace indicated.\n\n解决办法：\n1、查看指定模式的磁盘存储路径\n```\nSELECT FILE_NAME, BYTES FROM DBA_DATA_FILES WHERE TABLESPACE_NAME = 'SYSTEM'; # 形如：// /u01/app/oracle/oradata/XE/system.dbf\n```\n2、添加磁盘空间（添加的磁盘空间不能任意设置，必须是数据库目录下，建议与默认位置相同）\n```\nALTER TABLESPACE SYSTEM ADD DATAFILE '/u01/app/oracle/oradata/XE/system01.dbf' SIZE 500M;\n```\n### 数据库中文乱码\n\n通过ORACLE的SQL PLUS修改服务器端字符集，在SQL*PLUS 中，以DBA登录\nconn 用户名 as sysdba\n然后执行以下命令\n```\nshutdown immediate; (把database停了)\nstartup mount; (把database重开去可更改情況)\nalter system enable restricted session;\nalter system set job_queue_processes=0;\nalter system set aq_tm_processes=0;\nalter database open;\nalter database character set utf8; # 执行失败时，尝试强制转化\n# alter database character set internal_use utf8;(强制转换编码格式，有可能会导致数据库中的中文变成乱码)\nshutdown immediate;\nstartup;\n```\n\n### 创建用户与授权\n\n#### 1、创建用户\n```\n create user 用户名 identified by 口令;\n ```\n#### 2、权限与角色\n > oracle为兼容以前版本，提供三种标准角色（role）:connect/resource和dba。\n 三种标准角色：\n      1). connect role(连接角色)\n      临时用户，特指不需要建表的用户，通常只赋予他们connect role.connect是使用oracle简单权限，这种权限只对其他用户的表有访问权限，\n      包括select/insert/update和delete等。拥有connect role 的用户还能够创建表、视图、序列（sequence）、簇（cluster）、\n      同义词(synonym)、回话（session）和其他  数据的链（link）。\n      2). resource role(资源角色)\n      更可靠和正式的数据库用户可以授予resource role。resource提供给用户另外的权限以创建他们自己的表、序列、过程(procedure)、触发器(trigger)、索引(index)和簇(cluster)。\n      3). dba role(数据库管理员角色)\n      dba role拥有所有的系统权限，包括无限制的空间限额和给其他用户授予各种权限的能力。system由dba用户拥有。\n      此外，用户还可以在oracle创建自己的role。用户创建的role可以由表或系统权限或两者的组合构成。为了创建role，用户必须具有create role系统权限。\n\n##### 2.1、授权\n```\n grant connect, resource to 用户名;\n```\n##### 2.2、撤销权限\n\n```\n revoke connect, resource from 用户名;\n```\n##### 2.3、创建角色\n```\n create role 角色名;\n ```\n##### 2.4、授权角色\n```\ngrant select on 表名 to 角色名;\n```\n例如：\n```\n grant select on 表名 to testRole; # 现在，拥有testRole角色的所有用户都具有对 [表名] 的select查询权限\n ```\n##### 2.5、删除角色\n```\n drop role 角色名;\n ```\n","slug":"oracle-数据库常见异常与配置","published":1,"updated":"2017-08-18T13:56:28.891Z","_id":"cj6hwvw8w000ijeh83gef7ise","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"连接被拒绝\"><a href=\"#连接被拒绝\" class=\"headerlink\" title=\"连接被拒绝\"></a>连接被拒绝</h3><p>错误报告-<br>Caused by: java.sql.SQLException: Listener refused the connection with the following error:<br>ORA-12519, TNS:no appropriate service handler found</p>\n<p>解决办法：</p>\n<p>1、查看当前连接数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select count(*) from v$process;</div></pre></td></tr></table></figure></p>\n<p>2、查看数据库允许的最大连接数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select value from v$parameter where name = &apos;processes&apos;;</div></pre></td></tr></table></figure></p>\n<p>3、修改最大连接数（重启生效）:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter system set processes = 300 scope = spfile;</div></pre></td></tr></table></figure></p>\n<h3 id=\"模式空间不足\"><a href=\"#模式空间不足\" class=\"headerlink\" title=\"模式空间不足\"></a>模式空间不足</h3><p>错误报告 -<br>ORA-01653: 表 SYSTEM.XNV73 无法通过 8 (在表空间 SYSTEM 中) 扩展<br>ORA-06512: 在 line 24</p>\n<ol>\n<li>00000 -  “unable to extend table %s.%s by %s in tablespace %s”<br>Cause:    Failed to allocate an extent of the required number of blocks for<pre><code>a table segment in the tablespace indicated.\n</code></pre>Action:   Use ALTER TABLESPACE ADD DATAFILE statement to add one or more<pre><code>files to the tablespace indicated.\n</code></pre></li>\n</ol>\n<p>解决办法：<br>1、查看指定模式的磁盘存储路径<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT FILE_NAME, BYTES FROM DBA_DATA_FILES WHERE TABLESPACE_NAME = &apos;SYSTEM&apos;; # 形如：// /u01/app/oracle/oradata/XE/system.dbf</div></pre></td></tr></table></figure></p>\n<p>2、添加磁盘空间（添加的磁盘空间不能任意设置，必须是数据库目录下，建议与默认位置相同）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ALTER TABLESPACE SYSTEM ADD DATAFILE &apos;/u01/app/oracle/oradata/XE/system01.dbf&apos; SIZE 500M;</div></pre></td></tr></table></figure></p>\n<h3 id=\"数据库中文乱码\"><a href=\"#数据库中文乱码\" class=\"headerlink\" title=\"数据库中文乱码\"></a>数据库中文乱码</h3><p>通过ORACLE的SQL PLUS修改服务器端字符集，在SQL*PLUS 中，以DBA登录<br>conn 用户名 as sysdba<br>然后执行以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">shutdown immediate; (把database停了)</div><div class=\"line\">startup mount; (把database重开去可更改情況)</div><div class=\"line\">alter system enable restricted session;</div><div class=\"line\">alter system set job_queue_processes=0;</div><div class=\"line\">alter system set aq_tm_processes=0;</div><div class=\"line\">alter database open;</div><div class=\"line\">alter database character set utf8; # 执行失败时，尝试强制转化</div><div class=\"line\"># alter database character set internal_use utf8;(强制转换编码格式，有可能会导致数据库中的中文变成乱码)</div><div class=\"line\">shutdown immediate;</div><div class=\"line\">startup;</div></pre></td></tr></table></figure></p>\n<h3 id=\"创建用户与授权\"><a href=\"#创建用户与授权\" class=\"headerlink\" title=\"创建用户与授权\"></a>创建用户与授权</h3><h4 id=\"1、创建用户\"><a href=\"#1、创建用户\" class=\"headerlink\" title=\"1、创建用户\"></a>1、创建用户</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create user 用户名 identified by 口令;</div></pre></td></tr></table></figure>\n<h4 id=\"2、权限与角色\"><a href=\"#2、权限与角色\" class=\"headerlink\" title=\"2、权限与角色\"></a>2、权限与角色</h4><blockquote>\n<p>oracle为兼容以前版本，提供三种标准角色（role）:connect/resource和dba。<br> 三种标准角色：<br>      1). connect role(连接角色)<br>      临时用户，特指不需要建表的用户，通常只赋予他们connect role.connect是使用oracle简单权限，这种权限只对其他用户的表有访问权限，<br>      包括select/insert/update和delete等。拥有connect role 的用户还能够创建表、视图、序列（sequence）、簇（cluster）、<br>      同义词(synonym)、回话（session）和其他  数据的链（link）。<br>      2). resource role(资源角色)<br>      更可靠和正式的数据库用户可以授予resource role。resource提供给用户另外的权限以创建他们自己的表、序列、过程(procedure)、触发器(trigger)、索引(index)和簇(cluster)。<br>      3). dba role(数据库管理员角色)<br>      dba role拥有所有的系统权限，包括无限制的空间限额和给其他用户授予各种权限的能力。system由dba用户拥有。<br>      此外，用户还可以在oracle创建自己的role。用户创建的role可以由表或系统权限或两者的组合构成。为了创建role，用户必须具有create role系统权限。</p>\n</blockquote>\n<h5 id=\"2-1、授权\"><a href=\"#2-1、授权\" class=\"headerlink\" title=\"2.1、授权\"></a>2.1、授权</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grant connect, resource to 用户名;</div></pre></td></tr></table></figure>\n<h5 id=\"2-2、撤销权限\"><a href=\"#2-2、撤销权限\" class=\"headerlink\" title=\"2.2、撤销权限\"></a>2.2、撤销权限</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">revoke connect, resource from 用户名;</div></pre></td></tr></table></figure>\n<h5 id=\"2-3、创建角色\"><a href=\"#2-3、创建角色\" class=\"headerlink\" title=\"2.3、创建角色\"></a>2.3、创建角色</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create role 角色名;</div></pre></td></tr></table></figure>\n<h5 id=\"2-4、授权角色\"><a href=\"#2-4、授权角色\" class=\"headerlink\" title=\"2.4、授权角色\"></a>2.4、授权角色</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grant select on 表名 to 角色名;</div></pre></td></tr></table></figure>\n<p>例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grant select on 表名 to testRole; # 现在，拥有testRole角色的所有用户都具有对 [表名] 的select查询权限</div></pre></td></tr></table></figure></p>\n<h5 id=\"2-5、删除角色\"><a href=\"#2-5、删除角色\" class=\"headerlink\" title=\"2.5、删除角色\"></a>2.5、删除角色</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop role 角色名;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"连接被拒绝\"><a href=\"#连接被拒绝\" class=\"headerlink\" title=\"连接被拒绝\"></a>连接被拒绝</h3><p>错误报告-<br>Caused by: java.sql.SQLException: Listener refused the connection with the following error:<br>ORA-12519, TNS:no appropriate service handler found</p>\n<p>解决办法：</p>\n<p>1、查看当前连接数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select count(*) from v$process;</div></pre></td></tr></table></figure></p>\n<p>2、查看数据库允许的最大连接数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select value from v$parameter where name = &apos;processes&apos;;</div></pre></td></tr></table></figure></p>\n<p>3、修改最大连接数（重启生效）:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter system set processes = 300 scope = spfile;</div></pre></td></tr></table></figure></p>\n<h3 id=\"模式空间不足\"><a href=\"#模式空间不足\" class=\"headerlink\" title=\"模式空间不足\"></a>模式空间不足</h3><p>错误报告 -<br>ORA-01653: 表 SYSTEM.XNV73 无法通过 8 (在表空间 SYSTEM 中) 扩展<br>ORA-06512: 在 line 24</p>\n<ol>\n<li>00000 -  “unable to extend table %s.%s by %s in tablespace %s”<br>Cause:    Failed to allocate an extent of the required number of blocks for<pre><code>a table segment in the tablespace indicated.\n</code></pre>Action:   Use ALTER TABLESPACE ADD DATAFILE statement to add one or more<pre><code>files to the tablespace indicated.\n</code></pre></li>\n</ol>\n<p>解决办法：<br>1、查看指定模式的磁盘存储路径<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT FILE_NAME, BYTES FROM DBA_DATA_FILES WHERE TABLESPACE_NAME = &apos;SYSTEM&apos;; # 形如：// /u01/app/oracle/oradata/XE/system.dbf</div></pre></td></tr></table></figure></p>\n<p>2、添加磁盘空间（添加的磁盘空间不能任意设置，必须是数据库目录下，建议与默认位置相同）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ALTER TABLESPACE SYSTEM ADD DATAFILE &apos;/u01/app/oracle/oradata/XE/system01.dbf&apos; SIZE 500M;</div></pre></td></tr></table></figure></p>\n<h3 id=\"数据库中文乱码\"><a href=\"#数据库中文乱码\" class=\"headerlink\" title=\"数据库中文乱码\"></a>数据库中文乱码</h3><p>通过ORACLE的SQL PLUS修改服务器端字符集，在SQL*PLUS 中，以DBA登录<br>conn 用户名 as sysdba<br>然后执行以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">shutdown immediate; (把database停了)</div><div class=\"line\">startup mount; (把database重开去可更改情況)</div><div class=\"line\">alter system enable restricted session;</div><div class=\"line\">alter system set job_queue_processes=0;</div><div class=\"line\">alter system set aq_tm_processes=0;</div><div class=\"line\">alter database open;</div><div class=\"line\">alter database character set utf8; # 执行失败时，尝试强制转化</div><div class=\"line\"># alter database character set internal_use utf8;(强制转换编码格式，有可能会导致数据库中的中文变成乱码)</div><div class=\"line\">shutdown immediate;</div><div class=\"line\">startup;</div></pre></td></tr></table></figure></p>\n<h3 id=\"创建用户与授权\"><a href=\"#创建用户与授权\" class=\"headerlink\" title=\"创建用户与授权\"></a>创建用户与授权</h3><h4 id=\"1、创建用户\"><a href=\"#1、创建用户\" class=\"headerlink\" title=\"1、创建用户\"></a>1、创建用户</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create user 用户名 identified by 口令;</div></pre></td></tr></table></figure>\n<h4 id=\"2、权限与角色\"><a href=\"#2、权限与角色\" class=\"headerlink\" title=\"2、权限与角色\"></a>2、权限与角色</h4><blockquote>\n<p>oracle为兼容以前版本，提供三种标准角色（role）:connect/resource和dba。<br> 三种标准角色：<br>      1). connect role(连接角色)<br>      临时用户，特指不需要建表的用户，通常只赋予他们connect role.connect是使用oracle简单权限，这种权限只对其他用户的表有访问权限，<br>      包括select/insert/update和delete等。拥有connect role 的用户还能够创建表、视图、序列（sequence）、簇（cluster）、<br>      同义词(synonym)、回话（session）和其他  数据的链（link）。<br>      2). resource role(资源角色)<br>      更可靠和正式的数据库用户可以授予resource role。resource提供给用户另外的权限以创建他们自己的表、序列、过程(procedure)、触发器(trigger)、索引(index)和簇(cluster)。<br>      3). dba role(数据库管理员角色)<br>      dba role拥有所有的系统权限，包括无限制的空间限额和给其他用户授予各种权限的能力。system由dba用户拥有。<br>      此外，用户还可以在oracle创建自己的role。用户创建的role可以由表或系统权限或两者的组合构成。为了创建role，用户必须具有create role系统权限。</p>\n</blockquote>\n<h5 id=\"2-1、授权\"><a href=\"#2-1、授权\" class=\"headerlink\" title=\"2.1、授权\"></a>2.1、授权</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grant connect, resource to 用户名;</div></pre></td></tr></table></figure>\n<h5 id=\"2-2、撤销权限\"><a href=\"#2-2、撤销权限\" class=\"headerlink\" title=\"2.2、撤销权限\"></a>2.2、撤销权限</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">revoke connect, resource from 用户名;</div></pre></td></tr></table></figure>\n<h5 id=\"2-3、创建角色\"><a href=\"#2-3、创建角色\" class=\"headerlink\" title=\"2.3、创建角色\"></a>2.3、创建角色</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create role 角色名;</div></pre></td></tr></table></figure>\n<h5 id=\"2-4、授权角色\"><a href=\"#2-4、授权角色\" class=\"headerlink\" title=\"2.4、授权角色\"></a>2.4、授权角色</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grant select on 表名 to 角色名;</div></pre></td></tr></table></figure>\n<p>例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grant select on 表名 to testRole; # 现在，拥有testRole角色的所有用户都具有对 [表名] 的select查询权限</div></pre></td></tr></table></figure></p>\n<h5 id=\"2-5、删除角色\"><a href=\"#2-5、删除角色\" class=\"headerlink\" title=\"2.5、删除角色\"></a>2.5、删除角色</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop role 角色名;</div></pre></td></tr></table></figure>\n"},{"title":"oracle学习笔记","date":"2016-10-09T05:41:12.000Z","_content":"\n##### 连接数据库\n```\n# 使用操作系统认证连接数据库，无需密码\n>sqlplus \"/as sysdba\"\n```\n##### 查看数据库动态表实例\n若查询结果为 OPEN 则说明数据库运行正常。oracle动态表通常以v$开头，动态表不允许手工更改，动态表属于字典表\n```\n select status from v$instance;\n```\n##### 关闭和启动数据库\n```\n# 关闭数据库\n shutdown immediate\n# 启动数据库\n startup\n```\n##### 查看当前数据库名称\n```\n show parameter db_name\n```\n##### 查询某个用户的状态\n字典表 dba_users 存放所有用户的信息，oracle中所有英文字母不区分大小写，但如果是在代码中，建议都用大写字母\n```\n# 查询用户 scott 的状态\n select username,account_status from dba_users where username='scott'\n```\n##### 查看表有哪些列\n```\n# 查看表 user_tables 有哪些列\n desc user_tables;\n```\n##### 解锁用户\n```\n# 解锁 SCOTT\n alter user scott account unlock;\n# 验证是否已经解锁,如果结果提示账户到期，那么使用旧密码登录后并设置新密码即可解除到期状态\n select username,account_status from dba_users where username='scott'\n```\n##### 查看数据库用户\n```\n show user\n```\n##### 使用普通用户登陆数据库\n```\n# 使用scott登录,默认密码tiger\n sqlplus scott/tiger\n# 如果已经使用其他用户连接数据库，则可以使用以下命令切换至scott\n conn  scott/tiger\n# 如果账户到期，提示 the password has expired,需要重新设置密码,假设设置新口令为 cat\n新口令:cat\n重新键入新口令:cat\n# 之后会提示口令已更改，并已经连接数据库\n# 验证当前用户\n show user\n```\n##### 更改会话时间格式\n```\n# 更改会话时间格式为 YYYY-MM-DD，默认格式是美国时间格式\n alter session set nls_date_format='YYYY-MM-DD';\n```\n##### 查询数据库当前时间\ndual 是oracle中的虚表，设计系统常量，计算等时可以使用dual表\n```\n select sysdate from dual;\n```\n##### 把表数据复制到一张新表\n> 这种方式只是单纯的复制数据，表的约束并没有复制过去\n\n```\n# 创建一张新表 business_copy,并且将 business 表中的全部数据复制到 business_copy\n create table business_copy as select * from business;\n```\n##### 从一个表将数据导入另一个表\n> 要求两个表的字段，顺序要一致\n\n```\n# business_copy 的数据倒入 business\n insert into business (colume1,colume2,...,columen) select * from business_copy;\n```\n##### 添加表字段\n```\n# 给表 business 添加字段 manager\n alter table business add (manager varchar2(50));\n```\n##### 修改表字段\n```\n# 给表 business 字段 manager 最大长度为 100\n alter table business modify (manager varchar2(100));\n```\n##### 删除表字段\n```\n# 删除表 business 字段 manager\n alter table business drop column manager;\n```\n##### 创建数据库用户\n```\ncreate user teclan identified by 123456;\n```\n##### 授权连接权限\n```\n# 赋予用户 teclan 连接数据库权限\ngrant connect to teclan;\n```\n##### 授权查询权限\n```\n# 赋予 teclan 对 business 表查询权限，假设 business 属于scott,即使 teclan\n# 有查询权限，在查询时也必须指定表的schema SCOTT\ngrant select on business to teclan\n```\n##### 取消查询权限\n```\n# 取消 teclan 对 business 表的查询权限,该命令由管理员或授权者执行\nrevoke select on business to teclan\n```\n##### 多权限授予\n```\n# 赋予 teclan 对 business 表查询,插入，删除，更新权限\ngrant select,insert,delete,update on business to teclan;\n```\n##### 删除用户\n```\n# 删除用户 teclan\ndrop user teclan;\n# 删除用户 teclan 以及关联的表\ndrop user teclan cascade;\n```\n##### 查看当前用户权限\n```\nselect * from session_privs;\n```\n##### 查看当前用户角色\n```\nselect * from user_role_prives;\n```\n\n##### 函数示例\n函数一般用于数据查询，分析，处理\n```\nCREATE OR REPLACE get_sal(emp_no IN NUMBER)\nRETURN NUMBER\nLS  emp_sal NUMBER(7,2)\nBEGIN\n  SELECT sal INTO emp_sal FROM emp WHERE empno = emp_no;\n  RETURN(emp_sal);\nEND;\n```\n##### 调用函数\n```\nselect get_sal(10086) from dual;\n```\n##### 存储过程示例\n存储过程一般是要执行的SQL组合\n```\ncreate or replace procedure deleteInfo(empid in number)\nbegin\n  delete from emp where emp.id = empid;\n  commit;\nend deleteInfo;\n```\n##### 调用存储过程\n```\nexecute deleteInfo(1352);\n```\n##### 创建索引\n```\ncreate index id_business on business(id);\n```\n##### 同义词\n同义词（Synonym），即别名，分私有别名和公共别名，如访问表必须加上用户名，可以使用别名来解决\n\n```\n# 查询是否具有创建别名的权限,查询结果为空则表示无权限\nselect * from session_privs where privilege like '%SYNONYM%';\n# 如果没有权限，赋予 teclan 创建别名权限(私有)，需要管理员权限\ngrant create any synonym to teclan\n\n# 创建别名(私有)\ncreate synonym bs for business;\n# 通过别名查询\nselect * from bs;\n\n# 如果没有权限，赋予 teclan 创建别名权限(公共)，需要管理员权限\ngrant create public synonym to teclan\n\n# 创建别名（公共）\ncreate public synonym busin for teclab.business\n# 通过别名查询,当前用户不是teclan的情况\nselect * from busin;\n```\n##### 查询表空间信息\n```\nselect tablespace_name as \"表空间名称\"，\n       block_size/1024 as \"数据块存储大小（KB）\",\n       satatus         as \"表空间的状态\",\n       contents        as \"表空间类型\",\n       logging         as \"是否有日志记录\",\nfrom dba_tablespace;\n```\n##### 查看数据说明文件\n```\nselect t.tablespace_name as \"表空间名称\",\n       t.file_name       as \"数据文件路径\",\n       t.bytes           as \"数据文件大小（MB）\",\n       t.autoextendsible as \"数据文件是否自动扩展\",\n       t.maxbytes        as \"数据文件最大（MB）\",\nfrom dba_data_files t;\n```\n##### 查看重做日志\n```\n# STATUS：STALE为已经提交到数据中，空白为正在使用该文件\nselect * from v$logfile;\n```\n##### 恢复刚才受影响的一条数据\n```\n# 假设先执行如下sql，删除一条记录\ndelete from emp where ename='FORD';\n# 以 SYS 登录数据库，或者对 flashback_transaction_query 有查询权限的用户登录，该表属于 SYS\n# undo_sql 即为恢复的sql，将其复制到到命令窗口执行即可\nselect t.start_timestamp,\n       t.commit_timestamp,\n       t.logon_user,\n       t.operation,\n       t.table_name,\n       t.table_owner,\n       t.undo_sql\nfrom flashback_transaction_query where t.table_name = 'EMP';\n```\n##### 恢复被大量受影响的记录\n```\n# 假设 emp 表有100万条记录，执行了 update emp set job = 'analyst';\n# 如果按照恢复一条数据的做法，那么将需要操作100万次，这个方法至少手工是不可能的\n# 我们假设 update emp set job = 'analyst'; 是在10分钟之前执行的\n# 先查看当前系统时间,假设当前时间为 2016-10-11 14：20：00\nselect sysdate from dual;\n\n# 查询 emp 表 10分钟前的数据,如果时间确定正确，查询到的数据就应该是执行 update emp set job = 'analyst'; 的数据\nselect * from emp as of timestamp to_timestamp('2016-10-11 14：10：00','yyyy-mm-dd hh24:mi:ss');\n\n# 使用数据库的闪回功能恢复数据\n# 更改 emp 表的行好\nalter table emp enable row movement；\n# 恢复到10分钟前的数据\nflasshback table emp to timestamp to_timestamp('2016-10-11 14：10：00','yyyy-mm-dd hh24:mi:ss');\n```\n##### 恢复删除的表\n```\n# 删除 emp表（可以是非空表）\ndrop table emp;\n\n# 查看回收站中是否存在 emp表，一般情况下可以省略此操作\nselect * from user_recyclebin order by droptime desc;\n或\nselect * froom recyclebin order by droptime desc;\n\n# 使用闪回恢复表\nflashback table emp to before drop;\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n","source":"_posts/oracle学习笔记.md","raw":"---\ntitle: oracle学习笔记\ndate: 2016-10-09 13:41:12\ntags: [oracle]\n---\n\n##### 连接数据库\n```\n# 使用操作系统认证连接数据库，无需密码\n>sqlplus \"/as sysdba\"\n```\n##### 查看数据库动态表实例\n若查询结果为 OPEN 则说明数据库运行正常。oracle动态表通常以v$开头，动态表不允许手工更改，动态表属于字典表\n```\n select status from v$instance;\n```\n##### 关闭和启动数据库\n```\n# 关闭数据库\n shutdown immediate\n# 启动数据库\n startup\n```\n##### 查看当前数据库名称\n```\n show parameter db_name\n```\n##### 查询某个用户的状态\n字典表 dba_users 存放所有用户的信息，oracle中所有英文字母不区分大小写，但如果是在代码中，建议都用大写字母\n```\n# 查询用户 scott 的状态\n select username,account_status from dba_users where username='scott'\n```\n##### 查看表有哪些列\n```\n# 查看表 user_tables 有哪些列\n desc user_tables;\n```\n##### 解锁用户\n```\n# 解锁 SCOTT\n alter user scott account unlock;\n# 验证是否已经解锁,如果结果提示账户到期，那么使用旧密码登录后并设置新密码即可解除到期状态\n select username,account_status from dba_users where username='scott'\n```\n##### 查看数据库用户\n```\n show user\n```\n##### 使用普通用户登陆数据库\n```\n# 使用scott登录,默认密码tiger\n sqlplus scott/tiger\n# 如果已经使用其他用户连接数据库，则可以使用以下命令切换至scott\n conn  scott/tiger\n# 如果账户到期，提示 the password has expired,需要重新设置密码,假设设置新口令为 cat\n新口令:cat\n重新键入新口令:cat\n# 之后会提示口令已更改，并已经连接数据库\n# 验证当前用户\n show user\n```\n##### 更改会话时间格式\n```\n# 更改会话时间格式为 YYYY-MM-DD，默认格式是美国时间格式\n alter session set nls_date_format='YYYY-MM-DD';\n```\n##### 查询数据库当前时间\ndual 是oracle中的虚表，设计系统常量，计算等时可以使用dual表\n```\n select sysdate from dual;\n```\n##### 把表数据复制到一张新表\n> 这种方式只是单纯的复制数据，表的约束并没有复制过去\n\n```\n# 创建一张新表 business_copy,并且将 business 表中的全部数据复制到 business_copy\n create table business_copy as select * from business;\n```\n##### 从一个表将数据导入另一个表\n> 要求两个表的字段，顺序要一致\n\n```\n# business_copy 的数据倒入 business\n insert into business (colume1,colume2,...,columen) select * from business_copy;\n```\n##### 添加表字段\n```\n# 给表 business 添加字段 manager\n alter table business add (manager varchar2(50));\n```\n##### 修改表字段\n```\n# 给表 business 字段 manager 最大长度为 100\n alter table business modify (manager varchar2(100));\n```\n##### 删除表字段\n```\n# 删除表 business 字段 manager\n alter table business drop column manager;\n```\n##### 创建数据库用户\n```\ncreate user teclan identified by 123456;\n```\n##### 授权连接权限\n```\n# 赋予用户 teclan 连接数据库权限\ngrant connect to teclan;\n```\n##### 授权查询权限\n```\n# 赋予 teclan 对 business 表查询权限，假设 business 属于scott,即使 teclan\n# 有查询权限，在查询时也必须指定表的schema SCOTT\ngrant select on business to teclan\n```\n##### 取消查询权限\n```\n# 取消 teclan 对 business 表的查询权限,该命令由管理员或授权者执行\nrevoke select on business to teclan\n```\n##### 多权限授予\n```\n# 赋予 teclan 对 business 表查询,插入，删除，更新权限\ngrant select,insert,delete,update on business to teclan;\n```\n##### 删除用户\n```\n# 删除用户 teclan\ndrop user teclan;\n# 删除用户 teclan 以及关联的表\ndrop user teclan cascade;\n```\n##### 查看当前用户权限\n```\nselect * from session_privs;\n```\n##### 查看当前用户角色\n```\nselect * from user_role_prives;\n```\n\n##### 函数示例\n函数一般用于数据查询，分析，处理\n```\nCREATE OR REPLACE get_sal(emp_no IN NUMBER)\nRETURN NUMBER\nLS  emp_sal NUMBER(7,2)\nBEGIN\n  SELECT sal INTO emp_sal FROM emp WHERE empno = emp_no;\n  RETURN(emp_sal);\nEND;\n```\n##### 调用函数\n```\nselect get_sal(10086) from dual;\n```\n##### 存储过程示例\n存储过程一般是要执行的SQL组合\n```\ncreate or replace procedure deleteInfo(empid in number)\nbegin\n  delete from emp where emp.id = empid;\n  commit;\nend deleteInfo;\n```\n##### 调用存储过程\n```\nexecute deleteInfo(1352);\n```\n##### 创建索引\n```\ncreate index id_business on business(id);\n```\n##### 同义词\n同义词（Synonym），即别名，分私有别名和公共别名，如访问表必须加上用户名，可以使用别名来解决\n\n```\n# 查询是否具有创建别名的权限,查询结果为空则表示无权限\nselect * from session_privs where privilege like '%SYNONYM%';\n# 如果没有权限，赋予 teclan 创建别名权限(私有)，需要管理员权限\ngrant create any synonym to teclan\n\n# 创建别名(私有)\ncreate synonym bs for business;\n# 通过别名查询\nselect * from bs;\n\n# 如果没有权限，赋予 teclan 创建别名权限(公共)，需要管理员权限\ngrant create public synonym to teclan\n\n# 创建别名（公共）\ncreate public synonym busin for teclab.business\n# 通过别名查询,当前用户不是teclan的情况\nselect * from busin;\n```\n##### 查询表空间信息\n```\nselect tablespace_name as \"表空间名称\"，\n       block_size/1024 as \"数据块存储大小（KB）\",\n       satatus         as \"表空间的状态\",\n       contents        as \"表空间类型\",\n       logging         as \"是否有日志记录\",\nfrom dba_tablespace;\n```\n##### 查看数据说明文件\n```\nselect t.tablespace_name as \"表空间名称\",\n       t.file_name       as \"数据文件路径\",\n       t.bytes           as \"数据文件大小（MB）\",\n       t.autoextendsible as \"数据文件是否自动扩展\",\n       t.maxbytes        as \"数据文件最大（MB）\",\nfrom dba_data_files t;\n```\n##### 查看重做日志\n```\n# STATUS：STALE为已经提交到数据中，空白为正在使用该文件\nselect * from v$logfile;\n```\n##### 恢复刚才受影响的一条数据\n```\n# 假设先执行如下sql，删除一条记录\ndelete from emp where ename='FORD';\n# 以 SYS 登录数据库，或者对 flashback_transaction_query 有查询权限的用户登录，该表属于 SYS\n# undo_sql 即为恢复的sql，将其复制到到命令窗口执行即可\nselect t.start_timestamp,\n       t.commit_timestamp,\n       t.logon_user,\n       t.operation,\n       t.table_name,\n       t.table_owner,\n       t.undo_sql\nfrom flashback_transaction_query where t.table_name = 'EMP';\n```\n##### 恢复被大量受影响的记录\n```\n# 假设 emp 表有100万条记录，执行了 update emp set job = 'analyst';\n# 如果按照恢复一条数据的做法，那么将需要操作100万次，这个方法至少手工是不可能的\n# 我们假设 update emp set job = 'analyst'; 是在10分钟之前执行的\n# 先查看当前系统时间,假设当前时间为 2016-10-11 14：20：00\nselect sysdate from dual;\n\n# 查询 emp 表 10分钟前的数据,如果时间确定正确，查询到的数据就应该是执行 update emp set job = 'analyst'; 的数据\nselect * from emp as of timestamp to_timestamp('2016-10-11 14：10：00','yyyy-mm-dd hh24:mi:ss');\n\n# 使用数据库的闪回功能恢复数据\n# 更改 emp 表的行好\nalter table emp enable row movement；\n# 恢复到10分钟前的数据\nflasshback table emp to timestamp to_timestamp('2016-10-11 14：10：00','yyyy-mm-dd hh24:mi:ss');\n```\n##### 恢复删除的表\n```\n# 删除 emp表（可以是非空表）\ndrop table emp;\n\n# 查看回收站中是否存在 emp表，一般情况下可以省略此操作\nselect * from user_recyclebin order by droptime desc;\n或\nselect * froom recyclebin order by droptime desc;\n\n# 使用闪回恢复表\nflashback table emp to before drop;\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n","slug":"oracle学习笔记","published":1,"updated":"2017-08-18T13:17:27.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw8y000kjeh8t32xl6v6","content":"<h5 id=\"连接数据库\"><a href=\"#连接数据库\" class=\"headerlink\" title=\"连接数据库\"></a>连接数据库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 使用操作系统认证连接数据库，无需密码</div><div class=\"line\">&gt;sqlplus &quot;/as sysdba&quot;</div></pre></td></tr></table></figure>\n<h5 id=\"查看数据库动态表实例\"><a href=\"#查看数据库动态表实例\" class=\"headerlink\" title=\"查看数据库动态表实例\"></a>查看数据库动态表实例</h5><p>若查询结果为 OPEN 则说明数据库运行正常。oracle动态表通常以v$开头，动态表不允许手工更改，动态表属于字典表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select status from v$instance;</div></pre></td></tr></table></figure></p>\n<h5 id=\"关闭和启动数据库\"><a href=\"#关闭和启动数据库\" class=\"headerlink\" title=\"关闭和启动数据库\"></a>关闭和启动数据库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 关闭数据库</div><div class=\"line\"> shutdown immediate</div><div class=\"line\"># 启动数据库</div><div class=\"line\"> startup</div></pre></td></tr></table></figure>\n<h5 id=\"查看当前数据库名称\"><a href=\"#查看当前数据库名称\" class=\"headerlink\" title=\"查看当前数据库名称\"></a>查看当前数据库名称</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">show parameter db_name</div></pre></td></tr></table></figure>\n<h5 id=\"查询某个用户的状态\"><a href=\"#查询某个用户的状态\" class=\"headerlink\" title=\"查询某个用户的状态\"></a>查询某个用户的状态</h5><p>字典表 dba_users 存放所有用户的信息，oracle中所有英文字母不区分大小写，但如果是在代码中，建议都用大写字母<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 查询用户 scott 的状态</div><div class=\"line\"> select username,account_status from dba_users where username=&apos;scott&apos;</div></pre></td></tr></table></figure></p>\n<h5 id=\"查看表有哪些列\"><a href=\"#查看表有哪些列\" class=\"headerlink\" title=\"查看表有哪些列\"></a>查看表有哪些列</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 查看表 user_tables 有哪些列</div><div class=\"line\"> desc user_tables;</div></pre></td></tr></table></figure>\n<h5 id=\"解锁用户\"><a href=\"#解锁用户\" class=\"headerlink\" title=\"解锁用户\"></a>解锁用户</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 解锁 SCOTT</div><div class=\"line\"> alter user scott account unlock;</div><div class=\"line\"># 验证是否已经解锁,如果结果提示账户到期，那么使用旧密码登录后并设置新密码即可解除到期状态</div><div class=\"line\"> select username,account_status from dba_users where username=&apos;scott&apos;</div></pre></td></tr></table></figure>\n<h5 id=\"查看数据库用户\"><a href=\"#查看数据库用户\" class=\"headerlink\" title=\"查看数据库用户\"></a>查看数据库用户</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">show user</div></pre></td></tr></table></figure>\n<h5 id=\"使用普通用户登陆数据库\"><a href=\"#使用普通用户登陆数据库\" class=\"headerlink\" title=\"使用普通用户登陆数据库\"></a>使用普通用户登陆数据库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 使用scott登录,默认密码tiger</div><div class=\"line\"> sqlplus scott/tiger</div><div class=\"line\"># 如果已经使用其他用户连接数据库，则可以使用以下命令切换至scott</div><div class=\"line\"> conn  scott/tiger</div><div class=\"line\"># 如果账户到期，提示 the password has expired,需要重新设置密码,假设设置新口令为 cat</div><div class=\"line\">新口令:cat</div><div class=\"line\">重新键入新口令:cat</div><div class=\"line\"># 之后会提示口令已更改，并已经连接数据库</div><div class=\"line\"># 验证当前用户</div><div class=\"line\"> show user</div></pre></td></tr></table></figure>\n<h5 id=\"更改会话时间格式\"><a href=\"#更改会话时间格式\" class=\"headerlink\" title=\"更改会话时间格式\"></a>更改会话时间格式</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 更改会话时间格式为 YYYY-MM-DD，默认格式是美国时间格式</div><div class=\"line\"> alter session set nls_date_format=&apos;YYYY-MM-DD&apos;;</div></pre></td></tr></table></figure>\n<h5 id=\"查询数据库当前时间\"><a href=\"#查询数据库当前时间\" class=\"headerlink\" title=\"查询数据库当前时间\"></a>查询数据库当前时间</h5><p>dual 是oracle中的虚表，设计系统常量，计算等时可以使用dual表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select sysdate from dual;</div></pre></td></tr></table></figure></p>\n<h5 id=\"把表数据复制到一张新表\"><a href=\"#把表数据复制到一张新表\" class=\"headerlink\" title=\"把表数据复制到一张新表\"></a>把表数据复制到一张新表</h5><blockquote>\n<p>这种方式只是单纯的复制数据，表的约束并没有复制过去</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 创建一张新表 business_copy,并且将 business 表中的全部数据复制到 business_copy</div><div class=\"line\"> create table business_copy as select * from business;</div></pre></td></tr></table></figure>\n<h5 id=\"从一个表将数据导入另一个表\"><a href=\"#从一个表将数据导入另一个表\" class=\"headerlink\" title=\"从一个表将数据导入另一个表\"></a>从一个表将数据导入另一个表</h5><blockquote>\n<p>要求两个表的字段，顺序要一致</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># business_copy 的数据倒入 business</div><div class=\"line\"> insert into business (colume1,colume2,...,columen) select * from business_copy;</div></pre></td></tr></table></figure>\n<h5 id=\"添加表字段\"><a href=\"#添加表字段\" class=\"headerlink\" title=\"添加表字段\"></a>添加表字段</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 给表 business 添加字段 manager</div><div class=\"line\"> alter table business add (manager varchar2(50));</div></pre></td></tr></table></figure>\n<h5 id=\"修改表字段\"><a href=\"#修改表字段\" class=\"headerlink\" title=\"修改表字段\"></a>修改表字段</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 给表 business 字段 manager 最大长度为 100</div><div class=\"line\"> alter table business modify (manager varchar2(100));</div></pre></td></tr></table></figure>\n<h5 id=\"删除表字段\"><a href=\"#删除表字段\" class=\"headerlink\" title=\"删除表字段\"></a>删除表字段</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 删除表 business 字段 manager</div><div class=\"line\"> alter table business drop column manager;</div></pre></td></tr></table></figure>\n<h5 id=\"创建数据库用户\"><a href=\"#创建数据库用户\" class=\"headerlink\" title=\"创建数据库用户\"></a>创建数据库用户</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create user teclan identified by 123456;</div></pre></td></tr></table></figure>\n<h5 id=\"授权连接权限\"><a href=\"#授权连接权限\" class=\"headerlink\" title=\"授权连接权限\"></a>授权连接权限</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 赋予用户 teclan 连接数据库权限</div><div class=\"line\">grant connect to teclan;</div></pre></td></tr></table></figure>\n<h5 id=\"授权查询权限\"><a href=\"#授权查询权限\" class=\"headerlink\" title=\"授权查询权限\"></a>授权查询权限</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 赋予 teclan 对 business 表查询权限，假设 business 属于scott,即使 teclan</div><div class=\"line\"># 有查询权限，在查询时也必须指定表的schema SCOTT</div><div class=\"line\">grant select on business to teclan</div></pre></td></tr></table></figure>\n<h5 id=\"取消查询权限\"><a href=\"#取消查询权限\" class=\"headerlink\" title=\"取消查询权限\"></a>取消查询权限</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 取消 teclan 对 business 表的查询权限,该命令由管理员或授权者执行</div><div class=\"line\">revoke select on business to teclan</div></pre></td></tr></table></figure>\n<h5 id=\"多权限授予\"><a href=\"#多权限授予\" class=\"headerlink\" title=\"多权限授予\"></a>多权限授予</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 赋予 teclan 对 business 表查询,插入，删除，更新权限</div><div class=\"line\">grant select,insert,delete,update on business to teclan;</div></pre></td></tr></table></figure>\n<h5 id=\"删除用户\"><a href=\"#删除用户\" class=\"headerlink\" title=\"删除用户\"></a>删除用户</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 删除用户 teclan</div><div class=\"line\">drop user teclan;</div><div class=\"line\"># 删除用户 teclan 以及关联的表</div><div class=\"line\">drop user teclan cascade;</div></pre></td></tr></table></figure>\n<h5 id=\"查看当前用户权限\"><a href=\"#查看当前用户权限\" class=\"headerlink\" title=\"查看当前用户权限\"></a>查看当前用户权限</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from session_privs;</div></pre></td></tr></table></figure>\n<h5 id=\"查看当前用户角色\"><a href=\"#查看当前用户角色\" class=\"headerlink\" title=\"查看当前用户角色\"></a>查看当前用户角色</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from user_role_prives;</div></pre></td></tr></table></figure>\n<h5 id=\"函数示例\"><a href=\"#函数示例\" class=\"headerlink\" title=\"函数示例\"></a>函数示例</h5><p>函数一般用于数据查询，分析，处理<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE get_sal(emp_no IN NUMBER)</div><div class=\"line\">RETURN NUMBER</div><div class=\"line\">LS  emp_sal NUMBER(7,2)</div><div class=\"line\">BEGIN</div><div class=\"line\">  SELECT sal INTO emp_sal FROM emp WHERE empno = emp_no;</div><div class=\"line\">  RETURN(emp_sal);</div><div class=\"line\">END;</div></pre></td></tr></table></figure></p>\n<h5 id=\"调用函数\"><a href=\"#调用函数\" class=\"headerlink\" title=\"调用函数\"></a>调用函数</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select get_sal(10086) from dual;</div></pre></td></tr></table></figure>\n<h5 id=\"存储过程示例\"><a href=\"#存储过程示例\" class=\"headerlink\" title=\"存储过程示例\"></a>存储过程示例</h5><p>存储过程一般是要执行的SQL组合<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">create or replace procedure deleteInfo(empid in number)</div><div class=\"line\">begin</div><div class=\"line\">  delete from emp where emp.id = empid;</div><div class=\"line\">  commit;</div><div class=\"line\">end deleteInfo;</div></pre></td></tr></table></figure></p>\n<h5 id=\"调用存储过程\"><a href=\"#调用存储过程\" class=\"headerlink\" title=\"调用存储过程\"></a>调用存储过程</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">execute deleteInfo(1352);</div></pre></td></tr></table></figure>\n<h5 id=\"创建索引\"><a href=\"#创建索引\" class=\"headerlink\" title=\"创建索引\"></a>创建索引</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create index id_business on business(id);</div></pre></td></tr></table></figure>\n<h5 id=\"同义词\"><a href=\"#同义词\" class=\"headerlink\" title=\"同义词\"></a>同义词</h5><p>同义词（Synonym），即别名，分私有别名和公共别名，如访问表必须加上用户名，可以使用别名来解决</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 查询是否具有创建别名的权限,查询结果为空则表示无权限</div><div class=\"line\">select * from session_privs where privilege like &apos;%SYNONYM%&apos;;</div><div class=\"line\"># 如果没有权限，赋予 teclan 创建别名权限(私有)，需要管理员权限</div><div class=\"line\">grant create any synonym to teclan</div><div class=\"line\"></div><div class=\"line\"># 创建别名(私有)</div><div class=\"line\">create synonym bs for business;</div><div class=\"line\"># 通过别名查询</div><div class=\"line\">select * from bs;</div><div class=\"line\"></div><div class=\"line\"># 如果没有权限，赋予 teclan 创建别名权限(公共)，需要管理员权限</div><div class=\"line\">grant create public synonym to teclan</div><div class=\"line\"></div><div class=\"line\"># 创建别名（公共）</div><div class=\"line\">create public synonym busin for teclab.business</div><div class=\"line\"># 通过别名查询,当前用户不是teclan的情况</div><div class=\"line\">select * from busin;</div></pre></td></tr></table></figure>\n<h5 id=\"查询表空间信息\"><a href=\"#查询表空间信息\" class=\"headerlink\" title=\"查询表空间信息\"></a>查询表空间信息</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">select tablespace_name as &quot;表空间名称&quot;，</div><div class=\"line\">       block_size/1024 as &quot;数据块存储大小（KB）&quot;,</div><div class=\"line\">       satatus         as &quot;表空间的状态&quot;,</div><div class=\"line\">       contents        as &quot;表空间类型&quot;,</div><div class=\"line\">       logging         as &quot;是否有日志记录&quot;,</div><div class=\"line\">from dba_tablespace;</div></pre></td></tr></table></figure>\n<h5 id=\"查看数据说明文件\"><a href=\"#查看数据说明文件\" class=\"headerlink\" title=\"查看数据说明文件\"></a>查看数据说明文件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">select t.tablespace_name as &quot;表空间名称&quot;,</div><div class=\"line\">       t.file_name       as &quot;数据文件路径&quot;,</div><div class=\"line\">       t.bytes           as &quot;数据文件大小（MB）&quot;,</div><div class=\"line\">       t.autoextendsible as &quot;数据文件是否自动扩展&quot;,</div><div class=\"line\">       t.maxbytes        as &quot;数据文件最大（MB）&quot;,</div><div class=\"line\">from dba_data_files t;</div></pre></td></tr></table></figure>\n<h5 id=\"查看重做日志\"><a href=\"#查看重做日志\" class=\"headerlink\" title=\"查看重做日志\"></a>查看重做日志</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># STATUS：STALE为已经提交到数据中，空白为正在使用该文件</div><div class=\"line\">select * from v$logfile;</div></pre></td></tr></table></figure>\n<h5 id=\"恢复刚才受影响的一条数据\"><a href=\"#恢复刚才受影响的一条数据\" class=\"headerlink\" title=\"恢复刚才受影响的一条数据\"></a>恢复刚才受影响的一条数据</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 假设先执行如下sql，删除一条记录</div><div class=\"line\">delete from emp where ename=&apos;FORD&apos;;</div><div class=\"line\"># 以 SYS 登录数据库，或者对 flashback_transaction_query 有查询权限的用户登录，该表属于 SYS</div><div class=\"line\"># undo_sql 即为恢复的sql，将其复制到到命令窗口执行即可</div><div class=\"line\">select t.start_timestamp,</div><div class=\"line\">       t.commit_timestamp,</div><div class=\"line\">       t.logon_user,</div><div class=\"line\">       t.operation,</div><div class=\"line\">       t.table_name,</div><div class=\"line\">       t.table_owner,</div><div class=\"line\">       t.undo_sql</div><div class=\"line\">from flashback_transaction_query where t.table_name = &apos;EMP&apos;;</div></pre></td></tr></table></figure>\n<h5 id=\"恢复被大量受影响的记录\"><a href=\"#恢复被大量受影响的记录\" class=\"headerlink\" title=\"恢复被大量受影响的记录\"></a>恢复被大量受影响的记录</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 假设 emp 表有100万条记录，执行了 update emp set job = &apos;analyst&apos;;</div><div class=\"line\"># 如果按照恢复一条数据的做法，那么将需要操作100万次，这个方法至少手工是不可能的</div><div class=\"line\"># 我们假设 update emp set job = &apos;analyst&apos;; 是在10分钟之前执行的</div><div class=\"line\"># 先查看当前系统时间,假设当前时间为 2016-10-11 14：20：00</div><div class=\"line\">select sysdate from dual;</div><div class=\"line\"></div><div class=\"line\"># 查询 emp 表 10分钟前的数据,如果时间确定正确，查询到的数据就应该是执行 update emp set job = &apos;analyst&apos;; 的数据</div><div class=\"line\">select * from emp as of timestamp to_timestamp(&apos;2016-10-11 14：10：00&apos;,&apos;yyyy-mm-dd hh24:mi:ss&apos;);</div><div class=\"line\"></div><div class=\"line\"># 使用数据库的闪回功能恢复数据</div><div class=\"line\"># 更改 emp 表的行好</div><div class=\"line\">alter table emp enable row movement；</div><div class=\"line\"># 恢复到10分钟前的数据</div><div class=\"line\">flasshback table emp to timestamp to_timestamp(&apos;2016-10-11 14：10：00&apos;,&apos;yyyy-mm-dd hh24:mi:ss&apos;);</div></pre></td></tr></table></figure>\n<h5 id=\"恢复删除的表\"><a href=\"#恢复删除的表\" class=\"headerlink\" title=\"恢复删除的表\"></a>恢复删除的表</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 删除 emp表（可以是非空表）</div><div class=\"line\">drop table emp;</div><div class=\"line\"></div><div class=\"line\"># 查看回收站中是否存在 emp表，一般情况下可以省略此操作</div><div class=\"line\">select * from user_recyclebin order by droptime desc;</div><div class=\"line\">或</div><div class=\"line\">select * froom recyclebin order by droptime desc;</div><div class=\"line\"></div><div class=\"line\"># 使用闪回恢复表</div><div class=\"line\">flashback table emp to before drop;</div></pre></td></tr></table></figure>\n<p>```</p>\n","excerpt":"","more":"<h5 id=\"连接数据库\"><a href=\"#连接数据库\" class=\"headerlink\" title=\"连接数据库\"></a>连接数据库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 使用操作系统认证连接数据库，无需密码</div><div class=\"line\">&gt;sqlplus &quot;/as sysdba&quot;</div></pre></td></tr></table></figure>\n<h5 id=\"查看数据库动态表实例\"><a href=\"#查看数据库动态表实例\" class=\"headerlink\" title=\"查看数据库动态表实例\"></a>查看数据库动态表实例</h5><p>若查询结果为 OPEN 则说明数据库运行正常。oracle动态表通常以v$开头，动态表不允许手工更改，动态表属于字典表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select status from v$instance;</div></pre></td></tr></table></figure></p>\n<h5 id=\"关闭和启动数据库\"><a href=\"#关闭和启动数据库\" class=\"headerlink\" title=\"关闭和启动数据库\"></a>关闭和启动数据库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 关闭数据库</div><div class=\"line\"> shutdown immediate</div><div class=\"line\"># 启动数据库</div><div class=\"line\"> startup</div></pre></td></tr></table></figure>\n<h5 id=\"查看当前数据库名称\"><a href=\"#查看当前数据库名称\" class=\"headerlink\" title=\"查看当前数据库名称\"></a>查看当前数据库名称</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">show parameter db_name</div></pre></td></tr></table></figure>\n<h5 id=\"查询某个用户的状态\"><a href=\"#查询某个用户的状态\" class=\"headerlink\" title=\"查询某个用户的状态\"></a>查询某个用户的状态</h5><p>字典表 dba_users 存放所有用户的信息，oracle中所有英文字母不区分大小写，但如果是在代码中，建议都用大写字母<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 查询用户 scott 的状态</div><div class=\"line\"> select username,account_status from dba_users where username=&apos;scott&apos;</div></pre></td></tr></table></figure></p>\n<h5 id=\"查看表有哪些列\"><a href=\"#查看表有哪些列\" class=\"headerlink\" title=\"查看表有哪些列\"></a>查看表有哪些列</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 查看表 user_tables 有哪些列</div><div class=\"line\"> desc user_tables;</div></pre></td></tr></table></figure>\n<h5 id=\"解锁用户\"><a href=\"#解锁用户\" class=\"headerlink\" title=\"解锁用户\"></a>解锁用户</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 解锁 SCOTT</div><div class=\"line\"> alter user scott account unlock;</div><div class=\"line\"># 验证是否已经解锁,如果结果提示账户到期，那么使用旧密码登录后并设置新密码即可解除到期状态</div><div class=\"line\"> select username,account_status from dba_users where username=&apos;scott&apos;</div></pre></td></tr></table></figure>\n<h5 id=\"查看数据库用户\"><a href=\"#查看数据库用户\" class=\"headerlink\" title=\"查看数据库用户\"></a>查看数据库用户</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">show user</div></pre></td></tr></table></figure>\n<h5 id=\"使用普通用户登陆数据库\"><a href=\"#使用普通用户登陆数据库\" class=\"headerlink\" title=\"使用普通用户登陆数据库\"></a>使用普通用户登陆数据库</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 使用scott登录,默认密码tiger</div><div class=\"line\"> sqlplus scott/tiger</div><div class=\"line\"># 如果已经使用其他用户连接数据库，则可以使用以下命令切换至scott</div><div class=\"line\"> conn  scott/tiger</div><div class=\"line\"># 如果账户到期，提示 the password has expired,需要重新设置密码,假设设置新口令为 cat</div><div class=\"line\">新口令:cat</div><div class=\"line\">重新键入新口令:cat</div><div class=\"line\"># 之后会提示口令已更改，并已经连接数据库</div><div class=\"line\"># 验证当前用户</div><div class=\"line\"> show user</div></pre></td></tr></table></figure>\n<h5 id=\"更改会话时间格式\"><a href=\"#更改会话时间格式\" class=\"headerlink\" title=\"更改会话时间格式\"></a>更改会话时间格式</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 更改会话时间格式为 YYYY-MM-DD，默认格式是美国时间格式</div><div class=\"line\"> alter session set nls_date_format=&apos;YYYY-MM-DD&apos;;</div></pre></td></tr></table></figure>\n<h5 id=\"查询数据库当前时间\"><a href=\"#查询数据库当前时间\" class=\"headerlink\" title=\"查询数据库当前时间\"></a>查询数据库当前时间</h5><p>dual 是oracle中的虚表，设计系统常量，计算等时可以使用dual表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select sysdate from dual;</div></pre></td></tr></table></figure></p>\n<h5 id=\"把表数据复制到一张新表\"><a href=\"#把表数据复制到一张新表\" class=\"headerlink\" title=\"把表数据复制到一张新表\"></a>把表数据复制到一张新表</h5><blockquote>\n<p>这种方式只是单纯的复制数据，表的约束并没有复制过去</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 创建一张新表 business_copy,并且将 business 表中的全部数据复制到 business_copy</div><div class=\"line\"> create table business_copy as select * from business;</div></pre></td></tr></table></figure>\n<h5 id=\"从一个表将数据导入另一个表\"><a href=\"#从一个表将数据导入另一个表\" class=\"headerlink\" title=\"从一个表将数据导入另一个表\"></a>从一个表将数据导入另一个表</h5><blockquote>\n<p>要求两个表的字段，顺序要一致</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># business_copy 的数据倒入 business</div><div class=\"line\"> insert into business (colume1,colume2,...,columen) select * from business_copy;</div></pre></td></tr></table></figure>\n<h5 id=\"添加表字段\"><a href=\"#添加表字段\" class=\"headerlink\" title=\"添加表字段\"></a>添加表字段</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 给表 business 添加字段 manager</div><div class=\"line\"> alter table business add (manager varchar2(50));</div></pre></td></tr></table></figure>\n<h5 id=\"修改表字段\"><a href=\"#修改表字段\" class=\"headerlink\" title=\"修改表字段\"></a>修改表字段</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 给表 business 字段 manager 最大长度为 100</div><div class=\"line\"> alter table business modify (manager varchar2(100));</div></pre></td></tr></table></figure>\n<h5 id=\"删除表字段\"><a href=\"#删除表字段\" class=\"headerlink\" title=\"删除表字段\"></a>删除表字段</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 删除表 business 字段 manager</div><div class=\"line\"> alter table business drop column manager;</div></pre></td></tr></table></figure>\n<h5 id=\"创建数据库用户\"><a href=\"#创建数据库用户\" class=\"headerlink\" title=\"创建数据库用户\"></a>创建数据库用户</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create user teclan identified by 123456;</div></pre></td></tr></table></figure>\n<h5 id=\"授权连接权限\"><a href=\"#授权连接权限\" class=\"headerlink\" title=\"授权连接权限\"></a>授权连接权限</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 赋予用户 teclan 连接数据库权限</div><div class=\"line\">grant connect to teclan;</div></pre></td></tr></table></figure>\n<h5 id=\"授权查询权限\"><a href=\"#授权查询权限\" class=\"headerlink\" title=\"授权查询权限\"></a>授权查询权限</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 赋予 teclan 对 business 表查询权限，假设 business 属于scott,即使 teclan</div><div class=\"line\"># 有查询权限，在查询时也必须指定表的schema SCOTT</div><div class=\"line\">grant select on business to teclan</div></pre></td></tr></table></figure>\n<h5 id=\"取消查询权限\"><a href=\"#取消查询权限\" class=\"headerlink\" title=\"取消查询权限\"></a>取消查询权限</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 取消 teclan 对 business 表的查询权限,该命令由管理员或授权者执行</div><div class=\"line\">revoke select on business to teclan</div></pre></td></tr></table></figure>\n<h5 id=\"多权限授予\"><a href=\"#多权限授予\" class=\"headerlink\" title=\"多权限授予\"></a>多权限授予</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 赋予 teclan 对 business 表查询,插入，删除，更新权限</div><div class=\"line\">grant select,insert,delete,update on business to teclan;</div></pre></td></tr></table></figure>\n<h5 id=\"删除用户\"><a href=\"#删除用户\" class=\"headerlink\" title=\"删除用户\"></a>删除用户</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 删除用户 teclan</div><div class=\"line\">drop user teclan;</div><div class=\"line\"># 删除用户 teclan 以及关联的表</div><div class=\"line\">drop user teclan cascade;</div></pre></td></tr></table></figure>\n<h5 id=\"查看当前用户权限\"><a href=\"#查看当前用户权限\" class=\"headerlink\" title=\"查看当前用户权限\"></a>查看当前用户权限</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from session_privs;</div></pre></td></tr></table></figure>\n<h5 id=\"查看当前用户角色\"><a href=\"#查看当前用户角色\" class=\"headerlink\" title=\"查看当前用户角色\"></a>查看当前用户角色</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from user_role_prives;</div></pre></td></tr></table></figure>\n<h5 id=\"函数示例\"><a href=\"#函数示例\" class=\"headerlink\" title=\"函数示例\"></a>函数示例</h5><p>函数一般用于数据查询，分析，处理<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE get_sal(emp_no IN NUMBER)</div><div class=\"line\">RETURN NUMBER</div><div class=\"line\">LS  emp_sal NUMBER(7,2)</div><div class=\"line\">BEGIN</div><div class=\"line\">  SELECT sal INTO emp_sal FROM emp WHERE empno = emp_no;</div><div class=\"line\">  RETURN(emp_sal);</div><div class=\"line\">END;</div></pre></td></tr></table></figure></p>\n<h5 id=\"调用函数\"><a href=\"#调用函数\" class=\"headerlink\" title=\"调用函数\"></a>调用函数</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select get_sal(10086) from dual;</div></pre></td></tr></table></figure>\n<h5 id=\"存储过程示例\"><a href=\"#存储过程示例\" class=\"headerlink\" title=\"存储过程示例\"></a>存储过程示例</h5><p>存储过程一般是要执行的SQL组合<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">create or replace procedure deleteInfo(empid in number)</div><div class=\"line\">begin</div><div class=\"line\">  delete from emp where emp.id = empid;</div><div class=\"line\">  commit;</div><div class=\"line\">end deleteInfo;</div></pre></td></tr></table></figure></p>\n<h5 id=\"调用存储过程\"><a href=\"#调用存储过程\" class=\"headerlink\" title=\"调用存储过程\"></a>调用存储过程</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">execute deleteInfo(1352);</div></pre></td></tr></table></figure>\n<h5 id=\"创建索引\"><a href=\"#创建索引\" class=\"headerlink\" title=\"创建索引\"></a>创建索引</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create index id_business on business(id);</div></pre></td></tr></table></figure>\n<h5 id=\"同义词\"><a href=\"#同义词\" class=\"headerlink\" title=\"同义词\"></a>同义词</h5><p>同义词（Synonym），即别名，分私有别名和公共别名，如访问表必须加上用户名，可以使用别名来解决</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 查询是否具有创建别名的权限,查询结果为空则表示无权限</div><div class=\"line\">select * from session_privs where privilege like &apos;%SYNONYM%&apos;;</div><div class=\"line\"># 如果没有权限，赋予 teclan 创建别名权限(私有)，需要管理员权限</div><div class=\"line\">grant create any synonym to teclan</div><div class=\"line\"></div><div class=\"line\"># 创建别名(私有)</div><div class=\"line\">create synonym bs for business;</div><div class=\"line\"># 通过别名查询</div><div class=\"line\">select * from bs;</div><div class=\"line\"></div><div class=\"line\"># 如果没有权限，赋予 teclan 创建别名权限(公共)，需要管理员权限</div><div class=\"line\">grant create public synonym to teclan</div><div class=\"line\"></div><div class=\"line\"># 创建别名（公共）</div><div class=\"line\">create public synonym busin for teclab.business</div><div class=\"line\"># 通过别名查询,当前用户不是teclan的情况</div><div class=\"line\">select * from busin;</div></pre></td></tr></table></figure>\n<h5 id=\"查询表空间信息\"><a href=\"#查询表空间信息\" class=\"headerlink\" title=\"查询表空间信息\"></a>查询表空间信息</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">select tablespace_name as &quot;表空间名称&quot;，</div><div class=\"line\">       block_size/1024 as &quot;数据块存储大小（KB）&quot;,</div><div class=\"line\">       satatus         as &quot;表空间的状态&quot;,</div><div class=\"line\">       contents        as &quot;表空间类型&quot;,</div><div class=\"line\">       logging         as &quot;是否有日志记录&quot;,</div><div class=\"line\">from dba_tablespace;</div></pre></td></tr></table></figure>\n<h5 id=\"查看数据说明文件\"><a href=\"#查看数据说明文件\" class=\"headerlink\" title=\"查看数据说明文件\"></a>查看数据说明文件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">select t.tablespace_name as &quot;表空间名称&quot;,</div><div class=\"line\">       t.file_name       as &quot;数据文件路径&quot;,</div><div class=\"line\">       t.bytes           as &quot;数据文件大小（MB）&quot;,</div><div class=\"line\">       t.autoextendsible as &quot;数据文件是否自动扩展&quot;,</div><div class=\"line\">       t.maxbytes        as &quot;数据文件最大（MB）&quot;,</div><div class=\"line\">from dba_data_files t;</div></pre></td></tr></table></figure>\n<h5 id=\"查看重做日志\"><a href=\"#查看重做日志\" class=\"headerlink\" title=\"查看重做日志\"></a>查看重做日志</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># STATUS：STALE为已经提交到数据中，空白为正在使用该文件</div><div class=\"line\">select * from v$logfile;</div></pre></td></tr></table></figure>\n<h5 id=\"恢复刚才受影响的一条数据\"><a href=\"#恢复刚才受影响的一条数据\" class=\"headerlink\" title=\"恢复刚才受影响的一条数据\"></a>恢复刚才受影响的一条数据</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 假设先执行如下sql，删除一条记录</div><div class=\"line\">delete from emp where ename=&apos;FORD&apos;;</div><div class=\"line\"># 以 SYS 登录数据库，或者对 flashback_transaction_query 有查询权限的用户登录，该表属于 SYS</div><div class=\"line\"># undo_sql 即为恢复的sql，将其复制到到命令窗口执行即可</div><div class=\"line\">select t.start_timestamp,</div><div class=\"line\">       t.commit_timestamp,</div><div class=\"line\">       t.logon_user,</div><div class=\"line\">       t.operation,</div><div class=\"line\">       t.table_name,</div><div class=\"line\">       t.table_owner,</div><div class=\"line\">       t.undo_sql</div><div class=\"line\">from flashback_transaction_query where t.table_name = &apos;EMP&apos;;</div></pre></td></tr></table></figure>\n<h5 id=\"恢复被大量受影响的记录\"><a href=\"#恢复被大量受影响的记录\" class=\"headerlink\" title=\"恢复被大量受影响的记录\"></a>恢复被大量受影响的记录</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 假设 emp 表有100万条记录，执行了 update emp set job = &apos;analyst&apos;;</div><div class=\"line\"># 如果按照恢复一条数据的做法，那么将需要操作100万次，这个方法至少手工是不可能的</div><div class=\"line\"># 我们假设 update emp set job = &apos;analyst&apos;; 是在10分钟之前执行的</div><div class=\"line\"># 先查看当前系统时间,假设当前时间为 2016-10-11 14：20：00</div><div class=\"line\">select sysdate from dual;</div><div class=\"line\"></div><div class=\"line\"># 查询 emp 表 10分钟前的数据,如果时间确定正确，查询到的数据就应该是执行 update emp set job = &apos;analyst&apos;; 的数据</div><div class=\"line\">select * from emp as of timestamp to_timestamp(&apos;2016-10-11 14：10：00&apos;,&apos;yyyy-mm-dd hh24:mi:ss&apos;);</div><div class=\"line\"></div><div class=\"line\"># 使用数据库的闪回功能恢复数据</div><div class=\"line\"># 更改 emp 表的行好</div><div class=\"line\">alter table emp enable row movement；</div><div class=\"line\"># 恢复到10分钟前的数据</div><div class=\"line\">flasshback table emp to timestamp to_timestamp(&apos;2016-10-11 14：10：00&apos;,&apos;yyyy-mm-dd hh24:mi:ss&apos;);</div></pre></td></tr></table></figure>\n<h5 id=\"恢复删除的表\"><a href=\"#恢复删除的表\" class=\"headerlink\" title=\"恢复删除的表\"></a>恢复删除的表</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 删除 emp表（可以是非空表）</div><div class=\"line\">drop table emp;</div><div class=\"line\"></div><div class=\"line\"># 查看回收站中是否存在 emp表，一般情况下可以省略此操作</div><div class=\"line\">select * from user_recyclebin order by droptime desc;</div><div class=\"line\">或</div><div class=\"line\">select * froom recyclebin order by droptime desc;</div><div class=\"line\"></div><div class=\"line\"># 使用闪回恢复表</div><div class=\"line\">flashback table emp to before drop;</div></pre></td></tr></table></figure>\n<p>```</p>\n"},{"title":"shadowsocks配置","date":"2016-07-06T09:03:40.000Z","_content":"\n>所有教程请点击[影梭官方](http://www.iyingsuo.com/help.html)\n[推荐shadowsocks购买链接](https://www.abclite.net/aff.php?aff=226)\n\n以下介绍Ubuntu下使用教程，其他平台，参考[影梭官方](http://www.iyingsuo.com/help.html)和[shadowsocks](https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97)\n\n### 购买服务\n   [点此购买](https://www.abclite.net/aff.php?aff=226)\n\n### 安装 shadowsocks-gui\n```\nsudo add-apt-repository ppa:hzwhuang/ss-qt5\nsudo apt-get update\nsudo apt-get install shadowsocks-qt5\n```\n完成后在命令行输入以下命令即可启动 shadowsocks-gui\n```\nss-qt5\n```\n\n### 配置 shadowsocks-gui\n\n[官方使用手册](https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C)\n\n可以通过导入配置的方式导入数据到 shadowsocks-gui，配置在购买的服务列表处导出，通过配置文件导入的可能端口信息缺失，此时\n\n建议通过手机客户端扫描对应二维码以查看实际端口。配置完成后点击连接即可。\n\n如果不想用 gui，可使用 [服务端配置](http://www.iyingsuo.com/download.html)\n\n需要 Pyhton 2.6+，\n\n1、Install Shadowsocks.\n```\n$ pip install shadowsocks\n```\n2、创建配置文件 config.json ，格式如下：\n```\n{\n    \"server\":\"my_server_ip\",\n    \"server_port\":8388,\n    \"local_port\":1080,\n    \"password\":\"barfoo!\",\n    \"timeout\":600,\n    \"method\":\"table\"\n}\n```\n在 config.json 所在目录执行以下命令启动 shadowsocks\n```\nsslocal -c config.json\n```\n\n\n### Chrome 配置\n\n[下载插件](https://yunpan.cn/cBFZxVTrIpBEe )并安装\n（提取码：358b）\n\n1、下载完成后在 设置 >> 扩展，直接把该 .crx 文件拖入窗口然后安装即可\n\n\t 然后打开 Proxy SwitchySharp 的设置，新建一个情景，命名为 iyingsuo （任意取名），\n\n\t 并设置好端口1080，模式为 socks5，看到“Please select the type of the frofile”\n\n\t 处选择“Proxy Profile”，然后选择你的情景模式 iyingsuo，在 Proxy Servers 下面选择\n\n\t SOCKS5协议，后面的server和port填写 shadowsocks-gui 中的配置，一般默认为 127.0.0.1\n\n\t 和 1080\n\n2、选择模式\n\n\t 在刚才新建的情景模式附近找到自动转换模式，添加需要代理的网站，例如 google.com等，这样就不会出现打不开的情况。\n\n\t 比如你要打开谷歌，在你初次访问谷歌的时候，就会出现打不开，然后选择这个插件按钮的 add condition（添加规则），\n\n\t 把google.com添加到代理里面就可以打开了，其实就是提前加好需要代理的主机而已。\n\n [官方图文教程](http://www.iyingsuo.com/chrome-shadowsocks-tutorials.html)\n\n### FireFox 配置\n\n[下载插件](http://pan.baidu.com/s/1bn2Refd)，提取密码：5usw\n\n安装插件之后，右键选择该插件，选择 “首选项”-->\"代理服务\"-->\"添加代理\"\n\n代理取名任意，代理主机和端口为 shadowsocks-gui 中的配置，一般默认为 127.0.0.1\n\n和 1080，点击“确定”完成配置。接下来添加规则订阅，，右键选择该插件，选择 “首选项”-->\"代理规则\"\n\n-->\"添加规则订阅\"，勾选 gfwlist 并启用，点击“应用”--->\"确认\"。\n","source":"_posts/shadowsocks配置.md","raw":"---\ntitle: shadowsocks配置\ndate: 2016-07-06 17:03:40\ntags: [shadowsocks]\n---\n\n>所有教程请点击[影梭官方](http://www.iyingsuo.com/help.html)\n[推荐shadowsocks购买链接](https://www.abclite.net/aff.php?aff=226)\n\n以下介绍Ubuntu下使用教程，其他平台，参考[影梭官方](http://www.iyingsuo.com/help.html)和[shadowsocks](https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97)\n\n### 购买服务\n   [点此购买](https://www.abclite.net/aff.php?aff=226)\n\n### 安装 shadowsocks-gui\n```\nsudo add-apt-repository ppa:hzwhuang/ss-qt5\nsudo apt-get update\nsudo apt-get install shadowsocks-qt5\n```\n完成后在命令行输入以下命令即可启动 shadowsocks-gui\n```\nss-qt5\n```\n\n### 配置 shadowsocks-gui\n\n[官方使用手册](https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C)\n\n可以通过导入配置的方式导入数据到 shadowsocks-gui，配置在购买的服务列表处导出，通过配置文件导入的可能端口信息缺失，此时\n\n建议通过手机客户端扫描对应二维码以查看实际端口。配置完成后点击连接即可。\n\n如果不想用 gui，可使用 [服务端配置](http://www.iyingsuo.com/download.html)\n\n需要 Pyhton 2.6+，\n\n1、Install Shadowsocks.\n```\n$ pip install shadowsocks\n```\n2、创建配置文件 config.json ，格式如下：\n```\n{\n    \"server\":\"my_server_ip\",\n    \"server_port\":8388,\n    \"local_port\":1080,\n    \"password\":\"barfoo!\",\n    \"timeout\":600,\n    \"method\":\"table\"\n}\n```\n在 config.json 所在目录执行以下命令启动 shadowsocks\n```\nsslocal -c config.json\n```\n\n\n### Chrome 配置\n\n[下载插件](https://yunpan.cn/cBFZxVTrIpBEe )并安装\n（提取码：358b）\n\n1、下载完成后在 设置 >> 扩展，直接把该 .crx 文件拖入窗口然后安装即可\n\n\t 然后打开 Proxy SwitchySharp 的设置，新建一个情景，命名为 iyingsuo （任意取名），\n\n\t 并设置好端口1080，模式为 socks5，看到“Please select the type of the frofile”\n\n\t 处选择“Proxy Profile”，然后选择你的情景模式 iyingsuo，在 Proxy Servers 下面选择\n\n\t SOCKS5协议，后面的server和port填写 shadowsocks-gui 中的配置，一般默认为 127.0.0.1\n\n\t 和 1080\n\n2、选择模式\n\n\t 在刚才新建的情景模式附近找到自动转换模式，添加需要代理的网站，例如 google.com等，这样就不会出现打不开的情况。\n\n\t 比如你要打开谷歌，在你初次访问谷歌的时候，就会出现打不开，然后选择这个插件按钮的 add condition（添加规则），\n\n\t 把google.com添加到代理里面就可以打开了，其实就是提前加好需要代理的主机而已。\n\n [官方图文教程](http://www.iyingsuo.com/chrome-shadowsocks-tutorials.html)\n\n### FireFox 配置\n\n[下载插件](http://pan.baidu.com/s/1bn2Refd)，提取密码：5usw\n\n安装插件之后，右键选择该插件，选择 “首选项”-->\"代理服务\"-->\"添加代理\"\n\n代理取名任意，代理主机和端口为 shadowsocks-gui 中的配置，一般默认为 127.0.0.1\n\n和 1080，点击“确定”完成配置。接下来添加规则订阅，，右键选择该插件，选择 “首选项”-->\"代理规则\"\n\n-->\"添加规则订阅\"，勾选 gfwlist 并启用，点击“应用”--->\"确认\"。\n","slug":"shadowsocks配置","published":1,"updated":"2017-08-18T13:17:27.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw8z000njeh8wq57071k","content":"<blockquote>\n<p>所有教程请点击<a href=\"http://www.iyingsuo.com/help.html\" target=\"_blank\" rel=\"external\">影梭官方</a><br><a href=\"https://www.abclite.net/aff.php?aff=226\" target=\"_blank\" rel=\"external\">推荐shadowsocks购买链接</a></p>\n</blockquote>\n<p>以下介绍Ubuntu下使用教程，其他平台，参考<a href=\"http://www.iyingsuo.com/help.html\" target=\"_blank\" rel=\"external\">影梭官方</a>和<a href=\"https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97\" target=\"_blank\" rel=\"external\">shadowsocks</a></p>\n<h3 id=\"购买服务\"><a href=\"#购买服务\" class=\"headerlink\" title=\"购买服务\"></a>购买服务</h3><p>   <a href=\"https://www.abclite.net/aff.php?aff=226\" target=\"_blank\" rel=\"external\">点此购买</a></p>\n<h3 id=\"安装-shadowsocks-gui\"><a href=\"#安装-shadowsocks-gui\" class=\"headerlink\" title=\"安装 shadowsocks-gui\"></a>安装 shadowsocks-gui</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo add-apt-repository ppa:hzwhuang/ss-qt5</div><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install shadowsocks-qt5</div></pre></td></tr></table></figure>\n<p>完成后在命令行输入以下命令即可启动 shadowsocks-gui<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ss-qt5</div></pre></td></tr></table></figure></p>\n<h3 id=\"配置-shadowsocks-gui\"><a href=\"#配置-shadowsocks-gui\" class=\"headerlink\" title=\"配置 shadowsocks-gui\"></a>配置 shadowsocks-gui</h3><p><a href=\"https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C\" target=\"_blank\" rel=\"external\">官方使用手册</a></p>\n<p>可以通过导入配置的方式导入数据到 shadowsocks-gui，配置在购买的服务列表处导出，通过配置文件导入的可能端口信息缺失，此时</p>\n<p>建议通过手机客户端扫描对应二维码以查看实际端口。配置完成后点击连接即可。</p>\n<p>如果不想用 gui，可使用 <a href=\"http://www.iyingsuo.com/download.html\" target=\"_blank\" rel=\"external\">服务端配置</a></p>\n<p>需要 Pyhton 2.6+，</p>\n<p>1、Install Shadowsocks.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ pip install shadowsocks</div></pre></td></tr></table></figure></p>\n<p>2、创建配置文件 config.json ，格式如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;server&quot;:&quot;my_server_ip&quot;,</div><div class=\"line\">    &quot;server_port&quot;:8388,</div><div class=\"line\">    &quot;local_port&quot;:1080,</div><div class=\"line\">    &quot;password&quot;:&quot;barfoo!&quot;,</div><div class=\"line\">    &quot;timeout&quot;:600,</div><div class=\"line\">    &quot;method&quot;:&quot;table&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在 config.json 所在目录执行以下命令启动 shadowsocks<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sslocal -c config.json</div></pre></td></tr></table></figure></p>\n<h3 id=\"Chrome-配置\"><a href=\"#Chrome-配置\" class=\"headerlink\" title=\"Chrome 配置\"></a>Chrome 配置</h3><p><a href=\"https://yunpan.cn/cBFZxVTrIpBEe\" target=\"_blank\" rel=\"external\">下载插件</a>并安装<br>（提取码：358b）</p>\n<p>1、下载完成后在 设置 &gt;&gt; 扩展，直接把该 .crx 文件拖入窗口然后安装即可</p>\n<pre><code>然后打开 Proxy SwitchySharp 的设置，新建一个情景，命名为 iyingsuo （任意取名），\n\n并设置好端口1080，模式为 socks5，看到“Please select the type of the frofile”\n\n处选择“Proxy Profile”，然后选择你的情景模式 iyingsuo，在 Proxy Servers 下面选择\n\nSOCKS5协议，后面的server和port填写 shadowsocks-gui 中的配置，一般默认为 127.0.0.1\n\n和 1080\n</code></pre><p>2、选择模式</p>\n<pre><code>在刚才新建的情景模式附近找到自动转换模式，添加需要代理的网站，例如 google.com等，这样就不会出现打不开的情况。\n\n比如你要打开谷歌，在你初次访问谷歌的时候，就会出现打不开，然后选择这个插件按钮的 add condition（添加规则），\n\n把google.com添加到代理里面就可以打开了，其实就是提前加好需要代理的主机而已。\n</code></pre><p> <a href=\"http://www.iyingsuo.com/chrome-shadowsocks-tutorials.html\" target=\"_blank\" rel=\"external\">官方图文教程</a></p>\n<h3 id=\"FireFox-配置\"><a href=\"#FireFox-配置\" class=\"headerlink\" title=\"FireFox 配置\"></a>FireFox 配置</h3><p><a href=\"http://pan.baidu.com/s/1bn2Refd\" target=\"_blank\" rel=\"external\">下载插件</a>，提取密码：5usw</p>\n<p>安装插件之后，右键选择该插件，选择 “首选项”–&gt;”代理服务”–&gt;”添加代理”</p>\n<p>代理取名任意，代理主机和端口为 shadowsocks-gui 中的配置，一般默认为 127.0.0.1</p>\n<p>和 1080，点击“确定”完成配置。接下来添加规则订阅，，右键选择该插件，选择 “首选项”–&gt;”代理规则”</p>\n<p>–&gt;”添加规则订阅”，勾选 gfwlist 并启用，点击“应用”—&gt;”确认”。</p>\n","excerpt":"","more":"<blockquote>\n<p>所有教程请点击<a href=\"http://www.iyingsuo.com/help.html\">影梭官方</a><br><a href=\"https://www.abclite.net/aff.php?aff=226\">推荐shadowsocks购买链接</a></p>\n</blockquote>\n<p>以下介绍Ubuntu下使用教程，其他平台，参考<a href=\"http://www.iyingsuo.com/help.html\">影梭官方</a>和<a href=\"https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97\">shadowsocks</a></p>\n<h3 id=\"购买服务\"><a href=\"#购买服务\" class=\"headerlink\" title=\"购买服务\"></a>购买服务</h3><p>   <a href=\"https://www.abclite.net/aff.php?aff=226\">点此购买</a></p>\n<h3 id=\"安装-shadowsocks-gui\"><a href=\"#安装-shadowsocks-gui\" class=\"headerlink\" title=\"安装 shadowsocks-gui\"></a>安装 shadowsocks-gui</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo add-apt-repository ppa:hzwhuang/ss-qt5</div><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install shadowsocks-qt5</div></pre></td></tr></table></figure>\n<p>完成后在命令行输入以下命令即可启动 shadowsocks-gui<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ss-qt5</div></pre></td></tr></table></figure></p>\n<h3 id=\"配置-shadowsocks-gui\"><a href=\"#配置-shadowsocks-gui\" class=\"headerlink\" title=\"配置 shadowsocks-gui\"></a>配置 shadowsocks-gui</h3><p><a href=\"https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C\">官方使用手册</a></p>\n<p>可以通过导入配置的方式导入数据到 shadowsocks-gui，配置在购买的服务列表处导出，通过配置文件导入的可能端口信息缺失，此时</p>\n<p>建议通过手机客户端扫描对应二维码以查看实际端口。配置完成后点击连接即可。</p>\n<p>如果不想用 gui，可使用 <a href=\"http://www.iyingsuo.com/download.html\">服务端配置</a></p>\n<p>需要 Pyhton 2.6+，</p>\n<p>1、Install Shadowsocks.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ pip install shadowsocks</div></pre></td></tr></table></figure></p>\n<p>2、创建配置文件 config.json ，格式如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    &quot;server&quot;:&quot;my_server_ip&quot;,</div><div class=\"line\">    &quot;server_port&quot;:8388,</div><div class=\"line\">    &quot;local_port&quot;:1080,</div><div class=\"line\">    &quot;password&quot;:&quot;barfoo!&quot;,</div><div class=\"line\">    &quot;timeout&quot;:600,</div><div class=\"line\">    &quot;method&quot;:&quot;table&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在 config.json 所在目录执行以下命令启动 shadowsocks<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sslocal -c config.json</div></pre></td></tr></table></figure></p>\n<h3 id=\"Chrome-配置\"><a href=\"#Chrome-配置\" class=\"headerlink\" title=\"Chrome 配置\"></a>Chrome 配置</h3><p><a href=\"https://yunpan.cn/cBFZxVTrIpBEe\">下载插件</a>并安装<br>（提取码：358b）</p>\n<p>1、下载完成后在 设置 &gt;&gt; 扩展，直接把该 .crx 文件拖入窗口然后安装即可</p>\n<pre><code>然后打开 Proxy SwitchySharp 的设置，新建一个情景，命名为 iyingsuo （任意取名），\n\n并设置好端口1080，模式为 socks5，看到“Please select the type of the frofile”\n\n处选择“Proxy Profile”，然后选择你的情景模式 iyingsuo，在 Proxy Servers 下面选择\n\nSOCKS5协议，后面的server和port填写 shadowsocks-gui 中的配置，一般默认为 127.0.0.1\n\n和 1080\n</code></pre><p>2、选择模式</p>\n<pre><code>在刚才新建的情景模式附近找到自动转换模式，添加需要代理的网站，例如 google.com等，这样就不会出现打不开的情况。\n\n比如你要打开谷歌，在你初次访问谷歌的时候，就会出现打不开，然后选择这个插件按钮的 add condition（添加规则），\n\n把google.com添加到代理里面就可以打开了，其实就是提前加好需要代理的主机而已。\n</code></pre><p> <a href=\"http://www.iyingsuo.com/chrome-shadowsocks-tutorials.html\">官方图文教程</a></p>\n<h3 id=\"FireFox-配置\"><a href=\"#FireFox-配置\" class=\"headerlink\" title=\"FireFox 配置\"></a>FireFox 配置</h3><p><a href=\"http://pan.baidu.com/s/1bn2Refd\">下载插件</a>，提取密码：5usw</p>\n<p>安装插件之后，右键选择该插件，选择 “首选项”–&gt;”代理服务”–&gt;”添加代理”</p>\n<p>代理取名任意，代理主机和端口为 shadowsocks-gui 中的配置，一般默认为 127.0.0.1</p>\n<p>和 1080，点击“确定”完成配置。接下来添加规则订阅，，右键选择该插件，选择 “首选项”–&gt;”代理规则”</p>\n<p>–&gt;”添加规则订阅”，勾选 gfwlist 并启用，点击“应用”—&gt;”确认”。</p>\n"},{"title":"linux 常见命令","date":"2016-07-09T07:43:22.000Z","_content":"\n# 文件和目录\n\n## 进入目录\n```bash\ncd /home    #进入/home目录\ncd ..   #返回上一级目录\ncd ../    #返回上一级\ncd ../..    #返回上两级目录\n\ncd    #进入用户主目录\ncd  ~   #进入用户主目录\ncd  ~username   #进入用户主目录,username为用户名\n```\n\n## 查看路径\n```bash\npwd   #查看当前路径\n```\n## 查看文件信息\n```bash\nls    #查看目录中的文件,不显示隐藏文件\nls -a   #查看当前目录的所有文件，包括隐藏文件\nls -l   #查看当前目录文件的详细信息,隐藏文件不显示，可以使用 ll 代替\nls -al  #查看当前目录所有文件的详细信息，包括隐藏文件\nls *(0-9)*    #显示名包含数字的文件或目录\n\ntree    #查看当前目录的树形结构(需安装)\n```\n## 目录\n```bash\nmkdir dir1    #创建文件夹 dir1\nmkdir -p dir1/dir2/dir3   #递归创建目录 dir1/dir2/dir3,不存在的目录会创建，已创建的忽略\nmkdir dir1 dir2   #同时创建多个目录\n\nrmdir dir1  #删除空目录 dir1\nrmdir dir1 dir2   #删除多个空目录\n\nrm -rf  dir1  #删除目录dir1和里面的所有内容  \n```\n## 文件\n```bash\ntouch file1   ##创建空文件 file1\necho “some content”>> file1  # 向file1追加内容，file1必须是文本文件\nrm file1    #删除文件file1\nrm -rf file1 #删除文件file1,file1可以是目录\n\ncat file1 #从第一个字节开始正向查看文件的内容\ntac file1 #从最后一行开始反向查看一个文件的内容\nmore file1 #查看一个长文件的内容\nless file1 #类似于 'more' 命令，但是它允许在文件中和正向操作一样的反向操作\nhead -n file1 #查看一个文件的前n行\ntail -n file1 #查看一个文件的最后n行\ntail -f /var/log/messages #实时查看被添加到一个文件中的内容\n```\n## 复制\n```bash\ncp fileName1 fileName2    #在当前目录复制fileName1,并命名为fileName2\ncp fileName1 dir1   #复制当期目录的文件file1Name1到dir1目录，如果dir1不是目录，则意义同上\ncp fileName1 dir1/fileName2   #复制当期目录的文件file1Name1到dir1目录,并将文件名字改成fileName2,如果dir1下存在同名文件，将被覆盖\ncp -r dir1  dir2    #将dir1目录下的所有文件复制到dir2目录下\ncp dir1/* dir2    #将dir1目录下的所有文件复制到dir2目录下\ncp dir1/* .   #复制dir1目录下的所有文件到当前工作目录，注意符号\".\"\ncp -a dir1/ .   #复制dir1目录下的所有文件到当前工作目录，注意符号\".\"\n```\n## 移动\n```bash\nmv fileName1 fileName2    #移动fileName1到fileName2,就是重命名文件\nmv dir1 dir2 #移动dir1到dir2,就是重命名文件夹\n```\n## 权限\n```bash\nchmod ugo+rwx dir1  #设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限\nchmod go-rwx dir1   #删除群组(g)与其他人(o)对目录的读写执行权限\nchown user1 file1   #改变一个文件的所有人属性\nchown -R user1 dir1  #改变一个目录的所有人属性并同时改变改目录下所有文件的属性\n```\n### r,w,x权限的定义:\n#### 文件\nr:读取文件的内容\nw:编辑,新增,修改文件的内容(但不含删除该文件的权限)\nx:可执行\n#### 目录\nr:读取目录结构(查询目录下的文件名)\nw:更改目录结构(创建文件或目录,删除文件或子目录,重命名文件或子目录,移动文件或目录)\nx:能否进入目录将目录变成工作目录,只有w权限没有x权限,是不能进入目录的,也就无从谈起对目录进行写操作了,\n  一般要给开放目录给任何人浏览时,至少给r-x权限\n\n\n## 打包压缩\n### zip\n常见参数：\n-m     将文件压缩之后，删除源文件\n-o     将压缩文件内的所有文件的最新变动时间设为压缩时候的时间\n-q     安静模式，在压缩的时候不显示指令的执行过程\n-r     将指定的目录下的所有子目录以及文件一起处理\n-t 日期     把压缩文件的最后修改日期设为指定的日期，日期格式为mmddyyyy\n```bash\nzip -r java.zip /home/dev/Codes/java  #将/home/dev/Codes/java下的所有内容压缩成当前目录下的java.zip,会显示文件添加过程\nzip -rq java.zip /home/dev/Codes/java   #将/home/dev/Codes/java下的所有内容压缩成当前目录下的java.zip,不显示文件添加过程\n```\n### unzip\n可以用来解压 .jar文件\n常见参数：\n-c 将解压缩的结果显示到屏幕上，并对字符做适当的转换。\n-f 更新现有的文件。\n-l 显示压缩文件内所包含的文件。\n-p 与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换。\n-t 检查压缩文件是否正确。\n-u 与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中。\n-v 执行是时显示详细的信息。\n-z 仅显示压缩文件的备注文字。\n-a 对文本文件进行必要的字符转换。\n-b 不要对文本文件进行字符转换。\n-C 压缩文件中的文件名称区分大小写。\n-j 不处理压缩文件中原有的目录路径。\n-L 将压缩文件中的全部文件名改为小写。\n-M 将输出结果送到more程序处理。\n-n 解压缩时不要覆盖原有的文件。\n-o 不必先询问用户，unzip执行后覆盖原有文件。\n-P<密码> 使用zip的密码选项。\n-q 执行时不显示任何信息。\n-s 将文件名中的空白字符转换为底线字符。\n-V 保留VMS的文件版本信息。\n-X 解压缩时同时回存文件原来的UID/GID。\n```bash\nunzip java.zip  #解压java.zip到当前目录\nunzip java.zip dir1 #解压java.zip到dir1\n```\n### tar\n常见参数：\n-c 产生新的包或称建立压缩档案\n-f 指定包含的文件\n-r 增加文件\n-u 更新文件\n-t 列出文件\n-x 解压缩\n-z 调用gzip压缩\n-j 调用bzip2压缩\n-Z 调用compress压缩\n\n```bash\ntar -cvf /tmp/etc.tar /etc #将/etc目录下的所有文件打包到/tmp/etc.tar,不压缩\ntar -zcvf /tmp/etc.tar.gz /etc #将/etc目录下的所有文件打包到/tmp/etc.tar,以gzip压缩\ntar -jcvf /tmp/etc.tar.bz2 /etc #将/etc目录下的所有文件打包到/tmp/etc.tar,以 bzip2 压缩\ntar -cf all.tar *.jpg   #将当前目录所有.jpg的文件打成一个名为all.tar的包\ntar -rf all.tar *.gif   #将所有.gif的文件增加到all.tar的包里面\ntar -uf all.tar logo.gif  #更新原来tar包all.tar中logo.gif文件\ntar -zxvf /tmp/etc.tar.gz etc/passwd #至解压/tmp/etc.tar.gz 内的 etc/passwd\ntar -xf all.tar  #解出all.tar包中所有文件\n\ntar -czf all.tar.gz *.jpg   #将所有.jpg的文件打成一个tar包，并且将其用gzip压缩，生成一个gzip压缩过的包\ntar -xzf all.tar.gz  #将上面产生的包解开\n\ntar -cjf all.tar.bz2 *.jpg   #将所有.jpg的文件打成一个tar包，并且将其用bzip2压缩，生成一个bzip2压缩过的包\ntar -xjf all.tar.bz2  #将上面产生的包解开\n\ntar -cZf all.tar.Z *.jpg   #将所有.jpg的文件打成一个tar包，并且将其用compress压缩，生成一个uncompress压缩过的包\ntar -xZf all.tar.Z #将上面产生的包解开\n```\n### rar\n```bash\nrar a all *.jpg 　#这条命令是将所有.jpg的文件压缩成一个rar包，名为all.rar，该程序会将.rar扩展名将自动附加到包名后。\nunrar e all.rar   #将all.rar中的所有文件解压\n```\n### 文本处理\n```bash\ngrep Aug /var/log/messages #在文件 '/var/log/messages'中查找关键词\"Aug\"\ngrep ^Aug /var/log/messages #在文件 '/var/log/messages'中查找以\"Aug\"开始的词汇\ngrep [0-9] /var/log/messages #选择 '/var/log/messages' 文件中所有包含数字的行\ngrep Aug -R /var/log/* #在目录 '/var/log' 及随后的目录中搜索字符串\"Aug\"\nsed 's/stringa1/stringa2/g' #example.txt 将example.txt文件中的 \"string1\" 替换成 \"string2\"\nsed '/^$/d' example.txt #从example.txt文件中删除所有空白行\nsed '/ *#/d; /^$/d' example.txt #从example.txt文件中删除所有注释和空白行\necho 'esempio' | tr '[:lower:]' '[:upper:]' #合并上下单元格内容\nsed -e '1d' result.txt #从文件example.txt 中排除第一行\nsed -n '/stringa1/p' #查看只包含词汇 \"string1\"的行\nsed -e 's/ *$//' example.txt #删除每一行最后的空白字符\nsed -e 's/stringa1//g' example.txt #从文档中只删除词汇 \"string1\" 并保留剩余全部\nsed -n '1,5p;5q' example.txt #查看从第一行到第5行内容\nsed -n '5p;5q' example.txt# 查看第5行\nsed -e 's/00*/0/g' example.txt #用单个零替换多个零\ncat -n file1 #标示文件的行数\ncat example.txt | awk 'NR%2==1' #删除example.txt文件中的所有偶数行\necho a b c | awk '{print $1}' #查看一行第一栏\necho a b c | awk '{print $1,$3}' #查看一行的第一和第三栏\npaste file1 file2 #合并两个文件或两栏的内容\npaste -d '+' file1 file2 #合并两个文件或两栏的内容，中间用\"+\"区分\nsort file1 file2 #排序两个文件的内容\nsort file1 file2 | uniq #取出两个文件的并集(重复的行只保留一份)\nsort file1 file2 | uniq -u #删除交集，留下其他的行\nsort file1 file2 | uniq -d #取出两个文件的交集(只留下同时存在于两个文件中的文件)\ncomm -1 file1 file2 #比较两个文件的内容只删除 'file1' 所包含的内容\ncomm -2 file1 file2 #比较两个文件的内容只删除 'file2' 所包含的内容\ncomm -3 file1 file2 #比较两个文件的内容只删除两个文件共有的部分\n```\n\n\n## 安装包\n### rpm安装\n```bash\nrpm -ivh package.rpm #安装一个rpm包\nrpm -ivh --nodeeps package.rpm #安装一个rpm包而忽略依赖关系警告\nrpm -U package.rpm #更新一个rpm包但不改变其配置文件\nrpm -F package.rpm #更新一个确定已经安装的rpm包\nrpm -e package_name.rpm #删除一个rpm包\nrpm -qa #显示系统中所有已经安装的rpm包\nrpm -qa | grep httpd #显示所有名称中包含 \"httpd\" 字样的rpm包\nrpm -qi package_name #获取一个已安装包的特殊信息\nrpm -ql package_name #显示一个已经安装的rpm包提供的文件列表\nrpm -qc package_name #显示一个已经安装的rpm包提供的配置文件列表\nrpm -q package_name --whatrequires #显示与一个rpm包存在依赖关系的列表\nrpm -q package_name --whatprovides #显示一个rpm包所占的体积\nrpm -q package_name --scripts #显示在安装/删除期间所执行的脚本l\nrpm -q package_name --changelog #显示一个rpm包的修改历史\nrpm -qf /etc/httpd/conf/httpd.conf #确认所给的文件由哪个rpm包所提供\nrpm -qp package.rpm -l #显示由一个尚未安装的rpm包提供的文件列表\nrpm --import /media/cdrom/RPM-GPG-KEY #导入公钥数字证书\nrpm --checksig package.rpm #确认一个rpm包的完整性\nrpm -qa gpg-pubkey #确认已安装的所有rpm包的完整性\nrpm -V package_name #检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间\nrpm -Va #检查系统中所有已安装的rpm包- 小心使用\nrpm -Vp package.rpm #确认一个rpm包还未安装\nrpm2cpio package.rpm | cpio --extract --make-directories *bin* #从一个rpm包运行可执行文件\nrpm -ivh /usr/src/redhat/RPMS/`arch`/package.rpm #从一个rpm源码安装一个构建好的包\nrpmbuild --rebuild package_name.src.rpm #从一个rpm源码构建一个 rpm 包\n```\n### yum安装\nFedora, RedHat及类似系统\n```bash\n\nyum install package_name #下载并安装一个rpm包\nyum localinstall package_name.rpm #将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系\nyum update package_name.rpm #更新当前系统中所有安装的rpm包\nyum update package_name #更新一个rpm包\nyum remove package_name #删除一个rpm包\nyum list #列出当前系统中安装的所有包\nyum search package_name #在rpm仓库中搜寻软件包\nyum clean packages #清理rpm缓存删除下载的包\nyum clean headers #删除所有头文件\nyum clean all #删除所有缓存的包和头文件\n```\n### deb\nDebian, Ubuntu 以及类似系统\n```bash\ndpkg -i package.deb #安装/更新一个 deb 包\ndpkg -r package_name #从系统删除一个 deb 包\ndpkg -l #显示系统中所有已经安装的 deb 包\ndpkg -l | grep httpd #显示所有名称中包含 \"httpd\" 字样的deb包\ndpkg -s package_name #获得已经安装在系统中一个特殊包的信息\ndpkg -L package_name #显示系统中已经安装的一个deb包所提供的文件列表\ndpkg --contents package.deb #显示尚未安装的一个包所提供的文件列表\ndpkg -S /bin/ping #确认所给的文件由哪个deb包提供\n```\n### apt\nDebian, Ubuntu 以及类似系统，ubuntu16.04开始已经将apt-get替换成apt。\n```bash\napt-get install package_name #安装/更新一个 deb 包\napt-cdrom install package_name #从光盘安装/更新一个 deb 包\napt-get update #升级列表中的软件包\napt-get upgrade #升级所有已安装的软件\napt-get remove package_name #从系统删除一个deb包\napt-get check #确认依赖的软件仓库正确\napt-get clean #从下载的软件包中清理缓存\napt-cache search searched-package #返回包含所要搜索字符串的软件包名称\n```\n# 文件系统\n## 初始化一个文件系统\n```bash\nmkfs /dev/hda1 #在hda1分区创建一个文件系统\nmke2fs /dev/hda1 #在hda1分区创建一个linux ext2的文件系统\nmke2fs -j /dev/hda1 #在hda1分区创建一个linux ext3(日志型)的文件系统\nmkfs -t vfat 32 -F /dev/hda1 #创建一个 FAT32 文件系统\nfdformat -n /dev/fd0 #格式化一个软盘\nmkswap /dev/hda3 #创建一个swap文件系统\n```\n## SWAP文件系统\n```bash\nmkswap /dev/hda3 #创建一个swap文件系统\nswapon /dev/hda3 #启用一个新的swap文件系统\nswapon /dev/hda2 /dev/hdb3 #启用两个swap分区\n```\n## 备份\n```bash\ndump -0aj -f /tmp/home0.bak /home #制作一个 '/home' 目录的完整备份\ndump -1aj -f /tmp/home0.bak /home #制作一个 '/home' 目录的交互式备份\nrestore -if /tmp/home0.bak #还原一个交互式备份\n```\n# 网络\n```bash\nifconfig #显示网络信息，相当于windows的ipconfig\nifconfig eth0 #显示指定以太网卡的配置\nifup eth0 #启用一个 'eth0' 网络设备\nifdown eth0 #禁用一个 'eth0' 网络设备\nifconfig eth0 192.168.1.1 netmask 255.255.255.0 #设置网卡信息\nifconfig eth0 promisc 设置 'eth0' #成混杂模式以嗅探数据包 (sniffing)\ndhclient eth0 #以dhcp模式启用 'eth0'\n```\n# 系统\n## 软件查询\n### 查询版本\n```bash\naptitude show python #查询python版本，需要先install  aptitude\n```\n或者\n```bash\ndpkg -l python #查询python版本\n```\n### 查询路径\n```bash\ndpkg -L python #查询python安装路径\n```\n或\n```bash\nwhereis python #查询python安装路径\n```\n## 内核版本查询\n```\nuname -r\n或\nuname -a\n```\n## 查询发行版本\n```\n# ubuntu\ncat /etc/issue\n# redhat \ncat /etc/redhat-release\n```\n\n## 其他\n```bash\nfdisk -l #查看硬盘分区\nps aux #列出所有进程\nps aux | grep  agent #列出名字中带有”agent“的进程\nkill pid #结束id为pid的进程\nkill -9 pid #强制结束id为pid的进程\nreboot #重启系统\npoweroff #关机\ninit 0 #关机\nhalt #关机，但是需要手动切断电源，不推荐使用\nshutdown -h now #立即关机，后面的now可以替换成时间\nshutdown -r now #重启系统\n\nwhereis cmd #例如 whereis ls，查看ls命令所在位置\n\nfind / -name * #查询/下所有文件，同 ls /\n\nuseradd user1 #添加用户user1\nuserdel user1 #删除用户user1\npasswd user1 #给user1设置密码\n\nsu - #切换root\nsu -  user1 #从root切换成user1\n\nwho #查看登录情况\n\necho #显示环境变量信息，如 echo JAVA_HOME\n\ngrep -ri \"some\" #在当前目录下查看带有”some”的文件内容，包括目录和文件按名，文本文件内容\n```\n","source":"_posts/linux-常见命令.md","raw":"---\ntitle: linux 常见命令\ndate: 2016-07-09 15:43:22\ntags: [linux]\n---\n\n# 文件和目录\n\n## 进入目录\n```bash\ncd /home    #进入/home目录\ncd ..   #返回上一级目录\ncd ../    #返回上一级\ncd ../..    #返回上两级目录\n\ncd    #进入用户主目录\ncd  ~   #进入用户主目录\ncd  ~username   #进入用户主目录,username为用户名\n```\n\n## 查看路径\n```bash\npwd   #查看当前路径\n```\n## 查看文件信息\n```bash\nls    #查看目录中的文件,不显示隐藏文件\nls -a   #查看当前目录的所有文件，包括隐藏文件\nls -l   #查看当前目录文件的详细信息,隐藏文件不显示，可以使用 ll 代替\nls -al  #查看当前目录所有文件的详细信息，包括隐藏文件\nls *(0-9)*    #显示名包含数字的文件或目录\n\ntree    #查看当前目录的树形结构(需安装)\n```\n## 目录\n```bash\nmkdir dir1    #创建文件夹 dir1\nmkdir -p dir1/dir2/dir3   #递归创建目录 dir1/dir2/dir3,不存在的目录会创建，已创建的忽略\nmkdir dir1 dir2   #同时创建多个目录\n\nrmdir dir1  #删除空目录 dir1\nrmdir dir1 dir2   #删除多个空目录\n\nrm -rf  dir1  #删除目录dir1和里面的所有内容  \n```\n## 文件\n```bash\ntouch file1   ##创建空文件 file1\necho “some content”>> file1  # 向file1追加内容，file1必须是文本文件\nrm file1    #删除文件file1\nrm -rf file1 #删除文件file1,file1可以是目录\n\ncat file1 #从第一个字节开始正向查看文件的内容\ntac file1 #从最后一行开始反向查看一个文件的内容\nmore file1 #查看一个长文件的内容\nless file1 #类似于 'more' 命令，但是它允许在文件中和正向操作一样的反向操作\nhead -n file1 #查看一个文件的前n行\ntail -n file1 #查看一个文件的最后n行\ntail -f /var/log/messages #实时查看被添加到一个文件中的内容\n```\n## 复制\n```bash\ncp fileName1 fileName2    #在当前目录复制fileName1,并命名为fileName2\ncp fileName1 dir1   #复制当期目录的文件file1Name1到dir1目录，如果dir1不是目录，则意义同上\ncp fileName1 dir1/fileName2   #复制当期目录的文件file1Name1到dir1目录,并将文件名字改成fileName2,如果dir1下存在同名文件，将被覆盖\ncp -r dir1  dir2    #将dir1目录下的所有文件复制到dir2目录下\ncp dir1/* dir2    #将dir1目录下的所有文件复制到dir2目录下\ncp dir1/* .   #复制dir1目录下的所有文件到当前工作目录，注意符号\".\"\ncp -a dir1/ .   #复制dir1目录下的所有文件到当前工作目录，注意符号\".\"\n```\n## 移动\n```bash\nmv fileName1 fileName2    #移动fileName1到fileName2,就是重命名文件\nmv dir1 dir2 #移动dir1到dir2,就是重命名文件夹\n```\n## 权限\n```bash\nchmod ugo+rwx dir1  #设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限\nchmod go-rwx dir1   #删除群组(g)与其他人(o)对目录的读写执行权限\nchown user1 file1   #改变一个文件的所有人属性\nchown -R user1 dir1  #改变一个目录的所有人属性并同时改变改目录下所有文件的属性\n```\n### r,w,x权限的定义:\n#### 文件\nr:读取文件的内容\nw:编辑,新增,修改文件的内容(但不含删除该文件的权限)\nx:可执行\n#### 目录\nr:读取目录结构(查询目录下的文件名)\nw:更改目录结构(创建文件或目录,删除文件或子目录,重命名文件或子目录,移动文件或目录)\nx:能否进入目录将目录变成工作目录,只有w权限没有x权限,是不能进入目录的,也就无从谈起对目录进行写操作了,\n  一般要给开放目录给任何人浏览时,至少给r-x权限\n\n\n## 打包压缩\n### zip\n常见参数：\n-m     将文件压缩之后，删除源文件\n-o     将压缩文件内的所有文件的最新变动时间设为压缩时候的时间\n-q     安静模式，在压缩的时候不显示指令的执行过程\n-r     将指定的目录下的所有子目录以及文件一起处理\n-t 日期     把压缩文件的最后修改日期设为指定的日期，日期格式为mmddyyyy\n```bash\nzip -r java.zip /home/dev/Codes/java  #将/home/dev/Codes/java下的所有内容压缩成当前目录下的java.zip,会显示文件添加过程\nzip -rq java.zip /home/dev/Codes/java   #将/home/dev/Codes/java下的所有内容压缩成当前目录下的java.zip,不显示文件添加过程\n```\n### unzip\n可以用来解压 .jar文件\n常见参数：\n-c 将解压缩的结果显示到屏幕上，并对字符做适当的转换。\n-f 更新现有的文件。\n-l 显示压缩文件内所包含的文件。\n-p 与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换。\n-t 检查压缩文件是否正确。\n-u 与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中。\n-v 执行是时显示详细的信息。\n-z 仅显示压缩文件的备注文字。\n-a 对文本文件进行必要的字符转换。\n-b 不要对文本文件进行字符转换。\n-C 压缩文件中的文件名称区分大小写。\n-j 不处理压缩文件中原有的目录路径。\n-L 将压缩文件中的全部文件名改为小写。\n-M 将输出结果送到more程序处理。\n-n 解压缩时不要覆盖原有的文件。\n-o 不必先询问用户，unzip执行后覆盖原有文件。\n-P<密码> 使用zip的密码选项。\n-q 执行时不显示任何信息。\n-s 将文件名中的空白字符转换为底线字符。\n-V 保留VMS的文件版本信息。\n-X 解压缩时同时回存文件原来的UID/GID。\n```bash\nunzip java.zip  #解压java.zip到当前目录\nunzip java.zip dir1 #解压java.zip到dir1\n```\n### tar\n常见参数：\n-c 产生新的包或称建立压缩档案\n-f 指定包含的文件\n-r 增加文件\n-u 更新文件\n-t 列出文件\n-x 解压缩\n-z 调用gzip压缩\n-j 调用bzip2压缩\n-Z 调用compress压缩\n\n```bash\ntar -cvf /tmp/etc.tar /etc #将/etc目录下的所有文件打包到/tmp/etc.tar,不压缩\ntar -zcvf /tmp/etc.tar.gz /etc #将/etc目录下的所有文件打包到/tmp/etc.tar,以gzip压缩\ntar -jcvf /tmp/etc.tar.bz2 /etc #将/etc目录下的所有文件打包到/tmp/etc.tar,以 bzip2 压缩\ntar -cf all.tar *.jpg   #将当前目录所有.jpg的文件打成一个名为all.tar的包\ntar -rf all.tar *.gif   #将所有.gif的文件增加到all.tar的包里面\ntar -uf all.tar logo.gif  #更新原来tar包all.tar中logo.gif文件\ntar -zxvf /tmp/etc.tar.gz etc/passwd #至解压/tmp/etc.tar.gz 内的 etc/passwd\ntar -xf all.tar  #解出all.tar包中所有文件\n\ntar -czf all.tar.gz *.jpg   #将所有.jpg的文件打成一个tar包，并且将其用gzip压缩，生成一个gzip压缩过的包\ntar -xzf all.tar.gz  #将上面产生的包解开\n\ntar -cjf all.tar.bz2 *.jpg   #将所有.jpg的文件打成一个tar包，并且将其用bzip2压缩，生成一个bzip2压缩过的包\ntar -xjf all.tar.bz2  #将上面产生的包解开\n\ntar -cZf all.tar.Z *.jpg   #将所有.jpg的文件打成一个tar包，并且将其用compress压缩，生成一个uncompress压缩过的包\ntar -xZf all.tar.Z #将上面产生的包解开\n```\n### rar\n```bash\nrar a all *.jpg 　#这条命令是将所有.jpg的文件压缩成一个rar包，名为all.rar，该程序会将.rar扩展名将自动附加到包名后。\nunrar e all.rar   #将all.rar中的所有文件解压\n```\n### 文本处理\n```bash\ngrep Aug /var/log/messages #在文件 '/var/log/messages'中查找关键词\"Aug\"\ngrep ^Aug /var/log/messages #在文件 '/var/log/messages'中查找以\"Aug\"开始的词汇\ngrep [0-9] /var/log/messages #选择 '/var/log/messages' 文件中所有包含数字的行\ngrep Aug -R /var/log/* #在目录 '/var/log' 及随后的目录中搜索字符串\"Aug\"\nsed 's/stringa1/stringa2/g' #example.txt 将example.txt文件中的 \"string1\" 替换成 \"string2\"\nsed '/^$/d' example.txt #从example.txt文件中删除所有空白行\nsed '/ *#/d; /^$/d' example.txt #从example.txt文件中删除所有注释和空白行\necho 'esempio' | tr '[:lower:]' '[:upper:]' #合并上下单元格内容\nsed -e '1d' result.txt #从文件example.txt 中排除第一行\nsed -n '/stringa1/p' #查看只包含词汇 \"string1\"的行\nsed -e 's/ *$//' example.txt #删除每一行最后的空白字符\nsed -e 's/stringa1//g' example.txt #从文档中只删除词汇 \"string1\" 并保留剩余全部\nsed -n '1,5p;5q' example.txt #查看从第一行到第5行内容\nsed -n '5p;5q' example.txt# 查看第5行\nsed -e 's/00*/0/g' example.txt #用单个零替换多个零\ncat -n file1 #标示文件的行数\ncat example.txt | awk 'NR%2==1' #删除example.txt文件中的所有偶数行\necho a b c | awk '{print $1}' #查看一行第一栏\necho a b c | awk '{print $1,$3}' #查看一行的第一和第三栏\npaste file1 file2 #合并两个文件或两栏的内容\npaste -d '+' file1 file2 #合并两个文件或两栏的内容，中间用\"+\"区分\nsort file1 file2 #排序两个文件的内容\nsort file1 file2 | uniq #取出两个文件的并集(重复的行只保留一份)\nsort file1 file2 | uniq -u #删除交集，留下其他的行\nsort file1 file2 | uniq -d #取出两个文件的交集(只留下同时存在于两个文件中的文件)\ncomm -1 file1 file2 #比较两个文件的内容只删除 'file1' 所包含的内容\ncomm -2 file1 file2 #比较两个文件的内容只删除 'file2' 所包含的内容\ncomm -3 file1 file2 #比较两个文件的内容只删除两个文件共有的部分\n```\n\n\n## 安装包\n### rpm安装\n```bash\nrpm -ivh package.rpm #安装一个rpm包\nrpm -ivh --nodeeps package.rpm #安装一个rpm包而忽略依赖关系警告\nrpm -U package.rpm #更新一个rpm包但不改变其配置文件\nrpm -F package.rpm #更新一个确定已经安装的rpm包\nrpm -e package_name.rpm #删除一个rpm包\nrpm -qa #显示系统中所有已经安装的rpm包\nrpm -qa | grep httpd #显示所有名称中包含 \"httpd\" 字样的rpm包\nrpm -qi package_name #获取一个已安装包的特殊信息\nrpm -ql package_name #显示一个已经安装的rpm包提供的文件列表\nrpm -qc package_name #显示一个已经安装的rpm包提供的配置文件列表\nrpm -q package_name --whatrequires #显示与一个rpm包存在依赖关系的列表\nrpm -q package_name --whatprovides #显示一个rpm包所占的体积\nrpm -q package_name --scripts #显示在安装/删除期间所执行的脚本l\nrpm -q package_name --changelog #显示一个rpm包的修改历史\nrpm -qf /etc/httpd/conf/httpd.conf #确认所给的文件由哪个rpm包所提供\nrpm -qp package.rpm -l #显示由一个尚未安装的rpm包提供的文件列表\nrpm --import /media/cdrom/RPM-GPG-KEY #导入公钥数字证书\nrpm --checksig package.rpm #确认一个rpm包的完整性\nrpm -qa gpg-pubkey #确认已安装的所有rpm包的完整性\nrpm -V package_name #检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间\nrpm -Va #检查系统中所有已安装的rpm包- 小心使用\nrpm -Vp package.rpm #确认一个rpm包还未安装\nrpm2cpio package.rpm | cpio --extract --make-directories *bin* #从一个rpm包运行可执行文件\nrpm -ivh /usr/src/redhat/RPMS/`arch`/package.rpm #从一个rpm源码安装一个构建好的包\nrpmbuild --rebuild package_name.src.rpm #从一个rpm源码构建一个 rpm 包\n```\n### yum安装\nFedora, RedHat及类似系统\n```bash\n\nyum install package_name #下载并安装一个rpm包\nyum localinstall package_name.rpm #将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系\nyum update package_name.rpm #更新当前系统中所有安装的rpm包\nyum update package_name #更新一个rpm包\nyum remove package_name #删除一个rpm包\nyum list #列出当前系统中安装的所有包\nyum search package_name #在rpm仓库中搜寻软件包\nyum clean packages #清理rpm缓存删除下载的包\nyum clean headers #删除所有头文件\nyum clean all #删除所有缓存的包和头文件\n```\n### deb\nDebian, Ubuntu 以及类似系统\n```bash\ndpkg -i package.deb #安装/更新一个 deb 包\ndpkg -r package_name #从系统删除一个 deb 包\ndpkg -l #显示系统中所有已经安装的 deb 包\ndpkg -l | grep httpd #显示所有名称中包含 \"httpd\" 字样的deb包\ndpkg -s package_name #获得已经安装在系统中一个特殊包的信息\ndpkg -L package_name #显示系统中已经安装的一个deb包所提供的文件列表\ndpkg --contents package.deb #显示尚未安装的一个包所提供的文件列表\ndpkg -S /bin/ping #确认所给的文件由哪个deb包提供\n```\n### apt\nDebian, Ubuntu 以及类似系统，ubuntu16.04开始已经将apt-get替换成apt。\n```bash\napt-get install package_name #安装/更新一个 deb 包\napt-cdrom install package_name #从光盘安装/更新一个 deb 包\napt-get update #升级列表中的软件包\napt-get upgrade #升级所有已安装的软件\napt-get remove package_name #从系统删除一个deb包\napt-get check #确认依赖的软件仓库正确\napt-get clean #从下载的软件包中清理缓存\napt-cache search searched-package #返回包含所要搜索字符串的软件包名称\n```\n# 文件系统\n## 初始化一个文件系统\n```bash\nmkfs /dev/hda1 #在hda1分区创建一个文件系统\nmke2fs /dev/hda1 #在hda1分区创建一个linux ext2的文件系统\nmke2fs -j /dev/hda1 #在hda1分区创建一个linux ext3(日志型)的文件系统\nmkfs -t vfat 32 -F /dev/hda1 #创建一个 FAT32 文件系统\nfdformat -n /dev/fd0 #格式化一个软盘\nmkswap /dev/hda3 #创建一个swap文件系统\n```\n## SWAP文件系统\n```bash\nmkswap /dev/hda3 #创建一个swap文件系统\nswapon /dev/hda3 #启用一个新的swap文件系统\nswapon /dev/hda2 /dev/hdb3 #启用两个swap分区\n```\n## 备份\n```bash\ndump -0aj -f /tmp/home0.bak /home #制作一个 '/home' 目录的完整备份\ndump -1aj -f /tmp/home0.bak /home #制作一个 '/home' 目录的交互式备份\nrestore -if /tmp/home0.bak #还原一个交互式备份\n```\n# 网络\n```bash\nifconfig #显示网络信息，相当于windows的ipconfig\nifconfig eth0 #显示指定以太网卡的配置\nifup eth0 #启用一个 'eth0' 网络设备\nifdown eth0 #禁用一个 'eth0' 网络设备\nifconfig eth0 192.168.1.1 netmask 255.255.255.0 #设置网卡信息\nifconfig eth0 promisc 设置 'eth0' #成混杂模式以嗅探数据包 (sniffing)\ndhclient eth0 #以dhcp模式启用 'eth0'\n```\n# 系统\n## 软件查询\n### 查询版本\n```bash\naptitude show python #查询python版本，需要先install  aptitude\n```\n或者\n```bash\ndpkg -l python #查询python版本\n```\n### 查询路径\n```bash\ndpkg -L python #查询python安装路径\n```\n或\n```bash\nwhereis python #查询python安装路径\n```\n## 内核版本查询\n```\nuname -r\n或\nuname -a\n```\n## 查询发行版本\n```\n# ubuntu\ncat /etc/issue\n# redhat \ncat /etc/redhat-release\n```\n\n## 其他\n```bash\nfdisk -l #查看硬盘分区\nps aux #列出所有进程\nps aux | grep  agent #列出名字中带有”agent“的进程\nkill pid #结束id为pid的进程\nkill -9 pid #强制结束id为pid的进程\nreboot #重启系统\npoweroff #关机\ninit 0 #关机\nhalt #关机，但是需要手动切断电源，不推荐使用\nshutdown -h now #立即关机，后面的now可以替换成时间\nshutdown -r now #重启系统\n\nwhereis cmd #例如 whereis ls，查看ls命令所在位置\n\nfind / -name * #查询/下所有文件，同 ls /\n\nuseradd user1 #添加用户user1\nuserdel user1 #删除用户user1\npasswd user1 #给user1设置密码\n\nsu - #切换root\nsu -  user1 #从root切换成user1\n\nwho #查看登录情况\n\necho #显示环境变量信息，如 echo JAVA_HOME\n\ngrep -ri \"some\" #在当前目录下查看带有”some”的文件内容，包括目录和文件按名，文本文件内容\n```\n","slug":"linux-常见命令","published":1,"updated":"2017-08-18T13:17:27.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw91000ojeh89a6v4zq2","content":"<h1 id=\"文件和目录\"><a href=\"#文件和目录\" class=\"headerlink\" title=\"文件和目录\"></a>文件和目录</h1><h2 id=\"进入目录\"><a href=\"#进入目录\" class=\"headerlink\" title=\"进入目录\"></a>进入目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /home    <span class=\"comment\">#进入/home目录</span></div><div class=\"line\"><span class=\"built_in\">cd</span> ..   <span class=\"comment\">#返回上一级目录</span></div><div class=\"line\"><span class=\"built_in\">cd</span> ../    <span class=\"comment\">#返回上一级</span></div><div class=\"line\"><span class=\"built_in\">cd</span> ../..    <span class=\"comment\">#返回上两级目录</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">cd</span>    <span class=\"comment\">#进入用户主目录</span></div><div class=\"line\"><span class=\"built_in\">cd</span>  ~   <span class=\"comment\">#进入用户主目录</span></div><div class=\"line\"><span class=\"built_in\">cd</span>  ~username   <span class=\"comment\">#进入用户主目录,username为用户名</span></div></pre></td></tr></table></figure>\n<h2 id=\"查看路径\"><a href=\"#查看路径\" class=\"headerlink\" title=\"查看路径\"></a>查看路径</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">pwd</span>   <span class=\"comment\">#查看当前路径</span></div></pre></td></tr></table></figure>\n<h2 id=\"查看文件信息\"><a href=\"#查看文件信息\" class=\"headerlink\" title=\"查看文件信息\"></a>查看文件信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">ls    <span class=\"comment\">#查看目录中的文件,不显示隐藏文件</span></div><div class=\"line\">ls <span class=\"_\">-a</span>   <span class=\"comment\">#查看当前目录的所有文件，包括隐藏文件</span></div><div class=\"line\">ls <span class=\"_\">-l</span>   <span class=\"comment\">#查看当前目录文件的详细信息,隐藏文件不显示，可以使用 ll 代替</span></div><div class=\"line\">ls -al  <span class=\"comment\">#查看当前目录所有文件的详细信息，包括隐藏文件</span></div><div class=\"line\">ls *(0-9)*    <span class=\"comment\">#显示名包含数字的文件或目录</span></div><div class=\"line\"></div><div class=\"line\">tree    <span class=\"comment\">#查看当前目录的树形结构(需安装)</span></div></pre></td></tr></table></figure>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir dir1    <span class=\"comment\">#创建文件夹 dir1</span></div><div class=\"line\">mkdir -p dir1/dir2/dir3   <span class=\"comment\">#递归创建目录 dir1/dir2/dir3,不存在的目录会创建，已创建的忽略</span></div><div class=\"line\">mkdir dir1 dir2   <span class=\"comment\">#同时创建多个目录</span></div><div class=\"line\"></div><div class=\"line\">rmdir dir1  <span class=\"comment\">#删除空目录 dir1</span></div><div class=\"line\">rmdir dir1 dir2   <span class=\"comment\">#删除多个空目录</span></div><div class=\"line\"></div><div class=\"line\">rm -rf  dir1  <span class=\"comment\">#删除目录dir1和里面的所有内容</span></div></pre></td></tr></table></figure>\n<h2 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">touch file1   <span class=\"comment\">##创建空文件 file1</span></div><div class=\"line\"><span class=\"built_in\">echo</span> “some content”&gt;&gt; file1  <span class=\"comment\"># 向file1追加内容，file1必须是文本文件</span></div><div class=\"line\">rm file1    <span class=\"comment\">#删除文件file1</span></div><div class=\"line\">rm -rf file1 <span class=\"comment\">#删除文件file1,file1可以是目录</span></div><div class=\"line\"></div><div class=\"line\">cat file1 <span class=\"comment\">#从第一个字节开始正向查看文件的内容</span></div><div class=\"line\">tac file1 <span class=\"comment\">#从最后一行开始反向查看一个文件的内容</span></div><div class=\"line\">more file1 <span class=\"comment\">#查看一个长文件的内容</span></div><div class=\"line\">less file1 <span class=\"comment\">#类似于 'more' 命令，但是它允许在文件中和正向操作一样的反向操作</span></div><div class=\"line\">head -n file1 <span class=\"comment\">#查看一个文件的前n行</span></div><div class=\"line\">tail -n file1 <span class=\"comment\">#查看一个文件的最后n行</span></div><div class=\"line\">tail <span class=\"_\">-f</span> /var/<span class=\"built_in\">log</span>/messages <span class=\"comment\">#实时查看被添加到一个文件中的内容</span></div></pre></td></tr></table></figure>\n<h2 id=\"复制\"><a href=\"#复制\" class=\"headerlink\" title=\"复制\"></a>复制</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp fileName1 fileName2    <span class=\"comment\">#在当前目录复制fileName1,并命名为fileName2</span></div><div class=\"line\">cp fileName1 dir1   <span class=\"comment\">#复制当期目录的文件file1Name1到dir1目录，如果dir1不是目录，则意义同上</span></div><div class=\"line\">cp fileName1 dir1/fileName2   <span class=\"comment\">#复制当期目录的文件file1Name1到dir1目录,并将文件名字改成fileName2,如果dir1下存在同名文件，将被覆盖</span></div><div class=\"line\">cp -r dir1  dir2    <span class=\"comment\">#将dir1目录下的所有文件复制到dir2目录下</span></div><div class=\"line\">cp dir1/* dir2    <span class=\"comment\">#将dir1目录下的所有文件复制到dir2目录下</span></div><div class=\"line\">cp dir1/* .   <span class=\"comment\">#复制dir1目录下的所有文件到当前工作目录，注意符号\".\"</span></div><div class=\"line\">cp <span class=\"_\">-a</span> dir1/ .   <span class=\"comment\">#复制dir1目录下的所有文件到当前工作目录，注意符号\".\"</span></div></pre></td></tr></table></figure>\n<h2 id=\"移动\"><a href=\"#移动\" class=\"headerlink\" title=\"移动\"></a>移动</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mv fileName1 fileName2    <span class=\"comment\">#移动fileName1到fileName2,就是重命名文件</span></div><div class=\"line\">mv dir1 dir2 <span class=\"comment\">#移动dir1到dir2,就是重命名文件夹</span></div></pre></td></tr></table></figure>\n<h2 id=\"权限\"><a href=\"#权限\" class=\"headerlink\" title=\"权限\"></a>权限</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod ugo+rwx dir1  <span class=\"comment\">#设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限</span></div><div class=\"line\">chmod go-rwx dir1   <span class=\"comment\">#删除群组(g)与其他人(o)对目录的读写执行权限</span></div><div class=\"line\">chown user1 file1   <span class=\"comment\">#改变一个文件的所有人属性</span></div><div class=\"line\">chown -R user1 dir1  <span class=\"comment\">#改变一个目录的所有人属性并同时改变改目录下所有文件的属性</span></div></pre></td></tr></table></figure>\n<h3 id=\"r-w-x权限的定义\"><a href=\"#r-w-x权限的定义\" class=\"headerlink\" title=\"r,w,x权限的定义:\"></a>r,w,x权限的定义:</h3><h4 id=\"文件-1\"><a href=\"#文件-1\" class=\"headerlink\" title=\"文件\"></a>文件</h4><p>r:读取文件的内容<br>w:编辑,新增,修改文件的内容(但不含删除该文件的权限)<br>x:可执行</p>\n<h4 id=\"目录-1\"><a href=\"#目录-1\" class=\"headerlink\" title=\"目录\"></a>目录</h4><p>r:读取目录结构(查询目录下的文件名)<br>w:更改目录结构(创建文件或目录,删除文件或子目录,重命名文件或子目录,移动文件或目录)<br>x:能否进入目录将目录变成工作目录,只有w权限没有x权限,是不能进入目录的,也就无从谈起对目录进行写操作了,<br>  一般要给开放目录给任何人浏览时,至少给r-x权限</p>\n<h2 id=\"打包压缩\"><a href=\"#打包压缩\" class=\"headerlink\" title=\"打包压缩\"></a>打包压缩</h2><h3 id=\"zip\"><a href=\"#zip\" class=\"headerlink\" title=\"zip\"></a>zip</h3><p>常见参数：<br>-m     将文件压缩之后，删除源文件<br>-o     将压缩文件内的所有文件的最新变动时间设为压缩时候的时间<br>-q     安静模式，在压缩的时候不显示指令的执行过程<br>-r     将指定的目录下的所有子目录以及文件一起处理<br>-t 日期     把压缩文件的最后修改日期设为指定的日期，日期格式为mmddyyyy<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">zip -r java.zip /home/dev/Codes/java  <span class=\"comment\">#将/home/dev/Codes/java下的所有内容压缩成当前目录下的java.zip,会显示文件添加过程</span></div><div class=\"line\">zip -rq java.zip /home/dev/Codes/java   <span class=\"comment\">#将/home/dev/Codes/java下的所有内容压缩成当前目录下的java.zip,不显示文件添加过程</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"unzip\"><a href=\"#unzip\" class=\"headerlink\" title=\"unzip\"></a>unzip</h3><p>可以用来解压 .jar文件<br>常见参数：<br>-c 将解压缩的结果显示到屏幕上，并对字符做适当的转换。<br>-f 更新现有的文件。<br>-l 显示压缩文件内所包含的文件。<br>-p 与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换。<br>-t 检查压缩文件是否正确。<br>-u 与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中。<br>-v 执行是时显示详细的信息。<br>-z 仅显示压缩文件的备注文字。<br>-a 对文本文件进行必要的字符转换。<br>-b 不要对文本文件进行字符转换。<br>-C 压缩文件中的文件名称区分大小写。<br>-j 不处理压缩文件中原有的目录路径。<br>-L 将压缩文件中的全部文件名改为小写。<br>-M 将输出结果送到more程序处理。<br>-n 解压缩时不要覆盖原有的文件。<br>-o 不必先询问用户，unzip执行后覆盖原有文件。<br>-P&lt;密码&gt; 使用zip的密码选项。<br>-q 执行时不显示任何信息。<br>-s 将文件名中的空白字符转换为底线字符。<br>-V 保留VMS的文件版本信息。<br>-X 解压缩时同时回存文件原来的UID/GID。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">unzip java.zip  <span class=\"comment\">#解压java.zip到当前目录</span></div><div class=\"line\">unzip java.zip dir1 <span class=\"comment\">#解压java.zip到dir1</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"tar\"><a href=\"#tar\" class=\"headerlink\" title=\"tar\"></a>tar</h3><p>常见参数：<br>-c 产生新的包或称建立压缩档案<br>-f 指定包含的文件<br>-r 增加文件<br>-u 更新文件<br>-t 列出文件<br>-x 解压缩<br>-z 调用gzip压缩<br>-j 调用bzip2压缩<br>-Z 调用compress压缩</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar -cvf /tmp/etc.tar /etc <span class=\"comment\">#将/etc目录下的所有文件打包到/tmp/etc.tar,不压缩</span></div><div class=\"line\">tar -zcvf /tmp/etc.tar.gz /etc <span class=\"comment\">#将/etc目录下的所有文件打包到/tmp/etc.tar,以gzip压缩</span></div><div class=\"line\">tar -jcvf /tmp/etc.tar.bz2 /etc <span class=\"comment\">#将/etc目录下的所有文件打包到/tmp/etc.tar,以 bzip2 压缩</span></div><div class=\"line\">tar -cf all.tar *.jpg   <span class=\"comment\">#将当前目录所有.jpg的文件打成一个名为all.tar的包</span></div><div class=\"line\">tar -rf all.tar *.gif   <span class=\"comment\">#将所有.gif的文件增加到all.tar的包里面</span></div><div class=\"line\">tar -uf all.tar logo.gif  <span class=\"comment\">#更新原来tar包all.tar中logo.gif文件</span></div><div class=\"line\">tar -zxvf /tmp/etc.tar.gz etc/passwd <span class=\"comment\">#至解压/tmp/etc.tar.gz 内的 etc/passwd</span></div><div class=\"line\">tar -xf all.tar  <span class=\"comment\">#解出all.tar包中所有文件</span></div><div class=\"line\"></div><div class=\"line\">tar -czf all.tar.gz *.jpg   <span class=\"comment\">#将所有.jpg的文件打成一个tar包，并且将其用gzip压缩，生成一个gzip压缩过的包</span></div><div class=\"line\">tar -xzf all.tar.gz  <span class=\"comment\">#将上面产生的包解开</span></div><div class=\"line\"></div><div class=\"line\">tar -cjf all.tar.bz2 *.jpg   <span class=\"comment\">#将所有.jpg的文件打成一个tar包，并且将其用bzip2压缩，生成一个bzip2压缩过的包</span></div><div class=\"line\">tar -xjf all.tar.bz2  <span class=\"comment\">#将上面产生的包解开</span></div><div class=\"line\"></div><div class=\"line\">tar -cZf all.tar.Z *.jpg   <span class=\"comment\">#将所有.jpg的文件打成一个tar包，并且将其用compress压缩，生成一个uncompress压缩过的包</span></div><div class=\"line\">tar -xZf all.tar.Z <span class=\"comment\">#将上面产生的包解开</span></div></pre></td></tr></table></figure>\n<h3 id=\"rar\"><a href=\"#rar\" class=\"headerlink\" title=\"rar\"></a>rar</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">rar a all *.jpg 　<span class=\"comment\">#这条命令是将所有.jpg的文件压缩成一个rar包，名为all.rar，该程序会将.rar扩展名将自动附加到包名后。</span></div><div class=\"line\">unrar e all.rar   <span class=\"comment\">#将all.rar中的所有文件解压</span></div></pre></td></tr></table></figure>\n<h3 id=\"文本处理\"><a href=\"#文本处理\" class=\"headerlink\" title=\"文本处理\"></a>文本处理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">grep Aug /var/<span class=\"built_in\">log</span>/messages <span class=\"comment\">#在文件 '/var/log/messages'中查找关键词\"Aug\"</span></div><div class=\"line\">grep ^Aug /var/<span class=\"built_in\">log</span>/messages <span class=\"comment\">#在文件 '/var/log/messages'中查找以\"Aug\"开始的词汇</span></div><div class=\"line\">grep [0-9] /var/<span class=\"built_in\">log</span>/messages <span class=\"comment\">#选择 '/var/log/messages' 文件中所有包含数字的行</span></div><div class=\"line\">grep Aug -R /var/<span class=\"built_in\">log</span>/* <span class=\"comment\">#在目录 '/var/log' 及随后的目录中搜索字符串\"Aug\"</span></div><div class=\"line\">sed <span class=\"string\">'s/stringa1/stringa2/g'</span> <span class=\"comment\">#example.txt 将example.txt文件中的 \"string1\" 替换成 \"string2\"</span></div><div class=\"line\">sed <span class=\"string\">'/^$/d'</span> example.txt <span class=\"comment\">#从example.txt文件中删除所有空白行</span></div><div class=\"line\">sed <span class=\"string\">'/ *#/d; /^$/d'</span> example.txt <span class=\"comment\">#从example.txt文件中删除所有注释和空白行</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'esempio'</span> | tr <span class=\"string\">'[:lower:]'</span> <span class=\"string\">'[:upper:]'</span> <span class=\"comment\">#合并上下单元格内容</span></div><div class=\"line\">sed <span class=\"_\">-e</span> <span class=\"string\">'1d'</span> result.txt <span class=\"comment\">#从文件example.txt 中排除第一行</span></div><div class=\"line\">sed -n <span class=\"string\">'/stringa1/p'</span> <span class=\"comment\">#查看只包含词汇 \"string1\"的行</span></div><div class=\"line\">sed <span class=\"_\">-e</span> <span class=\"string\">'s/ *$//'</span> example.txt <span class=\"comment\">#删除每一行最后的空白字符</span></div><div class=\"line\">sed <span class=\"_\">-e</span> <span class=\"string\">'s/stringa1//g'</span> example.txt <span class=\"comment\">#从文档中只删除词汇 \"string1\" 并保留剩余全部</span></div><div class=\"line\">sed -n <span class=\"string\">'1,5p;5q'</span> example.txt <span class=\"comment\">#查看从第一行到第5行内容</span></div><div class=\"line\">sed -n <span class=\"string\">'5p;5q'</span> example.txt<span class=\"comment\"># 查看第5行</span></div><div class=\"line\">sed <span class=\"_\">-e</span> <span class=\"string\">'s/00*/0/g'</span> example.txt <span class=\"comment\">#用单个零替换多个零</span></div><div class=\"line\">cat -n file1 <span class=\"comment\">#标示文件的行数</span></div><div class=\"line\">cat example.txt | awk <span class=\"string\">'NR%2==1'</span> <span class=\"comment\">#删除example.txt文件中的所有偶数行</span></div><div class=\"line\"><span class=\"built_in\">echo</span> a b c | awk <span class=\"string\">'&#123;print $1&#125;'</span> <span class=\"comment\">#查看一行第一栏</span></div><div class=\"line\"><span class=\"built_in\">echo</span> a b c | awk <span class=\"string\">'&#123;print $1,$3&#125;'</span> <span class=\"comment\">#查看一行的第一和第三栏</span></div><div class=\"line\">paste file1 file2 <span class=\"comment\">#合并两个文件或两栏的内容</span></div><div class=\"line\">paste <span class=\"_\">-d</span> <span class=\"string\">'+'</span> file1 file2 <span class=\"comment\">#合并两个文件或两栏的内容，中间用\"+\"区分</span></div><div class=\"line\">sort file1 file2 <span class=\"comment\">#排序两个文件的内容</span></div><div class=\"line\">sort file1 file2 | uniq <span class=\"comment\">#取出两个文件的并集(重复的行只保留一份)</span></div><div class=\"line\">sort file1 file2 | uniq -u <span class=\"comment\">#删除交集，留下其他的行</span></div><div class=\"line\">sort file1 file2 | uniq <span class=\"_\">-d</span> <span class=\"comment\">#取出两个文件的交集(只留下同时存在于两个文件中的文件)</span></div><div class=\"line\">comm -1 file1 file2 <span class=\"comment\">#比较两个文件的内容只删除 'file1' 所包含的内容</span></div><div class=\"line\">comm -2 file1 file2 <span class=\"comment\">#比较两个文件的内容只删除 'file2' 所包含的内容</span></div><div class=\"line\">comm -3 file1 file2 <span class=\"comment\">#比较两个文件的内容只删除两个文件共有的部分</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装包\"><a href=\"#安装包\" class=\"headerlink\" title=\"安装包\"></a>安装包</h2><h3 id=\"rpm安装\"><a href=\"#rpm安装\" class=\"headerlink\" title=\"rpm安装\"></a>rpm安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">rpm -ivh package.rpm <span class=\"comment\">#安装一个rpm包</span></div><div class=\"line\">rpm -ivh --nodeeps package.rpm <span class=\"comment\">#安装一个rpm包而忽略依赖关系警告</span></div><div class=\"line\">rpm -U package.rpm <span class=\"comment\">#更新一个rpm包但不改变其配置文件</span></div><div class=\"line\">rpm -F package.rpm <span class=\"comment\">#更新一个确定已经安装的rpm包</span></div><div class=\"line\">rpm <span class=\"_\">-e</span> package_name.rpm <span class=\"comment\">#删除一个rpm包</span></div><div class=\"line\">rpm -qa <span class=\"comment\">#显示系统中所有已经安装的rpm包</span></div><div class=\"line\">rpm -qa | grep httpd <span class=\"comment\">#显示所有名称中包含 \"httpd\" 字样的rpm包</span></div><div class=\"line\">rpm -qi package_name <span class=\"comment\">#获取一个已安装包的特殊信息</span></div><div class=\"line\">rpm -ql package_name <span class=\"comment\">#显示一个已经安装的rpm包提供的文件列表</span></div><div class=\"line\">rpm -qc package_name <span class=\"comment\">#显示一个已经安装的rpm包提供的配置文件列表</span></div><div class=\"line\">rpm -q package_name --whatrequires <span class=\"comment\">#显示与一个rpm包存在依赖关系的列表</span></div><div class=\"line\">rpm -q package_name --whatprovides <span class=\"comment\">#显示一个rpm包所占的体积</span></div><div class=\"line\">rpm -q package_name --scripts <span class=\"comment\">#显示在安装/删除期间所执行的脚本l</span></div><div class=\"line\">rpm -q package_name --changelog <span class=\"comment\">#显示一个rpm包的修改历史</span></div><div class=\"line\">rpm -qf /etc/httpd/conf/httpd.conf <span class=\"comment\">#确认所给的文件由哪个rpm包所提供</span></div><div class=\"line\">rpm -qp package.rpm <span class=\"_\">-l</span> <span class=\"comment\">#显示由一个尚未安装的rpm包提供的文件列表</span></div><div class=\"line\">rpm --import /media/cdrom/RPM-GPG-KEY <span class=\"comment\">#导入公钥数字证书</span></div><div class=\"line\">rpm --checksig package.rpm <span class=\"comment\">#确认一个rpm包的完整性</span></div><div class=\"line\">rpm -qa gpg-pubkey <span class=\"comment\">#确认已安装的所有rpm包的完整性</span></div><div class=\"line\">rpm -V package_name <span class=\"comment\">#检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间</span></div><div class=\"line\">rpm -Va <span class=\"comment\">#检查系统中所有已安装的rpm包- 小心使用</span></div><div class=\"line\">rpm -Vp package.rpm <span class=\"comment\">#确认一个rpm包还未安装</span></div><div class=\"line\">rpm2cpio package.rpm | cpio --extract --make-directories *bin* <span class=\"comment\">#从一个rpm包运行可执行文件</span></div><div class=\"line\">rpm -ivh /usr/src/redhat/RPMS/`arch`/package.rpm <span class=\"comment\">#从一个rpm源码安装一个构建好的包</span></div><div class=\"line\">rpmbuild --rebuild package_name.src.rpm <span class=\"comment\">#从一个rpm源码构建一个 rpm 包</span></div></pre></td></tr></table></figure>\n<h3 id=\"yum安装\"><a href=\"#yum安装\" class=\"headerlink\" title=\"yum安装\"></a>yum安装</h3><p>Fedora, RedHat及类似系统<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">yum install package_name <span class=\"comment\">#下载并安装一个rpm包</span></div><div class=\"line\">yum localinstall package_name.rpm <span class=\"comment\">#将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系</span></div><div class=\"line\">yum update package_name.rpm <span class=\"comment\">#更新当前系统中所有安装的rpm包</span></div><div class=\"line\">yum update package_name <span class=\"comment\">#更新一个rpm包</span></div><div class=\"line\">yum remove package_name <span class=\"comment\">#删除一个rpm包</span></div><div class=\"line\">yum list <span class=\"comment\">#列出当前系统中安装的所有包</span></div><div class=\"line\">yum search package_name <span class=\"comment\">#在rpm仓库中搜寻软件包</span></div><div class=\"line\">yum clean packages <span class=\"comment\">#清理rpm缓存删除下载的包</span></div><div class=\"line\">yum clean headers <span class=\"comment\">#删除所有头文件</span></div><div class=\"line\">yum clean all <span class=\"comment\">#删除所有缓存的包和头文件</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"deb\"><a href=\"#deb\" class=\"headerlink\" title=\"deb\"></a>deb</h3><p>Debian, Ubuntu 以及类似系统<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">dpkg -i package.deb <span class=\"comment\">#安装/更新一个 deb 包</span></div><div class=\"line\">dpkg -r package_name <span class=\"comment\">#从系统删除一个 deb 包</span></div><div class=\"line\">dpkg <span class=\"_\">-l</span> <span class=\"comment\">#显示系统中所有已经安装的 deb 包</span></div><div class=\"line\">dpkg <span class=\"_\">-l</span> | grep httpd <span class=\"comment\">#显示所有名称中包含 \"httpd\" 字样的deb包</span></div><div class=\"line\">dpkg <span class=\"_\">-s</span> package_name <span class=\"comment\">#获得已经安装在系统中一个特殊包的信息</span></div><div class=\"line\">dpkg -L package_name <span class=\"comment\">#显示系统中已经安装的一个deb包所提供的文件列表</span></div><div class=\"line\">dpkg --contents package.deb <span class=\"comment\">#显示尚未安装的一个包所提供的文件列表</span></div><div class=\"line\">dpkg -S /bin/ping <span class=\"comment\">#确认所给的文件由哪个deb包提供</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"apt\"><a href=\"#apt\" class=\"headerlink\" title=\"apt\"></a>apt</h3><p>Debian, Ubuntu 以及类似系统，ubuntu16.04开始已经将apt-get替换成apt。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install package_name <span class=\"comment\">#安装/更新一个 deb 包</span></div><div class=\"line\">apt-cdrom install package_name <span class=\"comment\">#从光盘安装/更新一个 deb 包</span></div><div class=\"line\">apt-get update <span class=\"comment\">#升级列表中的软件包</span></div><div class=\"line\">apt-get upgrade <span class=\"comment\">#升级所有已安装的软件</span></div><div class=\"line\">apt-get remove package_name <span class=\"comment\">#从系统删除一个deb包</span></div><div class=\"line\">apt-get check <span class=\"comment\">#确认依赖的软件仓库正确</span></div><div class=\"line\">apt-get clean <span class=\"comment\">#从下载的软件包中清理缓存</span></div><div class=\"line\">apt-cache search searched-package <span class=\"comment\">#返回包含所要搜索字符串的软件包名称</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"文件系统\"><a href=\"#文件系统\" class=\"headerlink\" title=\"文件系统\"></a>文件系统</h1><h2 id=\"初始化一个文件系统\"><a href=\"#初始化一个文件系统\" class=\"headerlink\" title=\"初始化一个文件系统\"></a>初始化一个文件系统</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkfs /dev/hda1 <span class=\"comment\">#在hda1分区创建一个文件系统</span></div><div class=\"line\">mke2fs /dev/hda1 <span class=\"comment\">#在hda1分区创建一个linux ext2的文件系统</span></div><div class=\"line\">mke2fs -j /dev/hda1 <span class=\"comment\">#在hda1分区创建一个linux ext3(日志型)的文件系统</span></div><div class=\"line\">mkfs -t vfat 32 -F /dev/hda1 <span class=\"comment\">#创建一个 FAT32 文件系统</span></div><div class=\"line\">fdformat -n /dev/fd0 <span class=\"comment\">#格式化一个软盘</span></div><div class=\"line\">mkswap /dev/hda3 <span class=\"comment\">#创建一个swap文件系统</span></div></pre></td></tr></table></figure>\n<h2 id=\"SWAP文件系统\"><a href=\"#SWAP文件系统\" class=\"headerlink\" title=\"SWAP文件系统\"></a>SWAP文件系统</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkswap /dev/hda3 <span class=\"comment\">#创建一个swap文件系统</span></div><div class=\"line\">swapon /dev/hda3 <span class=\"comment\">#启用一个新的swap文件系统</span></div><div class=\"line\">swapon /dev/hda2 /dev/hdb3 <span class=\"comment\">#启用两个swap分区</span></div></pre></td></tr></table></figure>\n<h2 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">dump -0aj <span class=\"_\">-f</span> /tmp/home0.bak /home <span class=\"comment\">#制作一个 '/home' 目录的完整备份</span></div><div class=\"line\">dump -1aj <span class=\"_\">-f</span> /tmp/home0.bak /home <span class=\"comment\">#制作一个 '/home' 目录的交互式备份</span></div><div class=\"line\">restore -if /tmp/home0.bak <span class=\"comment\">#还原一个交互式备份</span></div></pre></td></tr></table></figure>\n<h1 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifconfig <span class=\"comment\">#显示网络信息，相当于windows的ipconfig</span></div><div class=\"line\">ifconfig eth0 <span class=\"comment\">#显示指定以太网卡的配置</span></div><div class=\"line\">ifup eth0 <span class=\"comment\">#启用一个 'eth0' 网络设备</span></div><div class=\"line\">ifdown eth0 <span class=\"comment\">#禁用一个 'eth0' 网络设备</span></div><div class=\"line\">ifconfig eth0 192.168.1.1 netmask 255.255.255.0 <span class=\"comment\">#设置网卡信息</span></div><div class=\"line\">ifconfig eth0 promisc 设置 <span class=\"string\">'eth0'</span> <span class=\"comment\">#成混杂模式以嗅探数据包 (sniffing)</span></div><div class=\"line\">dhclient eth0 <span class=\"comment\">#以dhcp模式启用 'eth0'</span></div></pre></td></tr></table></figure>\n<h1 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h1><h2 id=\"软件查询\"><a href=\"#软件查询\" class=\"headerlink\" title=\"软件查询\"></a>软件查询</h2><h3 id=\"查询版本\"><a href=\"#查询版本\" class=\"headerlink\" title=\"查询版本\"></a>查询版本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">aptitude show python <span class=\"comment\">#查询python版本，需要先install  aptitude</span></div></pre></td></tr></table></figure>\n<p>或者<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dpkg <span class=\"_\">-l</span> python <span class=\"comment\">#查询python版本</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"查询路径\"><a href=\"#查询路径\" class=\"headerlink\" title=\"查询路径\"></a>查询路径</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dpkg -L python <span class=\"comment\">#查询python安装路径</span></div></pre></td></tr></table></figure>\n<p>或<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">whereis python <span class=\"comment\">#查询python安装路径</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"内核版本查询\"><a href=\"#内核版本查询\" class=\"headerlink\" title=\"内核版本查询\"></a>内核版本查询</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">uname -r</div><div class=\"line\">或</div><div class=\"line\">uname -a</div></pre></td></tr></table></figure>\n<h2 id=\"查询发行版本\"><a href=\"#查询发行版本\" class=\"headerlink\" title=\"查询发行版本\"></a>查询发行版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ubuntu</div><div class=\"line\">cat /etc/issue</div><div class=\"line\"># redhat </div><div class=\"line\">cat /etc/redhat-release</div></pre></td></tr></table></figure>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">fdisk <span class=\"_\">-l</span> <span class=\"comment\">#查看硬盘分区</span></div><div class=\"line\">ps aux <span class=\"comment\">#列出所有进程</span></div><div class=\"line\">ps aux | grep  agent <span class=\"comment\">#列出名字中带有”agent“的进程</span></div><div class=\"line\"><span class=\"built_in\">kill</span> pid <span class=\"comment\">#结束id为pid的进程</span></div><div class=\"line\"><span class=\"built_in\">kill</span> -9 pid <span class=\"comment\">#强制结束id为pid的进程</span></div><div class=\"line\">reboot <span class=\"comment\">#重启系统</span></div><div class=\"line\">poweroff <span class=\"comment\">#关机</span></div><div class=\"line\">init 0 <span class=\"comment\">#关机</span></div><div class=\"line\">halt <span class=\"comment\">#关机，但是需要手动切断电源，不推荐使用</span></div><div class=\"line\">shutdown -h now <span class=\"comment\">#立即关机，后面的now可以替换成时间</span></div><div class=\"line\">shutdown -r now <span class=\"comment\">#重启系统</span></div><div class=\"line\"></div><div class=\"line\">whereis cmd <span class=\"comment\">#例如 whereis ls，查看ls命令所在位置</span></div><div class=\"line\"></div><div class=\"line\">find / -name * <span class=\"comment\">#查询/下所有文件，同 ls /</span></div><div class=\"line\"></div><div class=\"line\">useradd user1 <span class=\"comment\">#添加用户user1</span></div><div class=\"line\">userdel user1 <span class=\"comment\">#删除用户user1</span></div><div class=\"line\">passwd user1 <span class=\"comment\">#给user1设置密码</span></div><div class=\"line\"></div><div class=\"line\">su - <span class=\"comment\">#切换root</span></div><div class=\"line\">su -  user1 <span class=\"comment\">#从root切换成user1</span></div><div class=\"line\"></div><div class=\"line\">who <span class=\"comment\">#查看登录情况</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"comment\">#显示环境变量信息，如 echo JAVA_HOME</span></div><div class=\"line\"></div><div class=\"line\">grep -ri <span class=\"string\">\"some\"</span> <span class=\"comment\">#在当前目录下查看带有”some”的文件内容，包括目录和文件按名，文本文件内容</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"文件和目录\"><a href=\"#文件和目录\" class=\"headerlink\" title=\"文件和目录\"></a>文件和目录</h1><h2 id=\"进入目录\"><a href=\"#进入目录\" class=\"headerlink\" title=\"进入目录\"></a>进入目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /home    <span class=\"comment\">#进入/home目录</span></div><div class=\"line\"><span class=\"built_in\">cd</span> ..   <span class=\"comment\">#返回上一级目录</span></div><div class=\"line\"><span class=\"built_in\">cd</span> ../    <span class=\"comment\">#返回上一级</span></div><div class=\"line\"><span class=\"built_in\">cd</span> ../..    <span class=\"comment\">#返回上两级目录</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">cd</span>    <span class=\"comment\">#进入用户主目录</span></div><div class=\"line\"><span class=\"built_in\">cd</span>  ~   <span class=\"comment\">#进入用户主目录</span></div><div class=\"line\"><span class=\"built_in\">cd</span>  ~username   <span class=\"comment\">#进入用户主目录,username为用户名</span></div></pre></td></tr></table></figure>\n<h2 id=\"查看路径\"><a href=\"#查看路径\" class=\"headerlink\" title=\"查看路径\"></a>查看路径</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">pwd</span>   <span class=\"comment\">#查看当前路径</span></div></pre></td></tr></table></figure>\n<h2 id=\"查看文件信息\"><a href=\"#查看文件信息\" class=\"headerlink\" title=\"查看文件信息\"></a>查看文件信息</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">ls    <span class=\"comment\">#查看目录中的文件,不显示隐藏文件</span></div><div class=\"line\">ls <span class=\"_\">-a</span>   <span class=\"comment\">#查看当前目录的所有文件，包括隐藏文件</span></div><div class=\"line\">ls <span class=\"_\">-l</span>   <span class=\"comment\">#查看当前目录文件的详细信息,隐藏文件不显示，可以使用 ll 代替</span></div><div class=\"line\">ls -al  <span class=\"comment\">#查看当前目录所有文件的详细信息，包括隐藏文件</span></div><div class=\"line\">ls *(0-9)*    <span class=\"comment\">#显示名包含数字的文件或目录</span></div><div class=\"line\"></div><div class=\"line\">tree    <span class=\"comment\">#查看当前目录的树形结构(需安装)</span></div></pre></td></tr></table></figure>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir dir1    <span class=\"comment\">#创建文件夹 dir1</span></div><div class=\"line\">mkdir -p dir1/dir2/dir3   <span class=\"comment\">#递归创建目录 dir1/dir2/dir3,不存在的目录会创建，已创建的忽略</span></div><div class=\"line\">mkdir dir1 dir2   <span class=\"comment\">#同时创建多个目录</span></div><div class=\"line\"></div><div class=\"line\">rmdir dir1  <span class=\"comment\">#删除空目录 dir1</span></div><div class=\"line\">rmdir dir1 dir2   <span class=\"comment\">#删除多个空目录</span></div><div class=\"line\"></div><div class=\"line\">rm -rf  dir1  <span class=\"comment\">#删除目录dir1和里面的所有内容</span></div></pre></td></tr></table></figure>\n<h2 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">touch file1   <span class=\"comment\">##创建空文件 file1</span></div><div class=\"line\"><span class=\"built_in\">echo</span> “some content”&gt;&gt; file1  <span class=\"comment\"># 向file1追加内容，file1必须是文本文件</span></div><div class=\"line\">rm file1    <span class=\"comment\">#删除文件file1</span></div><div class=\"line\">rm -rf file1 <span class=\"comment\">#删除文件file1,file1可以是目录</span></div><div class=\"line\"></div><div class=\"line\">cat file1 <span class=\"comment\">#从第一个字节开始正向查看文件的内容</span></div><div class=\"line\">tac file1 <span class=\"comment\">#从最后一行开始反向查看一个文件的内容</span></div><div class=\"line\">more file1 <span class=\"comment\">#查看一个长文件的内容</span></div><div class=\"line\">less file1 <span class=\"comment\">#类似于 'more' 命令，但是它允许在文件中和正向操作一样的反向操作</span></div><div class=\"line\">head -n file1 <span class=\"comment\">#查看一个文件的前n行</span></div><div class=\"line\">tail -n file1 <span class=\"comment\">#查看一个文件的最后n行</span></div><div class=\"line\">tail <span class=\"_\">-f</span> /var/<span class=\"built_in\">log</span>/messages <span class=\"comment\">#实时查看被添加到一个文件中的内容</span></div></pre></td></tr></table></figure>\n<h2 id=\"复制\"><a href=\"#复制\" class=\"headerlink\" title=\"复制\"></a>复制</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp fileName1 fileName2    <span class=\"comment\">#在当前目录复制fileName1,并命名为fileName2</span></div><div class=\"line\">cp fileName1 dir1   <span class=\"comment\">#复制当期目录的文件file1Name1到dir1目录，如果dir1不是目录，则意义同上</span></div><div class=\"line\">cp fileName1 dir1/fileName2   <span class=\"comment\">#复制当期目录的文件file1Name1到dir1目录,并将文件名字改成fileName2,如果dir1下存在同名文件，将被覆盖</span></div><div class=\"line\">cp -r dir1  dir2    <span class=\"comment\">#将dir1目录下的所有文件复制到dir2目录下</span></div><div class=\"line\">cp dir1/* dir2    <span class=\"comment\">#将dir1目录下的所有文件复制到dir2目录下</span></div><div class=\"line\">cp dir1/* .   <span class=\"comment\">#复制dir1目录下的所有文件到当前工作目录，注意符号\".\"</span></div><div class=\"line\">cp <span class=\"_\">-a</span> dir1/ .   <span class=\"comment\">#复制dir1目录下的所有文件到当前工作目录，注意符号\".\"</span></div></pre></td></tr></table></figure>\n<h2 id=\"移动\"><a href=\"#移动\" class=\"headerlink\" title=\"移动\"></a>移动</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mv fileName1 fileName2    <span class=\"comment\">#移动fileName1到fileName2,就是重命名文件</span></div><div class=\"line\">mv dir1 dir2 <span class=\"comment\">#移动dir1到dir2,就是重命名文件夹</span></div></pre></td></tr></table></figure>\n<h2 id=\"权限\"><a href=\"#权限\" class=\"headerlink\" title=\"权限\"></a>权限</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod ugo+rwx dir1  <span class=\"comment\">#设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限</span></div><div class=\"line\">chmod go-rwx dir1   <span class=\"comment\">#删除群组(g)与其他人(o)对目录的读写执行权限</span></div><div class=\"line\">chown user1 file1   <span class=\"comment\">#改变一个文件的所有人属性</span></div><div class=\"line\">chown -R user1 dir1  <span class=\"comment\">#改变一个目录的所有人属性并同时改变改目录下所有文件的属性</span></div></pre></td></tr></table></figure>\n<h3 id=\"r-w-x权限的定义\"><a href=\"#r-w-x权限的定义\" class=\"headerlink\" title=\"r,w,x权限的定义:\"></a>r,w,x权限的定义:</h3><h4 id=\"文件-1\"><a href=\"#文件-1\" class=\"headerlink\" title=\"文件\"></a>文件</h4><p>r:读取文件的内容<br>w:编辑,新增,修改文件的内容(但不含删除该文件的权限)<br>x:可执行</p>\n<h4 id=\"目录-1\"><a href=\"#目录-1\" class=\"headerlink\" title=\"目录\"></a>目录</h4><p>r:读取目录结构(查询目录下的文件名)<br>w:更改目录结构(创建文件或目录,删除文件或子目录,重命名文件或子目录,移动文件或目录)<br>x:能否进入目录将目录变成工作目录,只有w权限没有x权限,是不能进入目录的,也就无从谈起对目录进行写操作了,<br>  一般要给开放目录给任何人浏览时,至少给r-x权限</p>\n<h2 id=\"打包压缩\"><a href=\"#打包压缩\" class=\"headerlink\" title=\"打包压缩\"></a>打包压缩</h2><h3 id=\"zip\"><a href=\"#zip\" class=\"headerlink\" title=\"zip\"></a>zip</h3><p>常见参数：<br>-m     将文件压缩之后，删除源文件<br>-o     将压缩文件内的所有文件的最新变动时间设为压缩时候的时间<br>-q     安静模式，在压缩的时候不显示指令的执行过程<br>-r     将指定的目录下的所有子目录以及文件一起处理<br>-t 日期     把压缩文件的最后修改日期设为指定的日期，日期格式为mmddyyyy<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">zip -r java.zip /home/dev/Codes/java  <span class=\"comment\">#将/home/dev/Codes/java下的所有内容压缩成当前目录下的java.zip,会显示文件添加过程</span></div><div class=\"line\">zip -rq java.zip /home/dev/Codes/java   <span class=\"comment\">#将/home/dev/Codes/java下的所有内容压缩成当前目录下的java.zip,不显示文件添加过程</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"unzip\"><a href=\"#unzip\" class=\"headerlink\" title=\"unzip\"></a>unzip</h3><p>可以用来解压 .jar文件<br>常见参数：<br>-c 将解压缩的结果显示到屏幕上，并对字符做适当的转换。<br>-f 更新现有的文件。<br>-l 显示压缩文件内所包含的文件。<br>-p 与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换。<br>-t 检查压缩文件是否正确。<br>-u 与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中。<br>-v 执行是时显示详细的信息。<br>-z 仅显示压缩文件的备注文字。<br>-a 对文本文件进行必要的字符转换。<br>-b 不要对文本文件进行字符转换。<br>-C 压缩文件中的文件名称区分大小写。<br>-j 不处理压缩文件中原有的目录路径。<br>-L 将压缩文件中的全部文件名改为小写。<br>-M 将输出结果送到more程序处理。<br>-n 解压缩时不要覆盖原有的文件。<br>-o 不必先询问用户，unzip执行后覆盖原有文件。<br>-P&lt;密码&gt; 使用zip的密码选项。<br>-q 执行时不显示任何信息。<br>-s 将文件名中的空白字符转换为底线字符。<br>-V 保留VMS的文件版本信息。<br>-X 解压缩时同时回存文件原来的UID/GID。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">unzip java.zip  <span class=\"comment\">#解压java.zip到当前目录</span></div><div class=\"line\">unzip java.zip dir1 <span class=\"comment\">#解压java.zip到dir1</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"tar\"><a href=\"#tar\" class=\"headerlink\" title=\"tar\"></a>tar</h3><p>常见参数：<br>-c 产生新的包或称建立压缩档案<br>-f 指定包含的文件<br>-r 增加文件<br>-u 更新文件<br>-t 列出文件<br>-x 解压缩<br>-z 调用gzip压缩<br>-j 调用bzip2压缩<br>-Z 调用compress压缩</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar -cvf /tmp/etc.tar /etc <span class=\"comment\">#将/etc目录下的所有文件打包到/tmp/etc.tar,不压缩</span></div><div class=\"line\">tar -zcvf /tmp/etc.tar.gz /etc <span class=\"comment\">#将/etc目录下的所有文件打包到/tmp/etc.tar,以gzip压缩</span></div><div class=\"line\">tar -jcvf /tmp/etc.tar.bz2 /etc <span class=\"comment\">#将/etc目录下的所有文件打包到/tmp/etc.tar,以 bzip2 压缩</span></div><div class=\"line\">tar -cf all.tar *.jpg   <span class=\"comment\">#将当前目录所有.jpg的文件打成一个名为all.tar的包</span></div><div class=\"line\">tar -rf all.tar *.gif   <span class=\"comment\">#将所有.gif的文件增加到all.tar的包里面</span></div><div class=\"line\">tar -uf all.tar logo.gif  <span class=\"comment\">#更新原来tar包all.tar中logo.gif文件</span></div><div class=\"line\">tar -zxvf /tmp/etc.tar.gz etc/passwd <span class=\"comment\">#至解压/tmp/etc.tar.gz 内的 etc/passwd</span></div><div class=\"line\">tar -xf all.tar  <span class=\"comment\">#解出all.tar包中所有文件</span></div><div class=\"line\"></div><div class=\"line\">tar -czf all.tar.gz *.jpg   <span class=\"comment\">#将所有.jpg的文件打成一个tar包，并且将其用gzip压缩，生成一个gzip压缩过的包</span></div><div class=\"line\">tar -xzf all.tar.gz  <span class=\"comment\">#将上面产生的包解开</span></div><div class=\"line\"></div><div class=\"line\">tar -cjf all.tar.bz2 *.jpg   <span class=\"comment\">#将所有.jpg的文件打成一个tar包，并且将其用bzip2压缩，生成一个bzip2压缩过的包</span></div><div class=\"line\">tar -xjf all.tar.bz2  <span class=\"comment\">#将上面产生的包解开</span></div><div class=\"line\"></div><div class=\"line\">tar -cZf all.tar.Z *.jpg   <span class=\"comment\">#将所有.jpg的文件打成一个tar包，并且将其用compress压缩，生成一个uncompress压缩过的包</span></div><div class=\"line\">tar -xZf all.tar.Z <span class=\"comment\">#将上面产生的包解开</span></div></pre></td></tr></table></figure>\n<h3 id=\"rar\"><a href=\"#rar\" class=\"headerlink\" title=\"rar\"></a>rar</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">rar a all *.jpg 　<span class=\"comment\">#这条命令是将所有.jpg的文件压缩成一个rar包，名为all.rar，该程序会将.rar扩展名将自动附加到包名后。</span></div><div class=\"line\">unrar e all.rar   <span class=\"comment\">#将all.rar中的所有文件解压</span></div></pre></td></tr></table></figure>\n<h3 id=\"文本处理\"><a href=\"#文本处理\" class=\"headerlink\" title=\"文本处理\"></a>文本处理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">grep Aug /var/<span class=\"built_in\">log</span>/messages <span class=\"comment\">#在文件 '/var/log/messages'中查找关键词\"Aug\"</span></div><div class=\"line\">grep ^Aug /var/<span class=\"built_in\">log</span>/messages <span class=\"comment\">#在文件 '/var/log/messages'中查找以\"Aug\"开始的词汇</span></div><div class=\"line\">grep [0-9] /var/<span class=\"built_in\">log</span>/messages <span class=\"comment\">#选择 '/var/log/messages' 文件中所有包含数字的行</span></div><div class=\"line\">grep Aug -R /var/<span class=\"built_in\">log</span>/* <span class=\"comment\">#在目录 '/var/log' 及随后的目录中搜索字符串\"Aug\"</span></div><div class=\"line\">sed <span class=\"string\">'s/stringa1/stringa2/g'</span> <span class=\"comment\">#example.txt 将example.txt文件中的 \"string1\" 替换成 \"string2\"</span></div><div class=\"line\">sed <span class=\"string\">'/^$/d'</span> example.txt <span class=\"comment\">#从example.txt文件中删除所有空白行</span></div><div class=\"line\">sed <span class=\"string\">'/ *#/d; /^$/d'</span> example.txt <span class=\"comment\">#从example.txt文件中删除所有注释和空白行</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'esempio'</span> | tr <span class=\"string\">'[:lower:]'</span> <span class=\"string\">'[:upper:]'</span> <span class=\"comment\">#合并上下单元格内容</span></div><div class=\"line\">sed <span class=\"_\">-e</span> <span class=\"string\">'1d'</span> result.txt <span class=\"comment\">#从文件example.txt 中排除第一行</span></div><div class=\"line\">sed -n <span class=\"string\">'/stringa1/p'</span> <span class=\"comment\">#查看只包含词汇 \"string1\"的行</span></div><div class=\"line\">sed <span class=\"_\">-e</span> <span class=\"string\">'s/ *$//'</span> example.txt <span class=\"comment\">#删除每一行最后的空白字符</span></div><div class=\"line\">sed <span class=\"_\">-e</span> <span class=\"string\">'s/stringa1//g'</span> example.txt <span class=\"comment\">#从文档中只删除词汇 \"string1\" 并保留剩余全部</span></div><div class=\"line\">sed -n <span class=\"string\">'1,5p;5q'</span> example.txt <span class=\"comment\">#查看从第一行到第5行内容</span></div><div class=\"line\">sed -n <span class=\"string\">'5p;5q'</span> example.txt<span class=\"comment\"># 查看第5行</span></div><div class=\"line\">sed <span class=\"_\">-e</span> <span class=\"string\">'s/00*/0/g'</span> example.txt <span class=\"comment\">#用单个零替换多个零</span></div><div class=\"line\">cat -n file1 <span class=\"comment\">#标示文件的行数</span></div><div class=\"line\">cat example.txt | awk <span class=\"string\">'NR%2==1'</span> <span class=\"comment\">#删除example.txt文件中的所有偶数行</span></div><div class=\"line\"><span class=\"built_in\">echo</span> a b c | awk <span class=\"string\">'&#123;print $1&#125;'</span> <span class=\"comment\">#查看一行第一栏</span></div><div class=\"line\"><span class=\"built_in\">echo</span> a b c | awk <span class=\"string\">'&#123;print $1,$3&#125;'</span> <span class=\"comment\">#查看一行的第一和第三栏</span></div><div class=\"line\">paste file1 file2 <span class=\"comment\">#合并两个文件或两栏的内容</span></div><div class=\"line\">paste <span class=\"_\">-d</span> <span class=\"string\">'+'</span> file1 file2 <span class=\"comment\">#合并两个文件或两栏的内容，中间用\"+\"区分</span></div><div class=\"line\">sort file1 file2 <span class=\"comment\">#排序两个文件的内容</span></div><div class=\"line\">sort file1 file2 | uniq <span class=\"comment\">#取出两个文件的并集(重复的行只保留一份)</span></div><div class=\"line\">sort file1 file2 | uniq -u <span class=\"comment\">#删除交集，留下其他的行</span></div><div class=\"line\">sort file1 file2 | uniq <span class=\"_\">-d</span> <span class=\"comment\">#取出两个文件的交集(只留下同时存在于两个文件中的文件)</span></div><div class=\"line\">comm -1 file1 file2 <span class=\"comment\">#比较两个文件的内容只删除 'file1' 所包含的内容</span></div><div class=\"line\">comm -2 file1 file2 <span class=\"comment\">#比较两个文件的内容只删除 'file2' 所包含的内容</span></div><div class=\"line\">comm -3 file1 file2 <span class=\"comment\">#比较两个文件的内容只删除两个文件共有的部分</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装包\"><a href=\"#安装包\" class=\"headerlink\" title=\"安装包\"></a>安装包</h2><h3 id=\"rpm安装\"><a href=\"#rpm安装\" class=\"headerlink\" title=\"rpm安装\"></a>rpm安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">rpm -ivh package.rpm <span class=\"comment\">#安装一个rpm包</span></div><div class=\"line\">rpm -ivh --nodeeps package.rpm <span class=\"comment\">#安装一个rpm包而忽略依赖关系警告</span></div><div class=\"line\">rpm -U package.rpm <span class=\"comment\">#更新一个rpm包但不改变其配置文件</span></div><div class=\"line\">rpm -F package.rpm <span class=\"comment\">#更新一个确定已经安装的rpm包</span></div><div class=\"line\">rpm <span class=\"_\">-e</span> package_name.rpm <span class=\"comment\">#删除一个rpm包</span></div><div class=\"line\">rpm -qa <span class=\"comment\">#显示系统中所有已经安装的rpm包</span></div><div class=\"line\">rpm -qa | grep httpd <span class=\"comment\">#显示所有名称中包含 \"httpd\" 字样的rpm包</span></div><div class=\"line\">rpm -qi package_name <span class=\"comment\">#获取一个已安装包的特殊信息</span></div><div class=\"line\">rpm -ql package_name <span class=\"comment\">#显示一个已经安装的rpm包提供的文件列表</span></div><div class=\"line\">rpm -qc package_name <span class=\"comment\">#显示一个已经安装的rpm包提供的配置文件列表</span></div><div class=\"line\">rpm -q package_name --whatrequires <span class=\"comment\">#显示与一个rpm包存在依赖关系的列表</span></div><div class=\"line\">rpm -q package_name --whatprovides <span class=\"comment\">#显示一个rpm包所占的体积</span></div><div class=\"line\">rpm -q package_name --scripts <span class=\"comment\">#显示在安装/删除期间所执行的脚本l</span></div><div class=\"line\">rpm -q package_name --changelog <span class=\"comment\">#显示一个rpm包的修改历史</span></div><div class=\"line\">rpm -qf /etc/httpd/conf/httpd.conf <span class=\"comment\">#确认所给的文件由哪个rpm包所提供</span></div><div class=\"line\">rpm -qp package.rpm <span class=\"_\">-l</span> <span class=\"comment\">#显示由一个尚未安装的rpm包提供的文件列表</span></div><div class=\"line\">rpm --import /media/cdrom/RPM-GPG-KEY <span class=\"comment\">#导入公钥数字证书</span></div><div class=\"line\">rpm --checksig package.rpm <span class=\"comment\">#确认一个rpm包的完整性</span></div><div class=\"line\">rpm -qa gpg-pubkey <span class=\"comment\">#确认已安装的所有rpm包的完整性</span></div><div class=\"line\">rpm -V package_name <span class=\"comment\">#检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间</span></div><div class=\"line\">rpm -Va <span class=\"comment\">#检查系统中所有已安装的rpm包- 小心使用</span></div><div class=\"line\">rpm -Vp package.rpm <span class=\"comment\">#确认一个rpm包还未安装</span></div><div class=\"line\">rpm2cpio package.rpm | cpio --extract --make-directories *bin* <span class=\"comment\">#从一个rpm包运行可执行文件</span></div><div class=\"line\">rpm -ivh /usr/src/redhat/RPMS/`arch`/package.rpm <span class=\"comment\">#从一个rpm源码安装一个构建好的包</span></div><div class=\"line\">rpmbuild --rebuild package_name.src.rpm <span class=\"comment\">#从一个rpm源码构建一个 rpm 包</span></div></pre></td></tr></table></figure>\n<h3 id=\"yum安装\"><a href=\"#yum安装\" class=\"headerlink\" title=\"yum安装\"></a>yum安装</h3><p>Fedora, RedHat及类似系统<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">yum install package_name <span class=\"comment\">#下载并安装一个rpm包</span></div><div class=\"line\">yum localinstall package_name.rpm <span class=\"comment\">#将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系</span></div><div class=\"line\">yum update package_name.rpm <span class=\"comment\">#更新当前系统中所有安装的rpm包</span></div><div class=\"line\">yum update package_name <span class=\"comment\">#更新一个rpm包</span></div><div class=\"line\">yum remove package_name <span class=\"comment\">#删除一个rpm包</span></div><div class=\"line\">yum list <span class=\"comment\">#列出当前系统中安装的所有包</span></div><div class=\"line\">yum search package_name <span class=\"comment\">#在rpm仓库中搜寻软件包</span></div><div class=\"line\">yum clean packages <span class=\"comment\">#清理rpm缓存删除下载的包</span></div><div class=\"line\">yum clean headers <span class=\"comment\">#删除所有头文件</span></div><div class=\"line\">yum clean all <span class=\"comment\">#删除所有缓存的包和头文件</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"deb\"><a href=\"#deb\" class=\"headerlink\" title=\"deb\"></a>deb</h3><p>Debian, Ubuntu 以及类似系统<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">dpkg -i package.deb <span class=\"comment\">#安装/更新一个 deb 包</span></div><div class=\"line\">dpkg -r package_name <span class=\"comment\">#从系统删除一个 deb 包</span></div><div class=\"line\">dpkg <span class=\"_\">-l</span> <span class=\"comment\">#显示系统中所有已经安装的 deb 包</span></div><div class=\"line\">dpkg <span class=\"_\">-l</span> | grep httpd <span class=\"comment\">#显示所有名称中包含 \"httpd\" 字样的deb包</span></div><div class=\"line\">dpkg <span class=\"_\">-s</span> package_name <span class=\"comment\">#获得已经安装在系统中一个特殊包的信息</span></div><div class=\"line\">dpkg -L package_name <span class=\"comment\">#显示系统中已经安装的一个deb包所提供的文件列表</span></div><div class=\"line\">dpkg --contents package.deb <span class=\"comment\">#显示尚未安装的一个包所提供的文件列表</span></div><div class=\"line\">dpkg -S /bin/ping <span class=\"comment\">#确认所给的文件由哪个deb包提供</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"apt\"><a href=\"#apt\" class=\"headerlink\" title=\"apt\"></a>apt</h3><p>Debian, Ubuntu 以及类似系统，ubuntu16.04开始已经将apt-get替换成apt。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install package_name <span class=\"comment\">#安装/更新一个 deb 包</span></div><div class=\"line\">apt-cdrom install package_name <span class=\"comment\">#从光盘安装/更新一个 deb 包</span></div><div class=\"line\">apt-get update <span class=\"comment\">#升级列表中的软件包</span></div><div class=\"line\">apt-get upgrade <span class=\"comment\">#升级所有已安装的软件</span></div><div class=\"line\">apt-get remove package_name <span class=\"comment\">#从系统删除一个deb包</span></div><div class=\"line\">apt-get check <span class=\"comment\">#确认依赖的软件仓库正确</span></div><div class=\"line\">apt-get clean <span class=\"comment\">#从下载的软件包中清理缓存</span></div><div class=\"line\">apt-cache search searched-package <span class=\"comment\">#返回包含所要搜索字符串的软件包名称</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"文件系统\"><a href=\"#文件系统\" class=\"headerlink\" title=\"文件系统\"></a>文件系统</h1><h2 id=\"初始化一个文件系统\"><a href=\"#初始化一个文件系统\" class=\"headerlink\" title=\"初始化一个文件系统\"></a>初始化一个文件系统</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkfs /dev/hda1 <span class=\"comment\">#在hda1分区创建一个文件系统</span></div><div class=\"line\">mke2fs /dev/hda1 <span class=\"comment\">#在hda1分区创建一个linux ext2的文件系统</span></div><div class=\"line\">mke2fs -j /dev/hda1 <span class=\"comment\">#在hda1分区创建一个linux ext3(日志型)的文件系统</span></div><div class=\"line\">mkfs -t vfat 32 -F /dev/hda1 <span class=\"comment\">#创建一个 FAT32 文件系统</span></div><div class=\"line\">fdformat -n /dev/fd0 <span class=\"comment\">#格式化一个软盘</span></div><div class=\"line\">mkswap /dev/hda3 <span class=\"comment\">#创建一个swap文件系统</span></div></pre></td></tr></table></figure>\n<h2 id=\"SWAP文件系统\"><a href=\"#SWAP文件系统\" class=\"headerlink\" title=\"SWAP文件系统\"></a>SWAP文件系统</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkswap /dev/hda3 <span class=\"comment\">#创建一个swap文件系统</span></div><div class=\"line\">swapon /dev/hda3 <span class=\"comment\">#启用一个新的swap文件系统</span></div><div class=\"line\">swapon /dev/hda2 /dev/hdb3 <span class=\"comment\">#启用两个swap分区</span></div></pre></td></tr></table></figure>\n<h2 id=\"备份\"><a href=\"#备份\" class=\"headerlink\" title=\"备份\"></a>备份</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">dump -0aj <span class=\"_\">-f</span> /tmp/home0.bak /home <span class=\"comment\">#制作一个 '/home' 目录的完整备份</span></div><div class=\"line\">dump -1aj <span class=\"_\">-f</span> /tmp/home0.bak /home <span class=\"comment\">#制作一个 '/home' 目录的交互式备份</span></div><div class=\"line\">restore -if /tmp/home0.bak <span class=\"comment\">#还原一个交互式备份</span></div></pre></td></tr></table></figure>\n<h1 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">ifconfig <span class=\"comment\">#显示网络信息，相当于windows的ipconfig</span></div><div class=\"line\">ifconfig eth0 <span class=\"comment\">#显示指定以太网卡的配置</span></div><div class=\"line\">ifup eth0 <span class=\"comment\">#启用一个 'eth0' 网络设备</span></div><div class=\"line\">ifdown eth0 <span class=\"comment\">#禁用一个 'eth0' 网络设备</span></div><div class=\"line\">ifconfig eth0 192.168.1.1 netmask 255.255.255.0 <span class=\"comment\">#设置网卡信息</span></div><div class=\"line\">ifconfig eth0 promisc 设置 <span class=\"string\">'eth0'</span> <span class=\"comment\">#成混杂模式以嗅探数据包 (sniffing)</span></div><div class=\"line\">dhclient eth0 <span class=\"comment\">#以dhcp模式启用 'eth0'</span></div></pre></td></tr></table></figure>\n<h1 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h1><h2 id=\"软件查询\"><a href=\"#软件查询\" class=\"headerlink\" title=\"软件查询\"></a>软件查询</h2><h3 id=\"查询版本\"><a href=\"#查询版本\" class=\"headerlink\" title=\"查询版本\"></a>查询版本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">aptitude show python <span class=\"comment\">#查询python版本，需要先install  aptitude</span></div></pre></td></tr></table></figure>\n<p>或者<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dpkg <span class=\"_\">-l</span> python <span class=\"comment\">#查询python版本</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"查询路径\"><a href=\"#查询路径\" class=\"headerlink\" title=\"查询路径\"></a>查询路径</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dpkg -L python <span class=\"comment\">#查询python安装路径</span></div></pre></td></tr></table></figure>\n<p>或<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">whereis python <span class=\"comment\">#查询python安装路径</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"内核版本查询\"><a href=\"#内核版本查询\" class=\"headerlink\" title=\"内核版本查询\"></a>内核版本查询</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">uname -r</div><div class=\"line\">或</div><div class=\"line\">uname -a</div></pre></td></tr></table></figure>\n<h2 id=\"查询发行版本\"><a href=\"#查询发行版本\" class=\"headerlink\" title=\"查询发行版本\"></a>查询发行版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ubuntu</div><div class=\"line\">cat /etc/issue</div><div class=\"line\"># redhat </div><div class=\"line\">cat /etc/redhat-release</div></pre></td></tr></table></figure>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">fdisk <span class=\"_\">-l</span> <span class=\"comment\">#查看硬盘分区</span></div><div class=\"line\">ps aux <span class=\"comment\">#列出所有进程</span></div><div class=\"line\">ps aux | grep  agent <span class=\"comment\">#列出名字中带有”agent“的进程</span></div><div class=\"line\"><span class=\"built_in\">kill</span> pid <span class=\"comment\">#结束id为pid的进程</span></div><div class=\"line\"><span class=\"built_in\">kill</span> -9 pid <span class=\"comment\">#强制结束id为pid的进程</span></div><div class=\"line\">reboot <span class=\"comment\">#重启系统</span></div><div class=\"line\">poweroff <span class=\"comment\">#关机</span></div><div class=\"line\">init 0 <span class=\"comment\">#关机</span></div><div class=\"line\">halt <span class=\"comment\">#关机，但是需要手动切断电源，不推荐使用</span></div><div class=\"line\">shutdown -h now <span class=\"comment\">#立即关机，后面的now可以替换成时间</span></div><div class=\"line\">shutdown -r now <span class=\"comment\">#重启系统</span></div><div class=\"line\"></div><div class=\"line\">whereis cmd <span class=\"comment\">#例如 whereis ls，查看ls命令所在位置</span></div><div class=\"line\"></div><div class=\"line\">find / -name * <span class=\"comment\">#查询/下所有文件，同 ls /</span></div><div class=\"line\"></div><div class=\"line\">useradd user1 <span class=\"comment\">#添加用户user1</span></div><div class=\"line\">userdel user1 <span class=\"comment\">#删除用户user1</span></div><div class=\"line\">passwd user1 <span class=\"comment\">#给user1设置密码</span></div><div class=\"line\"></div><div class=\"line\">su - <span class=\"comment\">#切换root</span></div><div class=\"line\">su -  user1 <span class=\"comment\">#从root切换成user1</span></div><div class=\"line\"></div><div class=\"line\">who <span class=\"comment\">#查看登录情况</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"comment\">#显示环境变量信息，如 echo JAVA_HOME</span></div><div class=\"line\"></div><div class=\"line\">grep -ri <span class=\"string\">\"some\"</span> <span class=\"comment\">#在当前目录下查看带有”some”的文件内容，包括目录和文件按名，文本文件内容</span></div></pre></td></tr></table></figure>\n"},{"title":"ubuntu java 开发环境搭建","date":"2016-07-12T02:20:13.000Z","_content":"\n>ubuntu16.04 使用 apt 代替 apt-get\n\n\n# Git\n## 安装\n```bash\nsudo apt-get install git\n```\n## 生成key\n设置你的邮箱信息\n```bash\n$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n# Creates a new ssh key, using the provided email as a label\nGenerating public/private rsa key pair.\n```\n设置你的配置目录，默认为 ~/.ssh/\n```bash\n$ Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]\n```\n设置密码，默认为空，一直按回车即可\n```bash\n$ Enter passphrase (empty for no passphrase): [Type a passphrase]\n$ Enter same passphrase again: [Type passphrase again]\n```\n# ssh\n## 安装\n一般成功装了git之后，ssh也已经安装，如果没有安装，则需要手动安装\n```bash\nsudo apt-get install openssh-server\n```\n## 确认sshserver是否启动了\n```bash\nps -e | grep ssh\n```\n如果只有ssh-agent那ssh-server还没有启动，需要/etc/init.d/ssh start，如果看到sshd那说明ssh-server已经启动了\nssh-server配置文件位于/ etc/ssh/sshd_config，在这里可以定义SSH的服务端口，默认端口是22，你可以自己定义成其他端口号，如222。然后重启SSH服务：\n```bash\nsudo /etc/init.d/ssh resart\n```\n## 配置使登录时间更短\n```bash\nsudo vim /etc/ssh/sshd_config\n```\n找到 GSSAPI options 这一节，将下面两行注释掉：\n```bash\n#GSSAPIAuthentication yes\n#GSSAPIDelegateCredentials no\n```\n然后重新启动 ssh 服务即可：\n```bash\nsudo /etc/init.d/ssh resart\n```\n# maven\n## 下载\n[点此下载](http://maven.apache.org/download.cgi)\n## 配置\n在置文件中添加（形如）：\n```bash\nM2=\"/path/to/maven\"   \nPATH=\"$M2/bin/:....\"\n```\n使配置生效：\n```bash\nsource .zshrc #具体配置文件根据自己情况指定\n```\n# jdk\n## 下载\n[点此下载](http://www.oracle.com/technetwork/java/javase/downloads/index.html)\n## 配置\n解压后拷至某个目录后，在配置文件添加（形如）：\n```bash\nJAVA_HOME=\"/path/to/jdk\"\nPATH=\"$JAVA_HOME/bin:...\"\n```\n修改默认jdk\n```bash\nsudo update-alternatives --install /usr/bin/java java /path/to/jdk/bin/java 300\nsudo update-alternatives --install /usr/bin/javac javac /path/to/jdk/bin/javac 300\nsudo update-alternatives --config java\n```\n# eclipse\n## 下载\n[点此下载](http://www.eclipse.org/)\n","source":"_posts/ubuntu-java-开发环境搭建.md","raw":"---\ntitle: ubuntu java 开发环境搭建\ndate: 2016-07-12 10:20:13\ntags: [ubuntu,java,ssh,git]\n---\n\n>ubuntu16.04 使用 apt 代替 apt-get\n\n\n# Git\n## 安装\n```bash\nsudo apt-get install git\n```\n## 生成key\n设置你的邮箱信息\n```bash\n$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n# Creates a new ssh key, using the provided email as a label\nGenerating public/private rsa key pair.\n```\n设置你的配置目录，默认为 ~/.ssh/\n```bash\n$ Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]\n```\n设置密码，默认为空，一直按回车即可\n```bash\n$ Enter passphrase (empty for no passphrase): [Type a passphrase]\n$ Enter same passphrase again: [Type passphrase again]\n```\n# ssh\n## 安装\n一般成功装了git之后，ssh也已经安装，如果没有安装，则需要手动安装\n```bash\nsudo apt-get install openssh-server\n```\n## 确认sshserver是否启动了\n```bash\nps -e | grep ssh\n```\n如果只有ssh-agent那ssh-server还没有启动，需要/etc/init.d/ssh start，如果看到sshd那说明ssh-server已经启动了\nssh-server配置文件位于/ etc/ssh/sshd_config，在这里可以定义SSH的服务端口，默认端口是22，你可以自己定义成其他端口号，如222。然后重启SSH服务：\n```bash\nsudo /etc/init.d/ssh resart\n```\n## 配置使登录时间更短\n```bash\nsudo vim /etc/ssh/sshd_config\n```\n找到 GSSAPI options 这一节，将下面两行注释掉：\n```bash\n#GSSAPIAuthentication yes\n#GSSAPIDelegateCredentials no\n```\n然后重新启动 ssh 服务即可：\n```bash\nsudo /etc/init.d/ssh resart\n```\n# maven\n## 下载\n[点此下载](http://maven.apache.org/download.cgi)\n## 配置\n在置文件中添加（形如）：\n```bash\nM2=\"/path/to/maven\"   \nPATH=\"$M2/bin/:....\"\n```\n使配置生效：\n```bash\nsource .zshrc #具体配置文件根据自己情况指定\n```\n# jdk\n## 下载\n[点此下载](http://www.oracle.com/technetwork/java/javase/downloads/index.html)\n## 配置\n解压后拷至某个目录后，在配置文件添加（形如）：\n```bash\nJAVA_HOME=\"/path/to/jdk\"\nPATH=\"$JAVA_HOME/bin:...\"\n```\n修改默认jdk\n```bash\nsudo update-alternatives --install /usr/bin/java java /path/to/jdk/bin/java 300\nsudo update-alternatives --install /usr/bin/javac javac /path/to/jdk/bin/javac 300\nsudo update-alternatives --config java\n```\n# eclipse\n## 下载\n[点此下载](http://www.eclipse.org/)\n","slug":"ubuntu-java-开发环境搭建","published":1,"updated":"2017-08-18T13:17:27.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw95000qjeh8sdbilytr","content":"<blockquote>\n<p>ubuntu16.04 使用 apt 代替 apt-get</p>\n</blockquote>\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install git</div></pre></td></tr></table></figure>\n<h2 id=\"生成key\"><a href=\"#生成key\" class=\"headerlink\" title=\"生成key\"></a>生成key</h2><p>设置你的邮箱信息<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh-keygen -t rsa -b 4096 -C <span class=\"string\">\"your_email@example.com\"</span></div><div class=\"line\"><span class=\"comment\"># Creates a new ssh key, using the provided email as a label</span></div><div class=\"line\">Generating public/private rsa key pair.</div></pre></td></tr></table></figure></p>\n<p>设置你的配置目录，默认为 ~/.ssh/<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ Enter a file <span class=\"keyword\">in</span> <span class=\"built_in\">which</span> to save the key (/Users/you/.ssh/id_rsa): [Press enter]</div></pre></td></tr></table></figure></p>\n<p>设置密码，默认为空，一直按回车即可<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ Enter passphrase (empty <span class=\"keyword\">for</span> no passphrase): [Type a passphrase]</div><div class=\"line\">$ Enter same passphrase again: [Type passphrase again]</div></pre></td></tr></table></figure></p>\n<h1 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h1><h2 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>一般成功装了git之后，ssh也已经安装，如果没有安装，则需要手动安装<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install openssh-server</div></pre></td></tr></table></figure></p>\n<h2 id=\"确认sshserver是否启动了\"><a href=\"#确认sshserver是否启动了\" class=\"headerlink\" title=\"确认sshserver是否启动了\"></a>确认sshserver是否启动了</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps <span class=\"_\">-e</span> | grep ssh</div></pre></td></tr></table></figure>\n<p>如果只有ssh-agent那ssh-server还没有启动，需要/etc/init.d/ssh start，如果看到sshd那说明ssh-server已经启动了<br>ssh-server配置文件位于/ etc/ssh/sshd_config，在这里可以定义SSH的服务端口，默认端口是22，你可以自己定义成其他端口号，如222。然后重启SSH服务：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /etc/init.d/ssh resart</div></pre></td></tr></table></figure></p>\n<h2 id=\"配置使登录时间更短\"><a href=\"#配置使登录时间更短\" class=\"headerlink\" title=\"配置使登录时间更短\"></a>配置使登录时间更短</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo vim /etc/ssh/sshd_config</div></pre></td></tr></table></figure>\n<p>找到 GSSAPI options 这一节，将下面两行注释掉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#GSSAPIAuthentication yes</span></div><div class=\"line\"><span class=\"comment\">#GSSAPIDelegateCredentials no</span></div></pre></td></tr></table></figure></p>\n<p>然后重新启动 ssh 服务即可：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /etc/init.d/ssh resart</div></pre></td></tr></table></figure></p>\n<h1 id=\"maven\"><a href=\"#maven\" class=\"headerlink\" title=\"maven\"></a>maven</h1><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p><a href=\"http://maven.apache.org/download.cgi\" target=\"_blank\" rel=\"external\">点此下载</a></p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>在置文件中添加（形如）：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">M2=<span class=\"string\">\"/path/to/maven\"</span>   </div><div class=\"line\">PATH=<span class=\"string\">\"<span class=\"variable\">$M2</span>/bin/:....\"</span></div></pre></td></tr></table></figure></p>\n<p>使配置生效：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">source</span> .zshrc <span class=\"comment\">#具体配置文件根据自己情况指定</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"jdk\"><a href=\"#jdk\" class=\"headerlink\" title=\"jdk\"></a>jdk</h1><h2 id=\"下载-1\"><a href=\"#下载-1\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"external\">点此下载</a></p>\n<h2 id=\"配置-1\"><a href=\"#配置-1\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>解压后拷至某个目录后，在配置文件添加（形如）：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">JAVA_HOME=<span class=\"string\">\"/path/to/jdk\"</span></div><div class=\"line\">PATH=<span class=\"string\">\"<span class=\"variable\">$JAVA_HOME</span>/bin:...\"</span></div></pre></td></tr></table></figure></p>\n<p>修改默认jdk<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo update-alternatives --install /usr/bin/java java /path/to/jdk/bin/java 300</div><div class=\"line\">sudo update-alternatives --install /usr/bin/javac javac /path/to/jdk/bin/javac 300</div><div class=\"line\">sudo update-alternatives --config java</div></pre></td></tr></table></figure></p>\n<h1 id=\"eclipse\"><a href=\"#eclipse\" class=\"headerlink\" title=\"eclipse\"></a>eclipse</h1><h2 id=\"下载-2\"><a href=\"#下载-2\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p><a href=\"http://www.eclipse.org/\" target=\"_blank\" rel=\"external\">点此下载</a></p>\n","excerpt":"","more":"<blockquote>\n<p>ubuntu16.04 使用 apt 代替 apt-get</p>\n</blockquote>\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install git</div></pre></td></tr></table></figure>\n<h2 id=\"生成key\"><a href=\"#生成key\" class=\"headerlink\" title=\"生成key\"></a>生成key</h2><p>设置你的邮箱信息<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh-keygen -t rsa -b 4096 -C <span class=\"string\">\"your_email@example.com\"</span></div><div class=\"line\"><span class=\"comment\"># Creates a new ssh key, using the provided email as a label</span></div><div class=\"line\">Generating public/private rsa key pair.</div></pre></td></tr></table></figure></p>\n<p>设置你的配置目录，默认为 ~/.ssh/<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ Enter a file <span class=\"keyword\">in</span> <span class=\"built_in\">which</span> to save the key (/Users/you/.ssh/id_rsa): [Press enter]</div></pre></td></tr></table></figure></p>\n<p>设置密码，默认为空，一直按回车即可<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ Enter passphrase (empty <span class=\"keyword\">for</span> no passphrase): [Type a passphrase]</div><div class=\"line\">$ Enter same passphrase again: [Type passphrase again]</div></pre></td></tr></table></figure></p>\n<h1 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h1><h2 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>一般成功装了git之后，ssh也已经安装，如果没有安装，则需要手动安装<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install openssh-server</div></pre></td></tr></table></figure></p>\n<h2 id=\"确认sshserver是否启动了\"><a href=\"#确认sshserver是否启动了\" class=\"headerlink\" title=\"确认sshserver是否启动了\"></a>确认sshserver是否启动了</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps <span class=\"_\">-e</span> | grep ssh</div></pre></td></tr></table></figure>\n<p>如果只有ssh-agent那ssh-server还没有启动，需要/etc/init.d/ssh start，如果看到sshd那说明ssh-server已经启动了<br>ssh-server配置文件位于/ etc/ssh/sshd_config，在这里可以定义SSH的服务端口，默认端口是22，你可以自己定义成其他端口号，如222。然后重启SSH服务：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /etc/init.d/ssh resart</div></pre></td></tr></table></figure></p>\n<h2 id=\"配置使登录时间更短\"><a href=\"#配置使登录时间更短\" class=\"headerlink\" title=\"配置使登录时间更短\"></a>配置使登录时间更短</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo vim /etc/ssh/sshd_config</div></pre></td></tr></table></figure>\n<p>找到 GSSAPI options 这一节，将下面两行注释掉：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#GSSAPIAuthentication yes</span></div><div class=\"line\"><span class=\"comment\">#GSSAPIDelegateCredentials no</span></div></pre></td></tr></table></figure></p>\n<p>然后重新启动 ssh 服务即可：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /etc/init.d/ssh resart</div></pre></td></tr></table></figure></p>\n<h1 id=\"maven\"><a href=\"#maven\" class=\"headerlink\" title=\"maven\"></a>maven</h1><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p><a href=\"http://maven.apache.org/download.cgi\">点此下载</a></p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>在置文件中添加（形如）：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">M2=<span class=\"string\">\"/path/to/maven\"</span>   </div><div class=\"line\">PATH=<span class=\"string\">\"<span class=\"variable\">$M2</span>/bin/:....\"</span></div></pre></td></tr></table></figure></p>\n<p>使配置生效：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">source</span> .zshrc <span class=\"comment\">#具体配置文件根据自己情况指定</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"jdk\"><a href=\"#jdk\" class=\"headerlink\" title=\"jdk\"></a>jdk</h1><h2 id=\"下载-1\"><a href=\"#下载-1\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">点此下载</a></p>\n<h2 id=\"配置-1\"><a href=\"#配置-1\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>解压后拷至某个目录后，在配置文件添加（形如）：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">JAVA_HOME=<span class=\"string\">\"/path/to/jdk\"</span></div><div class=\"line\">PATH=<span class=\"string\">\"<span class=\"variable\">$JAVA_HOME</span>/bin:...\"</span></div></pre></td></tr></table></figure></p>\n<p>修改默认jdk<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo update-alternatives --install /usr/bin/java java /path/to/jdk/bin/java 300</div><div class=\"line\">sudo update-alternatives --install /usr/bin/javac javac /path/to/jdk/bin/javac 300</div><div class=\"line\">sudo update-alternatives --config java</div></pre></td></tr></table></figure></p>\n<h1 id=\"eclipse\"><a href=\"#eclipse\" class=\"headerlink\" title=\"eclipse\"></a>eclipse</h1><h2 id=\"下载-2\"><a href=\"#下载-2\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p><a href=\"http://www.eclipse.org/\">点此下载</a></p>\n"},{"title":"vim 常用命令","date":"2016-08-06T03:06:59.000Z","_content":"# 光标移动\n h或左箭头：左移一个字符\n j或下箭头：下移一个字符\n k或上箭头：上移一个字符\n l或右箭头：右移一个字符\n\n 可以使用组合键，如需要向下移动20行，输入：20j\n\n [Ctrl]+[b] 或 PageUp  :上翻一页\n [Ctrl]+[f] 或 PageDown:上翻一页\n [Ctrl]+[u]:上翻半页\n [Ctrl]+[d]:下翻半页\n\n 0 或 [Home] : 移动至行首\n $ 或 [End]  ：移动至行末\n\n G ： 移动至文件最后一行\n gg： 移动至文件第一行\n nG： 移动至文件第n行\n n[Enter]：从所在行开始向下移动 n 行\n\n # 查找替换\n\n /word :向下查找 word 字符，按 n 向下寻找匹配字符\n ？word：向上查找 word 字符，按 n 向上寻找匹配字符\n n ： 重复查找操作\n N ： 与 n 反向\n\n :n1,n2s/word1/word2/g : n1和n2是数字，表示在第n1行到第n2行之间查找word1,并且将其替换成word2\n :1,$s/word1/word2/g  :替换所有的word1为word2\n :1,$s/word1/word2/gc  :替换所有的word1为word2,但是每一个匹配项替换前需要用户确认\n\n # 删除，复制，粘贴\n\n x 或 [Delete] ：向后删除一个字符\n X 或 [Backspace] ： 向前删除一个字符\n nx ： 连续向后删除 n 个字符\n dd ： 删除当前行\n ndd ： 删除当前行开始向下 n 行\n\n dG : 删除当前行到最后一行的数据\n d1G :删除当前行到第一行的数据\n\n yy : 复制当前行\n nyy ： 复制当前行开始向下 n 行\n yG : 复制当前行到最后一行的数据\n y1G : 复制当前行到第一行的数据\n\n p(小写)：在当前行下一行粘贴\n P（大写）：在当前行上一行粘贴\n\n u ： 撤销\n [Ctrl]+r : 重做，反撤销\n\n # 插入\n i： 在光标所在位置开始插入\n I ： 在当前行行首插入\n a ： 在光标所在字符下一个位置开始插入\n A ： 在当前行行末插入\n o ： 在当前行下一行开始插入\n O ： 在当前行上一行开始插入\n r ： 替换光标所在字符一次\n R ： 持续替换光标所在字符，按[Esc]停止\n\n # 保存，离开\n ：w ： 写入硬盘\n ：w! ： 强制写入硬盘\n ：q ： 离开vim\n ：q!： 修改过文件，但是不想保存，强制离开\n ：wq ：保存后离开\n ：wq! ：强制保存后离开\n ：n1,n2 w [filename] :将第n1行到n2行的数据保存到文件filename\n\n # 行号\n：set nu ：显示行号\n：set nonu ：取消行号显示\n","source":"_posts/vim-常用命令.md","raw":"---\ntitle: vim 常用命令\ndate: 2016-08-06 11:06:59\ntags: [vim]\n---\n# 光标移动\n h或左箭头：左移一个字符\n j或下箭头：下移一个字符\n k或上箭头：上移一个字符\n l或右箭头：右移一个字符\n\n 可以使用组合键，如需要向下移动20行，输入：20j\n\n [Ctrl]+[b] 或 PageUp  :上翻一页\n [Ctrl]+[f] 或 PageDown:上翻一页\n [Ctrl]+[u]:上翻半页\n [Ctrl]+[d]:下翻半页\n\n 0 或 [Home] : 移动至行首\n $ 或 [End]  ：移动至行末\n\n G ： 移动至文件最后一行\n gg： 移动至文件第一行\n nG： 移动至文件第n行\n n[Enter]：从所在行开始向下移动 n 行\n\n # 查找替换\n\n /word :向下查找 word 字符，按 n 向下寻找匹配字符\n ？word：向上查找 word 字符，按 n 向上寻找匹配字符\n n ： 重复查找操作\n N ： 与 n 反向\n\n :n1,n2s/word1/word2/g : n1和n2是数字，表示在第n1行到第n2行之间查找word1,并且将其替换成word2\n :1,$s/word1/word2/g  :替换所有的word1为word2\n :1,$s/word1/word2/gc  :替换所有的word1为word2,但是每一个匹配项替换前需要用户确认\n\n # 删除，复制，粘贴\n\n x 或 [Delete] ：向后删除一个字符\n X 或 [Backspace] ： 向前删除一个字符\n nx ： 连续向后删除 n 个字符\n dd ： 删除当前行\n ndd ： 删除当前行开始向下 n 行\n\n dG : 删除当前行到最后一行的数据\n d1G :删除当前行到第一行的数据\n\n yy : 复制当前行\n nyy ： 复制当前行开始向下 n 行\n yG : 复制当前行到最后一行的数据\n y1G : 复制当前行到第一行的数据\n\n p(小写)：在当前行下一行粘贴\n P（大写）：在当前行上一行粘贴\n\n u ： 撤销\n [Ctrl]+r : 重做，反撤销\n\n # 插入\n i： 在光标所在位置开始插入\n I ： 在当前行行首插入\n a ： 在光标所在字符下一个位置开始插入\n A ： 在当前行行末插入\n o ： 在当前行下一行开始插入\n O ： 在当前行上一行开始插入\n r ： 替换光标所在字符一次\n R ： 持续替换光标所在字符，按[Esc]停止\n\n # 保存，离开\n ：w ： 写入硬盘\n ：w! ： 强制写入硬盘\n ：q ： 离开vim\n ：q!： 修改过文件，但是不想保存，强制离开\n ：wq ：保存后离开\n ：wq! ：强制保存后离开\n ：n1,n2 w [filename] :将第n1行到n2行的数据保存到文件filename\n\n # 行号\n：set nu ：显示行号\n：set nonu ：取消行号显示\n","slug":"vim-常用命令","published":1,"updated":"2017-08-18T13:17:27.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw96000sjeh8yu6rppzy","content":"<h1 id=\"光标移动\"><a href=\"#光标移动\" class=\"headerlink\" title=\"光标移动\"></a>光标移动</h1><p> h或左箭头：左移一个字符<br> j或下箭头：下移一个字符<br> k或上箭头：上移一个字符<br> l或右箭头：右移一个字符</p>\n<p> 可以使用组合键，如需要向下移动20行，输入：20j</p>\n<p> [Ctrl]+[b] 或 PageUp  :上翻一页<br> [Ctrl]+[f] 或 PageDown:上翻一页<br> [Ctrl]+[u]:上翻半页<br> [Ctrl]+[d]:下翻半页</p>\n<p> 0 或 [Home] : 移动至行首<br> $ 或 [End]  ：移动至行末</p>\n<p> G ： 移动至文件最后一行<br> gg： 移动至文件第一行<br> nG： 移动至文件第n行<br> n[Enter]：从所在行开始向下移动 n 行</p>\n<h1 id=\"查找替换\"><a href=\"#查找替换\" class=\"headerlink\" title=\"查找替换\"></a>查找替换</h1><p> /word :向下查找 word 字符，按 n 向下寻找匹配字符<br> ？word：向上查找 word 字符，按 n 向上寻找匹配字符<br> n ： 重复查找操作<br> N ： 与 n 反向</p>\n<p> :n1,n2s/word1/word2/g : n1和n2是数字，表示在第n1行到第n2行之间查找word1,并且将其替换成word2<br> :1,$s/word1/word2/g  :替换所有的word1为word2<br> :1,$s/word1/word2/gc  :替换所有的word1为word2,但是每一个匹配项替换前需要用户确认</p>\n<h1 id=\"删除，复制，粘贴\"><a href=\"#删除，复制，粘贴\" class=\"headerlink\" title=\"删除，复制，粘贴\"></a>删除，复制，粘贴</h1><p> x 或 [Delete] ：向后删除一个字符<br> X 或 [Backspace] ： 向前删除一个字符<br> nx ： 连续向后删除 n 个字符<br> dd ： 删除当前行<br> ndd ： 删除当前行开始向下 n 行</p>\n<p> dG : 删除当前行到最后一行的数据<br> d1G :删除当前行到第一行的数据</p>\n<p> yy : 复制当前行<br> nyy ： 复制当前行开始向下 n 行<br> yG : 复制当前行到最后一行的数据<br> y1G : 复制当前行到第一行的数据</p>\n<p> p(小写)：在当前行下一行粘贴<br> P（大写）：在当前行上一行粘贴</p>\n<p> u ： 撤销<br> [Ctrl]+r : 重做，反撤销</p>\n<h1 id=\"插入\"><a href=\"#插入\" class=\"headerlink\" title=\"插入\"></a>插入</h1><p> i： 在光标所在位置开始插入<br> I ： 在当前行行首插入<br> a ： 在光标所在字符下一个位置开始插入<br> A ： 在当前行行末插入<br> o ： 在当前行下一行开始插入<br> O ： 在当前行上一行开始插入<br> r ： 替换光标所在字符一次<br> R ： 持续替换光标所在字符，按[Esc]停止</p>\n<h1 id=\"保存，离开\"><a href=\"#保存，离开\" class=\"headerlink\" title=\"保存，离开\"></a>保存，离开</h1><p> ：w ： 写入硬盘<br> ：w! ： 强制写入硬盘<br> ：q ： 离开vim<br> ：q!： 修改过文件，但是不想保存，强制离开<br> ：wq ：保存后离开<br> ：wq! ：强制保存后离开<br> ：n1,n2 w [filename] :将第n1行到n2行的数据保存到文件filename</p>\n<h1 id=\"行号\"><a href=\"#行号\" class=\"headerlink\" title=\"行号\"></a>行号</h1><p>：set nu ：显示行号<br>：set nonu ：取消行号显示</p>\n","excerpt":"","more":"<h1 id=\"光标移动\"><a href=\"#光标移动\" class=\"headerlink\" title=\"光标移动\"></a>光标移动</h1><p> h或左箭头：左移一个字符<br> j或下箭头：下移一个字符<br> k或上箭头：上移一个字符<br> l或右箭头：右移一个字符</p>\n<p> 可以使用组合键，如需要向下移动20行，输入：20j</p>\n<p> [Ctrl]+[b] 或 PageUp  :上翻一页<br> [Ctrl]+[f] 或 PageDown:上翻一页<br> [Ctrl]+[u]:上翻半页<br> [Ctrl]+[d]:下翻半页</p>\n<p> 0 或 [Home] : 移动至行首<br> $ 或 [End]  ：移动至行末</p>\n<p> G ： 移动至文件最后一行<br> gg： 移动至文件第一行<br> nG： 移动至文件第n行<br> n[Enter]：从所在行开始向下移动 n 行</p>\n<h1 id=\"查找替换\"><a href=\"#查找替换\" class=\"headerlink\" title=\"查找替换\"></a>查找替换</h1><p> /word :向下查找 word 字符，按 n 向下寻找匹配字符<br> ？word：向上查找 word 字符，按 n 向上寻找匹配字符<br> n ： 重复查找操作<br> N ： 与 n 反向</p>\n<p> :n1,n2s/word1/word2/g : n1和n2是数字，表示在第n1行到第n2行之间查找word1,并且将其替换成word2<br> :1,$s/word1/word2/g  :替换所有的word1为word2<br> :1,$s/word1/word2/gc  :替换所有的word1为word2,但是每一个匹配项替换前需要用户确认</p>\n<h1 id=\"删除，复制，粘贴\"><a href=\"#删除，复制，粘贴\" class=\"headerlink\" title=\"删除，复制，粘贴\"></a>删除，复制，粘贴</h1><p> x 或 [Delete] ：向后删除一个字符<br> X 或 [Backspace] ： 向前删除一个字符<br> nx ： 连续向后删除 n 个字符<br> dd ： 删除当前行<br> ndd ： 删除当前行开始向下 n 行</p>\n<p> dG : 删除当前行到最后一行的数据<br> d1G :删除当前行到第一行的数据</p>\n<p> yy : 复制当前行<br> nyy ： 复制当前行开始向下 n 行<br> yG : 复制当前行到最后一行的数据<br> y1G : 复制当前行到第一行的数据</p>\n<p> p(小写)：在当前行下一行粘贴<br> P（大写）：在当前行上一行粘贴</p>\n<p> u ： 撤销<br> [Ctrl]+r : 重做，反撤销</p>\n<h1 id=\"插入\"><a href=\"#插入\" class=\"headerlink\" title=\"插入\"></a>插入</h1><p> i： 在光标所在位置开始插入<br> I ： 在当前行行首插入<br> a ： 在光标所在字符下一个位置开始插入<br> A ： 在当前行行末插入<br> o ： 在当前行下一行开始插入<br> O ： 在当前行上一行开始插入<br> r ： 替换光标所在字符一次<br> R ： 持续替换光标所在字符，按[Esc]停止</p>\n<h1 id=\"保存，离开\"><a href=\"#保存，离开\" class=\"headerlink\" title=\"保存，离开\"></a>保存，离开</h1><p> ：w ： 写入硬盘<br> ：w! ： 强制写入硬盘<br> ：q ： 离开vim<br> ：q!： 修改过文件，但是不想保存，强制离开<br> ：wq ：保存后离开<br> ：wq! ：强制保存后离开<br> ：n1,n2 w [filename] :将第n1行到n2行的数据保存到文件filename</p>\n<h1 id=\"行号\"><a href=\"#行号\" class=\"headerlink\" title=\"行号\"></a>行号</h1><p>：set nu ：显示行号<br>：set nonu ：取消行号显示</p>\n"},{"title":"数据库安装记录","date":"2016-08-31T07:40:07.000Z","_content":"\n> 仅记录windows系统相关\n\n#### 获取金仓数据库\n 根据系统环境选择对应版本[下载](http://kingbase.com.cn/kingbase/newslist/list-186-1.html)\n\n#### 安装(win32为例)\n下载得到的是一个压缩文件，解压后可的目录结构如下：\n```\n     kdb-xxx\n        |\n        |—— license_see_xxx_官网试用WIN_X86.bat   //许可证书文件，默认25连接\n        |—— setup.bat     \n        |—— vcredist_x86.exe     //visual studio C++ 2008 运行库，如果安装检测提示visual studio C++ 2008 不通过，则需要安装此文件\n        |—— setup\n              |—— install.exe    //安装程序\n              |—— installer.properties\n              |—— MD5\n              |—— md5deep.exe\n```\n\n1、以管理员身份 install.exe  开始安装\n2、选择许可文件时 选择 license_see_xxx_官网试用WIN_X86.bat 即可\n3、后续一直默认直至安装结束\n4、安装成功后，进入“开始”菜单，找到金仓数据库的工作目录，进入子目录“管理工具”，以管理员身份运行“数据库初始化工具”，根据提示设置密码，数据库名\n5、等待初始化完成后，点击“管理工具”目录下的“查询分析器”，即可打开客户端，连接数据库\n\n特别注意：如果不以管理员身份运行，将会提示网络通信错误\n","source":"_posts/数据库安装记录.md","raw":"---\ntitle: 数据库安装记录\ndate: 2016-08-31 15:40:07\ntags: [kingbase]\n---\n\n> 仅记录windows系统相关\n\n#### 获取金仓数据库\n 根据系统环境选择对应版本[下载](http://kingbase.com.cn/kingbase/newslist/list-186-1.html)\n\n#### 安装(win32为例)\n下载得到的是一个压缩文件，解压后可的目录结构如下：\n```\n     kdb-xxx\n        |\n        |—— license_see_xxx_官网试用WIN_X86.bat   //许可证书文件，默认25连接\n        |—— setup.bat     \n        |—— vcredist_x86.exe     //visual studio C++ 2008 运行库，如果安装检测提示visual studio C++ 2008 不通过，则需要安装此文件\n        |—— setup\n              |—— install.exe    //安装程序\n              |—— installer.properties\n              |—— MD5\n              |—— md5deep.exe\n```\n\n1、以管理员身份 install.exe  开始安装\n2、选择许可文件时 选择 license_see_xxx_官网试用WIN_X86.bat 即可\n3、后续一直默认直至安装结束\n4、安装成功后，进入“开始”菜单，找到金仓数据库的工作目录，进入子目录“管理工具”，以管理员身份运行“数据库初始化工具”，根据提示设置密码，数据库名\n5、等待初始化完成后，点击“管理工具”目录下的“查询分析器”，即可打开客户端，连接数据库\n\n特别注意：如果不以管理员身份运行，将会提示网络通信错误\n","slug":"数据库安装记录","published":1,"updated":"2017-08-18T13:17:27.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw97000ujeh8sd93xd0g","content":"<blockquote>\n<p>仅记录windows系统相关</p>\n</blockquote>\n<h4 id=\"获取金仓数据库\"><a href=\"#获取金仓数据库\" class=\"headerlink\" title=\"获取金仓数据库\"></a>获取金仓数据库</h4><p> 根据系统环境选择对应版本<a href=\"http://kingbase.com.cn/kingbase/newslist/list-186-1.html\" target=\"_blank\" rel=\"external\">下载</a></p>\n<h4 id=\"安装-win32为例\"><a href=\"#安装-win32为例\" class=\"headerlink\" title=\"安装(win32为例)\"></a>安装(win32为例)</h4><p>下载得到的是一个压缩文件，解压后可的目录结构如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">kdb-xxx</div><div class=\"line\">   |</div><div class=\"line\">   |—— license_see_xxx_官网试用WIN_X86.bat   //许可证书文件，默认25连接</div><div class=\"line\">   |—— setup.bat     </div><div class=\"line\">   |—— vcredist_x86.exe     //visual studio C++ 2008 运行库，如果安装检测提示visual studio C++ 2008 不通过，则需要安装此文件</div><div class=\"line\">   |—— setup</div><div class=\"line\">         |—— install.exe    //安装程序</div><div class=\"line\">         |—— installer.properties</div><div class=\"line\">         |—— MD5</div><div class=\"line\">         |—— md5deep.exe</div></pre></td></tr></table></figure></p>\n<p>1、以管理员身份 install.exe  开始安装<br>2、选择许可文件时 选择 license_see<em>xxx</em>官网试用WIN_X86.bat 即可<br>3、后续一直默认直至安装结束<br>4、安装成功后，进入“开始”菜单，找到金仓数据库的工作目录，进入子目录“管理工具”，以管理员身份运行“数据库初始化工具”，根据提示设置密码，数据库名<br>5、等待初始化完成后，点击“管理工具”目录下的“查询分析器”，即可打开客户端，连接数据库</p>\n<p>特别注意：如果不以管理员身份运行，将会提示网络通信错误</p>\n","excerpt":"","more":"<blockquote>\n<p>仅记录windows系统相关</p>\n</blockquote>\n<h4 id=\"获取金仓数据库\"><a href=\"#获取金仓数据库\" class=\"headerlink\" title=\"获取金仓数据库\"></a>获取金仓数据库</h4><p> 根据系统环境选择对应版本<a href=\"http://kingbase.com.cn/kingbase/newslist/list-186-1.html\">下载</a></p>\n<h4 id=\"安装-win32为例\"><a href=\"#安装-win32为例\" class=\"headerlink\" title=\"安装(win32为例)\"></a>安装(win32为例)</h4><p>下载得到的是一个压缩文件，解压后可的目录结构如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">kdb-xxx</div><div class=\"line\">   |</div><div class=\"line\">   |—— license_see_xxx_官网试用WIN_X86.bat   //许可证书文件，默认25连接</div><div class=\"line\">   |—— setup.bat     </div><div class=\"line\">   |—— vcredist_x86.exe     //visual studio C++ 2008 运行库，如果安装检测提示visual studio C++ 2008 不通过，则需要安装此文件</div><div class=\"line\">   |—— setup</div><div class=\"line\">         |—— install.exe    //安装程序</div><div class=\"line\">         |—— installer.properties</div><div class=\"line\">         |—— MD5</div><div class=\"line\">         |—— md5deep.exe</div></pre></td></tr></table></figure></p>\n<p>1、以管理员身份 install.exe  开始安装<br>2、选择许可文件时 选择 license_see<em>xxx</em>官网试用WIN_X86.bat 即可<br>3、后续一直默认直至安装结束<br>4、安装成功后，进入“开始”菜单，找到金仓数据库的工作目录，进入子目录“管理工具”，以管理员身份运行“数据库初始化工具”，根据提示设置密码，数据库名<br>5、等待初始化完成后，点击“管理工具”目录下的“查询分析器”，即可打开客户端，连接数据库</p>\n<p>特别注意：如果不以管理员身份运行，将会提示网络通信错误</p>\n"},{"title":"命令行使用shadowsocks全局代理","date":"2016-12-21T03:05:09.000Z","_content":"\n\n安装shadowsocks\n\n由于shadowsocks是基于python开发的，所以必须安装python：\n\n```\nsudo apt-get install python\n```\n接着安装python的包管理器pip：\n\n```\nsudo apt-get install python-pip\n```\n安装完毕之后，通过pip直接安装shadowsocks：\n```\nsudo pip install shadowsocks\n```\n配置shadowsocks\n新建一个配置文件shawdowsocks.json，然后配置相应的参数：\n``` {\n  \"server\": \"{your-server}\",\n  \"server_port\": 40002,\n  \"local_port\": 1080,\n  \"password\": \"{your-password}\",\n  \"timeout\": 600,\n  \"method\": \"aes-256-cfb\"\n}\n```\n上面的参数需要你的shawdowsocks服务提供商为你提供，当然你也可以自己搭建一个。如何搭建个人的shawdowsocks不在本文讨论范围之内，请参阅其他教程。\n\n配置完成后就可以启动shawdowsocks服务：\n\n```\nsudo sslocal -c shawdowsocks.json -d start\n```\n配置全局代理\n\n启动shawdowsocks服务后，发现并不能翻墙上网，这是因为shawdowsocks是socks 5代理，需要客户端配合才能翻墙。\n\n为了让整个系统都走shawdowsocks通道，需要配置全局代理，可以通过polipo实现。\n\n首先是安装polipo：\n\n```\nsudo apt-get install polipo\n```\n接着修改polipo的配置文件/etc/polipo/config：\n```\nlogSyslog = true\nlogFile = /var/log/polipo/polipo.log\n\nproxyAddress = \"0.0.0.0\"\n\nsocksParentProxy = \"127.0.0.1:1080\"\nsocksProxyType = socks5\n\nchunkHighMark = 50331648\nobjectHighMark = 16384\n\nserverMaxSlots = 64\nserverSlots = 16\nserverSlots1 = 32\n```\n重启polipo服务：\n\n```\nsudo /etc/init.d/polipo restart\n```\n为终端配置http代理：\n```\nexport http_proxy=\"http://127.0.0.1:8123/\"\n```\n接着测试下能否翻墙：\n```\ncurl www.google.com\n```\n如果有响应，则全局代理配置成功。\n\n注意事项\n\n服务器重启后，下面两句需要重新执行：\n```\nsudo sslocal -c shawdowsocks.json -d start\nexport http_proxy=\"http://127.0.0.1:8123/\"\n```\n","source":"_posts/命令行使用shadowsocks全局代理.md","raw":"---\ntitle: 命令行使用shadowsocks全局代理\ndate: 2016-12-21 11:05:09\ntags: [shadowsocks]\n---\n\n\n安装shadowsocks\n\n由于shadowsocks是基于python开发的，所以必须安装python：\n\n```\nsudo apt-get install python\n```\n接着安装python的包管理器pip：\n\n```\nsudo apt-get install python-pip\n```\n安装完毕之后，通过pip直接安装shadowsocks：\n```\nsudo pip install shadowsocks\n```\n配置shadowsocks\n新建一个配置文件shawdowsocks.json，然后配置相应的参数：\n``` {\n  \"server\": \"{your-server}\",\n  \"server_port\": 40002,\n  \"local_port\": 1080,\n  \"password\": \"{your-password}\",\n  \"timeout\": 600,\n  \"method\": \"aes-256-cfb\"\n}\n```\n上面的参数需要你的shawdowsocks服务提供商为你提供，当然你也可以自己搭建一个。如何搭建个人的shawdowsocks不在本文讨论范围之内，请参阅其他教程。\n\n配置完成后就可以启动shawdowsocks服务：\n\n```\nsudo sslocal -c shawdowsocks.json -d start\n```\n配置全局代理\n\n启动shawdowsocks服务后，发现并不能翻墙上网，这是因为shawdowsocks是socks 5代理，需要客户端配合才能翻墙。\n\n为了让整个系统都走shawdowsocks通道，需要配置全局代理，可以通过polipo实现。\n\n首先是安装polipo：\n\n```\nsudo apt-get install polipo\n```\n接着修改polipo的配置文件/etc/polipo/config：\n```\nlogSyslog = true\nlogFile = /var/log/polipo/polipo.log\n\nproxyAddress = \"0.0.0.0\"\n\nsocksParentProxy = \"127.0.0.1:1080\"\nsocksProxyType = socks5\n\nchunkHighMark = 50331648\nobjectHighMark = 16384\n\nserverMaxSlots = 64\nserverSlots = 16\nserverSlots1 = 32\n```\n重启polipo服务：\n\n```\nsudo /etc/init.d/polipo restart\n```\n为终端配置http代理：\n```\nexport http_proxy=\"http://127.0.0.1:8123/\"\n```\n接着测试下能否翻墙：\n```\ncurl www.google.com\n```\n如果有响应，则全局代理配置成功。\n\n注意事项\n\n服务器重启后，下面两句需要重新执行：\n```\nsudo sslocal -c shawdowsocks.json -d start\nexport http_proxy=\"http://127.0.0.1:8123/\"\n```\n","slug":"命令行使用shadowsocks全局代理","published":1,"updated":"2017-08-18T13:17:27.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw99000wjeh8okh08rnl","content":"<p>安装shadowsocks</p>\n<p>由于shadowsocks是基于python开发的，所以必须安装python：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python</div></pre></td></tr></table></figure>\n<p>接着安装python的包管理器pip：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python-pip</div></pre></td></tr></table></figure>\n<p>安装完毕之后，通过pip直接安装shadowsocks：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo pip install shadowsocks</div></pre></td></tr></table></figure></p>\n<p>配置shadowsocks<br>新建一个配置文件shawdowsocks.json，然后配置相应的参数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">  &quot;server&quot;: &quot;&#123;your-server&#125;&quot;,</div><div class=\"line\">  &quot;server_port&quot;: 40002,</div><div class=\"line\">  &quot;local_port&quot;: 1080,</div><div class=\"line\">  &quot;password&quot;: &quot;&#123;your-password&#125;&quot;,</div><div class=\"line\">  &quot;timeout&quot;: 600,</div><div class=\"line\">  &quot;method&quot;: &quot;aes-256-cfb&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>上面的参数需要你的shawdowsocks服务提供商为你提供，当然你也可以自己搭建一个。如何搭建个人的shawdowsocks不在本文讨论范围之内，请参阅其他教程。</p>\n<p>配置完成后就可以启动shawdowsocks服务：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo sslocal -c shawdowsocks.json -d start</div></pre></td></tr></table></figure>\n<p>配置全局代理</p>\n<p>启动shawdowsocks服务后，发现并不能翻墙上网，这是因为shawdowsocks是socks 5代理，需要客户端配合才能翻墙。</p>\n<p>为了让整个系统都走shawdowsocks通道，需要配置全局代理，可以通过polipo实现。</p>\n<p>首先是安装polipo：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install polipo</div></pre></td></tr></table></figure>\n<p>接着修改polipo的配置文件/etc/polipo/config：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">logSyslog = true</div><div class=\"line\">logFile = /var/log/polipo/polipo.log</div><div class=\"line\"></div><div class=\"line\">proxyAddress = &quot;0.0.0.0&quot;</div><div class=\"line\"></div><div class=\"line\">socksParentProxy = &quot;127.0.0.1:1080&quot;</div><div class=\"line\">socksProxyType = socks5</div><div class=\"line\"></div><div class=\"line\">chunkHighMark = 50331648</div><div class=\"line\">objectHighMark = 16384</div><div class=\"line\"></div><div class=\"line\">serverMaxSlots = 64</div><div class=\"line\">serverSlots = 16</div><div class=\"line\">serverSlots1 = 32</div></pre></td></tr></table></figure></p>\n<p>重启polipo服务：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /etc/init.d/polipo restart</div></pre></td></tr></table></figure>\n<p>为终端配置http代理：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">export http_proxy=&quot;http://127.0.0.1:8123/&quot;</div></pre></td></tr></table></figure></p>\n<p>接着测试下能否翻墙：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl www.google.com</div></pre></td></tr></table></figure></p>\n<p>如果有响应，则全局代理配置成功。</p>\n<p>注意事项</p>\n<p>服务器重启后，下面两句需要重新执行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo sslocal -c shawdowsocks.json -d start</div><div class=\"line\">export http_proxy=&quot;http://127.0.0.1:8123/&quot;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>安装shadowsocks</p>\n<p>由于shadowsocks是基于python开发的，所以必须安装python：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python</div></pre></td></tr></table></figure>\n<p>接着安装python的包管理器pip：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python-pip</div></pre></td></tr></table></figure>\n<p>安装完毕之后，通过pip直接安装shadowsocks：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo pip install shadowsocks</div></pre></td></tr></table></figure></p>\n<p>配置shadowsocks<br>新建一个配置文件shawdowsocks.json，然后配置相应的参数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">  &quot;server&quot;: &quot;&#123;your-server&#125;&quot;,</div><div class=\"line\">  &quot;server_port&quot;: 40002,</div><div class=\"line\">  &quot;local_port&quot;: 1080,</div><div class=\"line\">  &quot;password&quot;: &quot;&#123;your-password&#125;&quot;,</div><div class=\"line\">  &quot;timeout&quot;: 600,</div><div class=\"line\">  &quot;method&quot;: &quot;aes-256-cfb&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>上面的参数需要你的shawdowsocks服务提供商为你提供，当然你也可以自己搭建一个。如何搭建个人的shawdowsocks不在本文讨论范围之内，请参阅其他教程。</p>\n<p>配置完成后就可以启动shawdowsocks服务：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo sslocal -c shawdowsocks.json -d start</div></pre></td></tr></table></figure>\n<p>配置全局代理</p>\n<p>启动shawdowsocks服务后，发现并不能翻墙上网，这是因为shawdowsocks是socks 5代理，需要客户端配合才能翻墙。</p>\n<p>为了让整个系统都走shawdowsocks通道，需要配置全局代理，可以通过polipo实现。</p>\n<p>首先是安装polipo：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install polipo</div></pre></td></tr></table></figure>\n<p>接着修改polipo的配置文件/etc/polipo/config：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">logSyslog = true</div><div class=\"line\">logFile = /var/log/polipo/polipo.log</div><div class=\"line\"></div><div class=\"line\">proxyAddress = &quot;0.0.0.0&quot;</div><div class=\"line\"></div><div class=\"line\">socksParentProxy = &quot;127.0.0.1:1080&quot;</div><div class=\"line\">socksProxyType = socks5</div><div class=\"line\"></div><div class=\"line\">chunkHighMark = 50331648</div><div class=\"line\">objectHighMark = 16384</div><div class=\"line\"></div><div class=\"line\">serverMaxSlots = 64</div><div class=\"line\">serverSlots = 16</div><div class=\"line\">serverSlots1 = 32</div></pre></td></tr></table></figure></p>\n<p>重启polipo服务：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /etc/init.d/polipo restart</div></pre></td></tr></table></figure>\n<p>为终端配置http代理：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">export http_proxy=&quot;http://127.0.0.1:8123/&quot;</div></pre></td></tr></table></figure></p>\n<p>接着测试下能否翻墙：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl www.google.com</div></pre></td></tr></table></figure></p>\n<p>如果有响应，则全局代理配置成功。</p>\n<p>注意事项</p>\n<p>服务器重启后，下面两句需要重新执行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo sslocal -c shawdowsocks.json -d start</div><div class=\"line\">export http_proxy=&quot;http://127.0.0.1:8123/&quot;</div></pre></td></tr></table></figure></p>\n"},{"title":"常见数据库操作SQL","date":"2016-07-15T05:48:40.000Z","_content":"\n> 操作表，序列，触发器等时最好都加上schema修饰，以下部分sql中为清晰起见，省略schema修饰。\n  以下 triggerNameForInsert，triggerNameForUpdatet,triggerNameForDelete 均指代\n  触发器名，并且包含schema修饰。\n\n# Oracle\n>owner 是对应的schema，要大写,url中的参数依次是ip,端口，数据库名，以下所有SQL是根据本人用到的做的记录，需要时请自行调整更改。\n\n## Jdbc驱动\n```\noracle.jdbc.driver.OracleDriver\n```\n## url\n```\njdbc:oracle:thin:@%s:%d:%s\n```\n## 查询表主键\n```\nSELECT column_name FROM user_cons_columns WHERE constraint_name = (\nSELECT constraint_name FROM user_constraints WHERE table_name= '%s'\nAND constraint_type ='P')；\n```\n## 查询表字段类型\n```\nselect column_name, data_type from all_tab_columns where owner = '%s' and table_name = '%s'；\n ```\n## 获取所有表\n```\nselect table_name from all_tables where owner=upper('%s')；\n```\n## 查询表是否存在\n```\nSELECT 1 FROM user_tables WHERE table_name='%s'；\n```\n## 查询序列是否存在\n```\nselect SEQUENCE_NAME from user_sequences where SEQUENCE_NAME = '%s'；\n```\n## 创建序列\n```\nCREATE SEQUENCE \\\"%s\\\".\\\"%s\\\" INCREMENT BY 1 START WITH 0 MINVALUE 0 NOMAXVALUE；\n```\n## 删除序列\n```\nDROP SEQUENCE %s.%s；\n```\n## 创建表\n```\nCREATE TABLE %s.%s (\n  id              NUMBER          NOT NULL PRIMARY KEY,\n  dbName          VARCHAR2(50)    NOT NULL,\n  tableName       VARCHAR2(50)    NOT NULL,\n  pkNames         VARCHAR2(2000)  NOT NULL,\n  newPkValues     VARCHAR2(2000),\n  oldPkValues     VARCHAR2(2000),\n  action          VARCHAR2(20)    NOT NULL\n  )；\n```\n## 查询表上是否存在某个触发器\n```\nSELECT trigger_name FROM all_triggers WHERE owner='%s' AND table_name='%s' AND trigger_name='%s'；\n```\n## 查询外键\n```\nselect ucc.constraint_name from user_cons_columns ucc\njoin user_constraints uc on ucc.owner=uc.owner and ucc.constraint_name= uc.constraint_name\njoin user_constraints uc_pk ON uc.r_owner= uc_pk.owner and uc.r_constraint_name=uc_pk.constraint_name\nwhere uc.constraint_type='R' and ucc.table_name='%s'；\n```\n## 关闭外键约束\n```\nalter table %s.%s disable constraint %s；#最后一个参数是某个外键约束\n```\n## 启用外键约束\n```\nalter table %s.%s enable constraint %s；#最后一个参数是某个外键约束\n```\n\n## 触发器\n设1.10创建的表记为 events,用来记录没一条记录的变化，events_seq是存在的一个序列，设有表teclan\n```\ncreate table teclan\n(\n  id number,\n  name varchar(10),\n  age number,\n  sex varchar(10)\n);\nalter table taclan add  primary key(id,name);\n```\n在表teclan上创建触发器，用来记录所有记录的变化，信息存到events表。\n### insert触发器\n```\nCREATE OR REPLACE TRIGGER triggerNameForInsert  #triggerNameForInsert为触发器名，自定义\nAFTER INSERT ON teclan\nFOR EACH ROW\nBEGIN\nINSERT INTO events VALUES (events_seq.nextval ,'xe','teclan','ID,NAME',(:NEW.\"ID\"||','||:NEW.\"NAME\"),\n(:OLD.\"ID\"||','||:OLD.\"NAME\"),'INSERT');\nEND;\n```\n### update触发器\n```\nCREATE OR REPLACE TRIGGER triggerNameForUpdatet\nAFTER UPDATE ON teclan\nFOR EACH ROW\nBEGIN\nINSERT INTO events VALUES (events_seq.nextval ,'xe','teclan','ID,NAME',(:NEW.\"ID\"||','||:NEW.\"NAME\"),\n(:OLD.\"ID\"||','||:OLD.\"NAME\"),'UPDATE');\nEND;\n```\n### delete触发器\n```\nCREATE OR REPLACE TRIGGER triggerNameForDelete\nAFTER DELETE ON teclan\nFOR EACH ROW\nBEGIN INSERT INTO events VALUES (events_seq.nextval ,'xe','teclan','ID,NAME',(:NEW.\"ID\"||','||:NEW.\"NAME\"),\n(:OLD.\"ID\"||','||:OLD.\"NAME\"),'DELETE');\nEND;\n```\n### 删除触发器\n```\ndrop trigger triggerName; #triggerName为指定要删除的触发器\n```\n## 查询数据库中各个表的记录数\n### 创建函数\n```\ncreate or replace function count_rows(table_name in varchar2,owner in varchar2 default null)\nreturn number\nauthid current_user\nIS\n   num_rows number;\n   stmt varchar2(2000);\nbegin\n   if owner is null then\n      stmt := 'select count(*) from \"'||table_name||'\"';\n   else\n      stmt := 'select count(*) from \"'||owner||'\".\"'||table_name||'\"';\n   end if;\n   execute immediate stmt into num_rows;\n   return num_rows;\nend;\n```\n### 查询\n```\nselect table_name, count_rows(table_name)  nrows from user_tables order by nrows desc;\n```\n## 存储过程实例\n### 创建100个表\n```\ndeclare i\ninteger :=1;\nbegin\n  loop\n    if i < 101 then\n      Execute immediate'create TABLE'||'\"USER1\".\"articles'||i||'\"'||\n       '(\"id\"       NUMBER(*,0),\n         \"content\"  clob,\n       PRIMARY KEY (\"id\"))';\n       i:= i+1;\n     else exit;\n   end if;\n  end loop;\nend;\n```\n### 删除100个表\n```\ndeclare i\ninteger :=1;\nbegin\n  loop\n    if i < 101 then\n      Execute immediate'drop table \"USER1\".\"articles'||i||'\"';\n       i:= i+1;\n     else exit;\n    end if;\n  end loop;\nend;\n```\n### 往100个表插入数据，每个表500条记录\n```\ndeclare\ni integer :=1;\nj integer :=1;\nsqlstr varchar(2000);\nbegin\n  for i in 1..100 loop\n    for j in 1..500 loop\n      sqlstr := 'insert into \"USER1\".\"users'||TO_CHAR(i)||'\" values('||j||',''昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅'')';\n      execute immediate sqlstr;\n    end loop;\n   end loop;\n   commit;\nend;\n```\n### 删除100个里面的所有数据\n```\ndeclare i\ninteger :=1;\nbegin\n  loop\n    if i < 101 then\n      Execute immediate'delete from \"USER1\".\"users'||i||'\"';\n       i:= i+1;\n     else exit;\n    end if;\n  end loop;\n  commit;\nend;\n```\n\n# 达梦数据库\n  除以下特别指出外，其余参考Oracle\n\n  > sysobjects.object_name 为库模式，user_constraints.table_name 为表名\n\n## 查询主键\n```\nSELECT column_name FROM user_cons_columns WHERE constraint_name = (select sysobjects.name from\nsysobjects ,all_objects,user_constraints where object_type='SCH' and object_name = '%s'\nand sysobjects.schid = all_objects.object_id  and type$='TABOBJ' and sysobjects.subtype$='CONS'\nand user_constraints.table_name= '%s' AND user_constraints.constraint_type ='P'\nand user_constraints.constraint_name = sysobjects.name)\n```\n## 查询所有表\n```\nselect sysobjects.name from sysobjects,all_objects where object_type='SCH' and object_name = '%s'\nand sysobjects.schid = all_objects.object_id and sysobjects.type$='SCHOBJ' and sysobjects.subtype$='UTAB'\n```\n## 存储过程实例\n### 创建100个表\n```\ndeclare sqls varchar;\nbegin\n  for i in 1..100 loop\n       set sqls = 'CREATE TABLE \"TESTER\".\"users'||TO_CHAR(i)||'\"\n       (\"id\"  INTEGER NOT NULL,\n       \"content\"  VARCHAR2(2000),\n       NOT CLUSTER PRIMARY KEY(\"id\")) STORAGE(ON \"MAIN\", CLUSTERBTR)';\n       EXECUTE IMMEDIATE sqls;\n  end loop;\n  commit;\n end;\n```\n### 删除100个表\n```\ndeclare sqls varchar;\nbegin\n for i in 1..100 loop\n       set sqls = 'drop TABLE \"TESTER\".\"users'||TO_CHAR(i)||'\"';\n       EXECUTE IMMEDIATE sqls;\n end loop;\n       commit;\n end;\n```\n### 往100个表添加数据，每个表500条\n```\nDECLARE\ni integer :=1;\nj integer :=1;\nsqlstr varchar;\ntextstr varchar := '这本书本身的内容并不甘甜,因为里头夹杂着太多不忍与亲身体验的辛酸。苦苦的味道,为这本纪录中国千年文化的书,多写了一道滋味。只有书籍能把个高贵的生命早已遗逝的信号传递给你，只有书籍能把一切美好和智慧对比着丑陋与愚蠢呈现给你。我带着崇敬的心情翻开了它，跟随余秋雨的脚步，去重新认识这些古老深厚的文明，没有肤浅的欢笑，有的只是与作者一起感慨，一起深思。《风雨天一阁》写了一座经历数百年风雨沧桑的普通的楼阁，被一代代人世代保护着，却终被强盗偷窃所骚扰，成为“一种极端艰难，又极其悲怆的文化奇迹”。天一阁承载的文明与历史太多太多。天一阁的命运正是当时中华文化的命运，中华的许多许多文化宝藏在静静地经历数百年甚至数千年的风雨洗礼之后，竟未为人所敬，不为人所珍，最终落入虎口。而当其几近灭亡时，人们才恍然醒悟，慌忙中搜寻回几粒残碎不堪文化碎片，叹息不已，可惜已晚了。《苏东坡突围》使我明白才华横溢、豪放高达的一代文豪苏东坡被一群奸诈卑鄙﹑强词夺理的小人诬陷时的无奈与痛苦，被排挤，被批判，被嘲笑，被流放，可他却并未丧失继续努力生活、前进的勇气。我小时候曾为苏轼美妙清澈的水调歌头所倾心，为他“会挽雕弓如满月，西北望射天狼”的豪情壮志所震撼。';\nBEGIN\n  FOR i in 1..100 LOOP\n    FOR j in 1..500 LOOP\n      set sqlstr := 'insert into \"TESTER\".\"users'||i||'\" values('||j||', '''||textstr||''')';\n      execute immediate sqlstr;\n      --insert into TESTER.\"users1\" values (1,'这本书本身的内容并不甘甜');\n  END LOOP;\n END LOOP;\nEND;\n```\n### 删除100个表里面的所有数据\n```\ndeclare sqls varchar;\nbegin\n for i in 1..100 loop\n       set sqls = 'delete from \"TESTER\".\"users'||TO_CHAR(i)||'\"';\n       EXECUTE IMMEDIATE sqls;\n end loop;\n commit;\n end;\n```\n\n\n# Sqlserver2k\n> o.name 指定表名,sqlserver默认的schema是dbo\n\n## Jdbc驱动\n```\ncom.microsoft.jdbc.sqlserver.SQLServerDriver\n```\n## url\n```\njdbc:microsoft:sqlserver://%s:%d;DatabaseName=%s\n```\n## 查询主键\n```\nSELECT c.name AS name FROM sysobjects o INNER JOIN sysindexes x ON o.id = x.id INNER\nJOIN syscolumns c ON o.id = c.id INNER\nJOIN sysindexkeys xk ON o.id = xk.id\nAND x.indid = xk.indid AND c.colid = xk.colid\nAND x.keycnt >= xk.keyno WHERE o.name = '%s' AND (o.type IN ('U')) AND (x.status & 32 = 0)\nAND (CONVERT(bit, (x.status & 0x800) / 0x800) = 1);\n```\n## 查询表字段类型\n```\nselect users.name as schema_name,o.name as table_name, c.name as column_name, t.name as data_type \nfrom syscolumns c, sysobjects o, systypes t,dbo.sysusers users where o.name = '%s' and users.name = '%s' and users.uid =o.uid and c.id = o.id and c.xtype = t.xtype;\n# 其中，第一个参数为表名，第二个参数为模式名（用户名）\n```\n## 获取所有表\n```\nselect table_name from information_schema.tables where table_type='base table' and table_schema='%s'\";\n```\n## 查询表是否存在\n```\nSELECT name FROM dbo.sysobjects WHERE name='%s'；\n```\n## 创建表\n```\nCREATE TABLE %s.%s\n(\nid INTEGER IDENTITY(1,1) NOT NULL PRIMARY KEY, #自增字段\ndbName     VARCHAR(30),\ntableName  VARCHAR(30),\npkNames    VARCHAR(2000),\nnewPkValues   VARCHAR(2000),\noldPkValues   VARCHAR(2000),\naction     VARCHAR(20)\n)；\n```\n## 查询外键\n```\nselect distinct a.table_name, b.column_name,b.constraint_name,object_name(rkeyid) r_table_name  \nfrom information_schema.table_constraints a, information_schema.constraint_column_usage b, sysforeignkeys c\nwhere a.constraint_type='foreign key' and a.constraint_name= b.constraint_name and object_name(fkeyid)=a.table_name\nand object_name(constid)=a.constraint_name and a.table_name='%s'；\n```\n## 关闭外键约束\n```\nalter table %s nocheck constraint %s；#最后一个参数为某个外键约束\n```\n## 启用为外键约束\n```\nalter table %s check constraint %s;#最后一个参数为某个外键约束\n```\n## 查询表上面是否存在某个触发器\n```\nSELECT name FROM dbo.sysobjects WHERE type='TR' AND name='%s'；\n```\n## 创建触发器\n设3.7创建的表为events，且有表teclan如下：\n```\ncreate table teclan\n(\nid int,\nname varchar(10),\nage int,\nsex varchar(10)\n);\nalter table teclan add primary key(id,name);\n```\n### insert触发器\n```\nCREATE TRIGGER triggerNameForInsert\nON dbo.teclan\nFOR INSERT\nAS\nDECLARE\n@newid VARCHAR(20),@oldid VARCHAR(20),\n@newname VARCHAR(20),@oldname VARCHAR(20)\nBEGIN\nselect @newid=CONVERT(VARCHAR(200),id) from inserted\nselect @oldid=CONVERT(VARCHAR(200),id) from deleted\nselect @newname=CONVERT(VARCHAR(200),name) from inserted\nselect @oldname=CONVERT(VARCHAR(200),name) from deleted  \nINSERT INTO dbo.events(dbName, tableName, pkNames, newPkValues, oldPkValues, action)\nVALUES ('testdb', 'teclan', 'id,name', @newid+','+@newname, @oldid+','+@oldname , 'INSERT')\nEND;\n```\n### update触发器\n```\nCREATE TRIGGER triggerNameForUpdatet\nON dbo.teclan\nFOR UPDATE\nAS\nDECLARE\n@newid VARCHAR(20),@oldid VARCHAR(20),\n@newname VARCHAR(20),@oldname VARCHAR(20)\nBEGIN\nselect @newid=CONVERT(VARCHAR(200),id) from inserted\nselect @oldid=CONVERT(VARCHAR(200),id) from deleted\nselect @newname=CONVERT(VARCHAR(200),name) from inserted\nselect @oldname=CONVERT(VARCHAR(200),name) from deleted  \nINSERT INTO dbo.events(dbName, tableName, pkNames, newPkValues, oldPkValues, action)\nVALUES ('testdb', 'teclan', 'id,name', @newid+','+@newname, @oldid+','+@oldname , 'UPDATE')\nEND;\n```\n### delete触发器\n>关于sqlserver，delete操作如果按insert和update方式创建触发器，那么在执行delete from table 删除表全部数据\n或者带条件删除某个区间时，触发器只能记录到最后一条数据，为解决这个问题，需要重构触发器，以下是我的方案：\n当delete操作发生后，我们判断数据库中是否存在 {表名_delete_tmp} 这样一个表，如果存在则将其删掉，之后使用\nselect pknames into {表名_delete_tmp} from deleted,将delete表中的主键值复制到  {表名_delete_tmp}，之后再\n遍历 {表名_delete_tmp} ，依次获取对应的主键值，再存入events表。\n特别注意，在inserted和deleted表中不允许使用text,ntext和image这三个字段，意味着如果表中存在这三个字段中的一个\n或多个字段作为主键时，这个触发器就会无法创建，建议使用varchar（max）代替text和ntext，使用varbinary代替image，微软建议\n尽量不使用text,ntext和image这三个字段。\n\n```\ncreate trigger triggerNameForDelete\non dbo.teclan\nafter DELETE\nas\nDECLARE\n@i int set @i=(select count(table_name) from information_schema.tables where table_type='base table' and table_schema='dbo' and table_name='teclan_delete_tmp')\nif @i=1\n  drop table teclan_delete_tmp ;\nselect id,name into teclan_delete_tmp from deleted;\ndeclare @rows int  \ndeclare @id varchar(500)\ndeclare @name varchar(500)\nset @rows=(select count(*) from teclan_delete_tmp)\nwhile @rows>0\nbegin  \n  set @id=(select top 1 id from teclan_delete_tmp)  \n  set @name=(select top 1 name from teclan_delete_tmp)  \n  insert into dbo.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action)\n  values ('testdb','teclan','id,name','null',@id+','+@name,'DELETE');\n  delete from teclan_delete_tmp where  id=@id and  name=@name  \n  set @rows=(select count(*) from teclan_delete_tmp)\nend;\ndrop table teclan_delete_tmp\n```\n### 删除触发器\n```\ndrop trigger triggerName;#triggerName是要删除的触发器名\n```\n\n## 存储过程实例\n### 创建100个表\n```\nDECLARE @i int\nDECLARE @j int\nDECLARE @table_name varchar(1000)\nSET   @i = 1\nSET   @j = 101 WHILE @i < @j BEGIN\nSET   @table_name = 'users' + rtrim(@i) DECLARE @sqlsource_create varchar(1000)\nSET   @sqlsource_create = 'create table[dbo].' + @table_name + '(\n\t[id] [int] IDENTITY (1, 1) NOT NULL PRIMARY KEY,\n\t[content] [varchar] (2000) COLLATE Chinese_PRC_CI_AS NULL ,\n\t) ON [PRIMARY]'\nEXEC (@sqlsource_create)\nSET   @i = @i + 1\nEND\n```\n### 删除100个表\n```\ndeclare @i int\ndeclare @j int\ndeclare @table_name varchar(1000)\nset @i = 1\nset @j =101\nwhile @i<@j\nbegin\nset @table_name='users'+rtrim(@i)\ndeclare @sqlsource_drop varchar(1000)\nset @sqlsource_drop='drop table[dbo].'+@table_name\nexec(@sqlsource_drop)\nset @i=@i+1\nend\n```\n### 往100个表添加数据，每个表500条记录\n```\ndeclare @i int\ndeclare @j int\ndeclare @k int\ndeclare @table_name varchar(1000)\ndeclare @sqlstr varchar(2000)\nset @i = 1\nset @j =101\nset @sqlstr = '''昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅'''\nwhile @i<@j\nbegin\nset @table_name='users'+rtrim(@i)\nprint @table_name\ndeclare @sqlsource_insert varchar(2000)\nset @k =0\nwhile (@k<500)\nbegin\nset @sqlsource_insert='insert into dbo.'+ @table_name +'(content)values('+ @sqlstr+ ')'\nprint @sqlsource_insert\nexec(@sqlsource_insert)\nset @k=@k+1\nend\nset @i=@i+1\nend\n```\n### 删除100个表里面的所有数据\n```\ndeclare @i int\ndeclare @j int\ndeclare @table_name varchar(1000)\nset @i = 1\nset @j =101\nwhile @i<@j\nbegin\nset @table_name='users'+rtrim(@i)\ndeclare @sqlsource_drop varchar(1000)\nset @sqlsource_drop='delete from [dbo].'+@table_name\nexec(@sqlsource_drop)\nset @i=@i+1\nend\n```\n\n## 查询各个表的记录数\n```\nselect  b.name as tablename ,  \n        a.rowcnt as datacount  \nfrom    sysindexes a ,  \n        sysobjects b  \nwhere   a.id = b.id  \n        and a.indid < 2  \n        and objectproperty(b.id, 'IsMSShipped') = 0   \norder by tablename asc;\n```\n\n\n# sqlserver2k+\n> table_catalog 对应的数据库名，object_id('%s') 对应参数是表名，\n除以下特别指定的，其他SQL参考sqlserver2k。\n\n## Jdbc驱动\n```\ncom.microsoft.sqlserver.jdbc.SQLServerDriver\n```\n## url\n```\njdbc:sqlserver://%s:%d;DatabaseName=%s\n```\n## 获取所有表\n```\nselect name from sys.tables;\n```\n## 查询主键\n```\nselect name from syscolumns where id=object_id('%s') and colid in(select keyno from sysindexkeys where id=object_id('%s'));\n```\n或\n```\nSELECT a.column_name FROM information_schema.key_column_usage a\nINNER JOIN information_schema.table_constraints b\nON (a.constraint_name = b.constraint_name)\nWHERE a.table_schema = '%s' AND b.table_schema = '%s'\nAND b.table_catalog = '%s' AND b.table_name = '%s'\nAND b.constraint_type = 'PRIMARY KEY';\n```\n## 查询触发器是否存在\n```\n# b.name 对应触发器名，a.name 对应schema\nSELECT b.name FROM sys.schemas a INNER JOIN sys.objects b ON a.schema_id=b.schema_id WHERE b.type='TR' AND b.name='%s' AND a.name='%s';\n```\n## 查询外键\n```\n# oSub.name 对应表名\nselect oSub.name as table_name, fk.name as constraint_name, SubCol.name as column_name, oMain.name as r_table_name,\nMainCol.name as r_column_name from sys.foreign_keys fk\njoin sys.all_objects oSub  on (fk.parent_object_id = oSub.object_id)\njoin sys.all_objects oMain on (fk.referenced_object_id = oMain.object_id)\njoin sys.foreign_key_columns fkCols  on (fk.object_id = fkCols.constraint_object_id)\njoin sys.columns SubCol ON (oSub.object_id = SubCol.object_id and fkCols.parent_column_id = SubCol.column_id)\njoin sys.columns MainCol on (oMain.object_id = MainCol.object_id and fkCols.referenced_column_id = MainCol.column_id)\nwhere oSub.name='%s';\n```\n## 查询字段属性\n```\nselect  schemas.name as schema_name ,o.name as table_name, c.name as column_name, t.name as data_type \nfrom syscolumns c, sysobjects o, systypes t,sys.tables tables,sys.schemas  schemas where o.name = '%s' \nand schemas.name='%s' and c.id = o.id and c.xtype = t.xtype and tables.object_id = c.id and tables.schema_id =schemas.schema_id\n# 其中第一个参数为表名，第二个参数为模式名\n```\n# DB2\n## Jdbc驱动\n```\nCOM.ibm.db2os390.sqlj.jdbc.DB2SQLJDriver\n```\n## url\n```\njdbc:db2://%s:%s/%s\n```\n## 查询主键\n```\nSELECT a.colname FROM SYSCAT.keycoluse AS a INNER JOIN SYSCAT.tabconst AS b ON (a.constname = b.constname)\nWHERE a.tabschema = '%s' AND b.tabschema = '%s' AND a.tabname = '%s' AND b.tabname = '%s' AND b.type = 'P';\n```\n## 查询字段类型\n```\nselect column_name, data_type from sysibm.columns where table_name = upper('%s')；\n```\n## 获取所有表\n```\n# creator 对应schema\nSELECT name FROM SYSIBM.SYSTABLES WHERE creator='%s' ORDER BY name；\n```\n## 查询表是否存在\n```\n# tabschema 对应schema,tabname 对应表名\nSELECT tabname FROM SYSCAT.tables WHERE tabschema='%s' AND tabname='%s';\n```\n## 创建表\n```\nCREATE TABLE %s.%s\n(\n  id INTEGER  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1, NO CACHE ) ,#严格自增字段\ndbName VARCHAR(20),\ntableName VARCHAR(20),  \npkNames VARCHAR(255),\nnewPkValues VARCHAR(255),\noldPkValues VARCHAR(255),\naction VARCHAR(20),\nPRIMARY KEY (id)\n);\n```\n## 查询外键\n```\nselect r.reftabname as table_name, k.colname as column_name, r.constname as constraint_name\nfrom syscat.references as r,syscat.keycoluse as k\nwhere r.tabname=k.tabname and k.constname=r.constname and r.tanschema=’%s’ and r.reftabname='%s';\n```\n## 关闭外键约束\n```\nalter table %s alter foreign key %s not enforced；#最后一个参数是某个外键约束\n```\n## 启用外键约束\n```\nalter table %s alter foreign key %s enforced；#最后一个参数是某个外键约束\n```\n## 查询触发器是否存在\n```\n# trigschema 对应 schema, trigevent 对应触发器名\nSELECT trigname FROM SYSCAT.triggers WHERE trigschema='%s' AND trigname='%s' AND trigevent ='%s'；\n```\n## 触发器\n> DB2 触发器名字不能超过18个字符,触发器SQL最后的 “END” 后面不加分号，activejdbc中加了分号会报错，其他工具请\n自己测试调整。特别注意：\n1:如果表中自增列使用的是 GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1,\n  NO CACHE)声明,则数据库将严格保证该列满足自增约束(唯一性),用户不可指定该列的值,无法插入数据。\n2:如果表中自增列使用的是 GENERATED BY DEFAULT AS IDENTITY (START WITH 0, INCREMENT\n  BY 1, NO CACHE)声明,则允许指定此列的值。\n\n设5.7创建的表为EVENTS，且有表teclan如下（DEV为schema）：\n```\ncreate table teclan\n(\nid bigint,\nname integer,\nage bigint,\nsex clob\n);\nalter table teclan add primary key(id,name);\n```\n### insert触发器\n```\nCREATE TRIGGER triggerNameForInsert\nAFTER INSERT ON DEV.TECLAN\nREFERENCING  NEW AS N  FOR EACH ROW MODE DB2SQL\nBEGIN ATOMIC\nINSERT INTO DEV.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues, action) VALUES ('DB2', 'TECLAN', 'ID,NAME', CHAR(N.ID)||','||CHAR(N.NAME), null,'INSERT');\nEND\n```\n### update触发器\n```\nCREATE TRIGGER triggerNameForUpdatet\nAFTER UPDATE ON DEV.TECLAN\nREFERENCING  NEW AS N OLD AS O  \nFOR EACH ROW MODE DB2SQL BEGIN ATOMIC\nINSERT INTO DEV.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues, action) VALUES ('DB2', 'TECLAN', 'ID,NAME', CHAR(N.ID)||','||CHAR(N.NAME), CHAR(O.ID)||','||CHAR(O.NAME),'UPDATE');\nEND\n```\n### delete触发器\n```\nCREATE TRIGGER triggerNameForDelete\nAFTER DELETE ON DEV.TECLAN\nREFERENCING  OLD AS O  FOR EACH ROW MODE DB2SQL\nBEGIN ATOMIC INSERT INTO DEV.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues, action) VALUES ('DB2', 'TECLAN', 'ID,NAME', null, CHAR(O.ID)||','||CHAR(O.NAME),'DELETE');\nEND\n```\n### 删除触发器\n```\ndrop  trigger triggerName;#triggerName 为要删除的触发器名\n```\n## 存储过程实例\n>  需要修改数据库的日志文件大小和数量，然后重启数据库，才能删除大量数据，步骤如下：\ndb2cmd\ndb2 get db cfg for cnaps2\n此命令可以查看当前数据库的日志文件大小（LOGFILSIZ）,主日志数（LOGPRIMARY）,辅日志数（LOGSECOND）。\ndb2 update db cfg for cnaps2 using LOGPRIMARY 50\n修改主日志数为50\ndb2 update db cfg for cnaps2 using LOGSECOND 20\n修改辅日志数为20\ndb2 update db cfg for cnaps2 using LOGFILSIZ 10240\n修改日志大小为10240\n此时，活动日志空间的最大容量为（20 + 50） * 10240 * 4KB\n停止数据库：db2stop.这时会报SQL1025N  未停止数据库，因为数据库仍是活动的。\n执行:db2 list application 查看目前数据库中活动的链接\ndb2 force application all 杀掉所有活动的链接，此时可以顺利的停止数据库了。\n重新启动数据库：db2start\ndb2 get db cfg for cnaps2 查看当前数据库日志配置，是否为上面修改后的数字。\nDB2下的存储过程均放在独立的文件中，调用命令形如（其中p0()是example.sql中定义的存储过程）\nc:\\Program Files\\IBM\\SQLLIB\\BIN>db2 connect to TESTDB\ndb2 -td@ -f example.sql\ndb2 call p0();\n\n\n### 创建100个表\n```\ncreate procedure p0()\nlanguage sql\nbegin atomic\ndeclare i integer;\ndeclare sqlstr varchar(2000);\ndeclare st statement;\nset i=1;\nwhile i<=100 do\n  set sqlstr='create table ADMINISTRATOR.articles'||char(i)||' (id  integer not null ,content varchar(2000), primary key(id) )';\n  set i=i+1;\nprepare st from sqlstr;\nexecute st;\nend while;\nend@\n```\n### 删除100个表\n```\ncreate procedure p3()\nlanguage sql\nbegin atomic\ndeclare i integer;\ndeclare sqlstr varchar(2000);\ndeclare st statement;\nset i=1;\nwhile i<=100 do\n  set sqlstr='drop table ADMINISTRATOR.articles'||char(i)||'';\n  set i=i+1;\nprepare st from sqlstr;\nexecute st;\nend while;\nend@\n```\n### 往100个表中添加数据，每个表500条记录\n```\ncreate procedure p1()\nlanguage sql\nbegin atomic\ndeclare i integer;\ndeclare j integer;\ndeclare sqlstr varchar(2000);\ndeclare st statement;\nset j=1;\nwhile j<=100 do\n  set i=1;\n  while i<=500 do\n    set sqlstr='insert into ADMINISTRATOR.articles'||char(j)||' values ('||char(i)||',''昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召\n开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽\n咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学\n良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎\n都是实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来\n，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有\n着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅'')';\n    set i=i+1;\n    prepare st from sqlstr;\n    execute st;\n  end while;\nset j=j+1;\nend while;\nend@\n```\n### 删除100个表里面的所有数据\n```\ncreate procedure p2()\nlanguage sql\nbegin atomic\ndeclare i integer;\ndeclare sqlstr varchar(2000);\ndeclare st statement;\nset i=1;\nwhile i<=100 do\n  set sqlstr='delete from ADMINISTRATOR.articles'||char(i)||'';\n  set i=i+1;\nprepare st from sqlstr;\nexecute st;\nend while;\nend@\n```\n# mysql\n## Jdbc驱动\n```\ncom.mysql.jdbc.Driver\n```\n## url\n```\njdbc:mysql://%s:%d/%s\n```\n## 获取所有表\n```\nselect table_name from information_schema.tables where table_schema  ='%s';\n```\n## 查询表是否存在\n```\nSELECT TABLE_NAME AS name FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='%s';\n```\n## 查询表字段类型\n```\nselect column_name,data_type from information_schema.columns where table_schema='%s' and table_name='%s';\n```\n## 查询主键\n```\nselect concat(c.column_name) as 'column_name' from information_schema.table_constraints as t,\ninformation_schema.key_column_usage as c where t.table_name=c.table_name and t.table_name='%s'\nand t.table_schema='%s'；\n```\n## 创建表\n```\nCREATE TABLE %s.%s\n(\n  id         BIGINT        NOT NULL PRIMARY KEY     AUTO_INCREMENT,#自增字段\n  dbName     VARCHAR(30),\n  tableName  VARCHAR(30),\n  pkNames    VARCHAR(2000),\n  newPkValues   VARCHAR(2000),\n  oldPkValues   VARCHAR(2000),\n  action     VARCHAR(20)\n  );\n```\n## 关闭外键约束\n```\nset foreign_key_checks=0;\n```\n## 启用外键约束\n```\nset foreign_key_checks=1;\n```\n## 查询触发器是否存在\n```\n# EVENT_OBJECT_TABLE 对应表名\nSELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS WHERE TRIGGER_SCHEMA='%s'\nAND EVENT_OBJECT_TABLE='%s' AND TRIGGER_NAME='%s'\n```\n## 触发器\n设6.7创建的表为events,且有表teclan如下,schema与数据库名均为testdb:\n```\ncreate table teclan\n(\nid int,\nname varchar(10),\nage int,\nsex varchar(10)  \n);\nalter table teclan add primary key(id,name);\n```\n### insert触发器\n```\nCREATE TRIGGER triggerNameForInsert\nAFTER INSERT ON testdb.teclan\nFOR EACH ROW\nINSERT INTO testdb.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action) VALUES('testdb','teclan','id,name',(concat_ws(',',new.id,new.name)),(null),'INSERT');\n```\n### update触发器\n```\nCREATE TRIGGER triggerNameForUpdatet\nAFTER UPDATE ON testdb.teclan\nFOR EACH ROW\nINSERT INTO testdb.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action) VALUES('testdb','teclan','id,name',(concat_ws(',',new.id,new.name)),(concat_ws(',',old.id,old.name)),'UPDATE');\n```\n### delete触发器\n```\nCREATE TRIGGER triggerNameForDelete\nAFTER DELETE ON testdb.teclan\nFOR EACH ROW\nINSERT INTO testdb.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action) VALUES('testdb','teclan','id,name',(null),(concat_ws(',',old.id,old.name)),'DELETE');\n```\n### 删除触发器\n```\ndrop  trigger triggerName;#triggerName为要删除的触发器\n```\n## 存储过程实例\n### 创建100个表\n```\ndelimiter //\nCREATE procedure create_100table()\nBEGIN\nDECLARE `@i` int(11);\nDECLARE `@sqlstr` varchar(2560);\nSET `@i`=1;\nWHILE `@i` < 101 DO\nSET @sqlstr = CONCAT(\n\"CREATE TABLE testdb.articles\",\n`@i`,\n\"(\n`id` int NOT NULL,\n`content` varchar(2000),\nPRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\"\n);\nprepare stmt from @sqlstr;\nexecute stmt;\nSET `@i` = `@i` + 1;\nEND WHILE;\nEND;\ncall create_100table();\ndrop procedure create_100table;\n//\n```\n### 删除100个表\n```\ndelimiter //\nCREATE procedure delete100()\nBEGIN\nDECLARE `@i` int(11);\nDECLARE `@sqlstr` varchar(2560);\nSET `@i`=1;\nWHILE `@i` < 101 DO\nSET @sqlstr = CONCAT(\"drop table testdb.articles\",`@i`);\nprepare stmt from @sqlstr;\nexecute stmt;\nSET `@i` = `@i` + 1;\nEND WHILE;\nEND;\ncall delete100();\ndrop procedure delete100;\n//\n```\n### 往100个表添加数据，每个表500条记录\n```\ndelimiter //\ndrop procedure if exists insertdata;\nCREATE procedure insertdata()\nBEGIN\nDECLARE `@i` int(11);\nDECLARE `@j` int(11);\nDECLARE `@sqlstr` varchar(2560);\nSET `@i`= 0;\nWHILE `@i` < 100 DO\nSET `@i` = `@i` + 1;\nSET `@j`= 1;\nWHILE `@j` < 501 DO\nSET @sqlstr = CONCAT(\"insert into testdb.articles\",`@i`,\"(id,content)values(\",`@j`,\",'昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅')\");\nprepare stmt from @sqlstr;\nexecute stmt;\nSET `@j` = `@j` + 1;\nEND WHILE;\nEND WHILE;\nEND;\ncall insertdata();\n//\n```\n### 删除100个表里面的所有数据\n```\ndelimiter //\nCREATE procedure delete50000()\nBEGIN\nDECLARE `@i` int(11);\nDECLARE `@sqlstr` varchar(2560);\nSET `@i`=1;\nWHILE `@i` < 101 DO\nSET @sqlstr = CONCAT(\"delete from testdb.articles\",`@i`);\nprepare stmt from @sqlstr;\nexecute stmt;\nSET `@i` = `@i` + 1;\nEND WHILE;\nEND;\ncall delete50000();\ndrop procedure delete50000;\n//\n```\n# kingbase\n## Jdbc驱动\n```\njdbc:kingbase://%s:%d/%s\n```\n## url\n```\ncom.kingbase.Driver\n```\n## 获取所有表\n```\nSELECT table_name FROM information_schema.tables WHERE table_schema='%s';\n```\n## 查询表是否存在\n```\nSELECT table_name FROM information_schema.tables WHERE table_schema='%s' AND table_name='%s';\n```\n## 查询表字段类型\n```\nselect column_name, data_type from information_schema.columns where table_schema = '%s' and table_name = '%s'\n```\n## 创建序列\n```\nCREATE SEQUENCE %s.%s START 1 INCREMENT 1;\n```\n## 删除序列\n```\ndrop SEQUENCE %s.%s;\n```\n## 创建表\n```\nCREATE TABLE %s.%s\n(\n  id INT DEFAULT NEXTVAL('%s.%s'),\n  dbName VARCHAR(20),\n  tableName VARCHAR(20),\n  pkNames VARCHAR(255),\n  newPkValues VARCHAR(255),\n  oldPkValues VARCHAR(255),\n  action VARCHAR(20),\n  PRIMARY KEY(id)\n);\n```\n## 查询主键\n```\n# table_catalog 对应数据库名\nSELECT a.column_name FROM information_schema.key_column_usage a\nINNER JOIN information_schema.table_constraints b\nON (a.constraint_name = b.constraint_name)\nWHERE a.table_schema = '%s' AND b.table_schema = '%s'\nAND b.table_catalog = '%s' AND b.table_name = '%s'\nAND b.constraint_type = 'PRIMARY KEY';\n```\n## 查询外键\n```\n# nspname 对应schema\nselect sys_class.relname as table_name,sys_attribute.attname as column name,fk.conname as\nconstraint_name form (select unnest(sys_constraint.conkey),conname,sys_constraint.conrelid,\nsys_constraint.confrelid form sys_constraint,sys_namespace where sys_constraint.connamespace\n=sys_namespace.oid and sys_namespace.nspname=’%s’ and contype=’f’ )fk,sys_attribute,sys_class,all_constraints\nwhere fk.unnest=sys_attribute.attnum and fk.conrelid=sys_attribute.attrelid and\nfk.confrelid=sys_class.oid and fk.conname=all_constraints.constaint_name and sys_class.relname='%s';\n```\n## 关闭外键约束\n```\nalter table %S alter foreign key %s not enforced;#最后一个参数为某个外键约束\n```\n## 启用外键约束\n```\nalter table %s alter foreign key %s enforced;\n```\n## 触发器\n设7.8创建的表为events,且有表teclan如下(\"PUBLIC\" 为schema,\"TECLAN\" 为表名)：\n```\ncreate table teclan\n(\nid int,\nname varchar(10),\nage int,\nsex varchar(10)\n);\nalter table teclan add primay key(id,name);\n```\n### insert触发器\n```\nCREATE OR REPLACE TRIGGER triggerNameForInsert\nAFTER INSERT ON PUBLIC.\"TECLAN\"\nFOR EACH ROW AS\nBEGIN\nINSERT INTO PUBLIC.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues,action)\nVALUES ('TECLAN','TECLAN','ID,NAME',(NEW.\"ID\"||','||NEW.\"NAME\"),(null),'INSERT');\nEND;\n```\n### update触发器\n```\nCREATE OR REPLACE TRIGGER PIXIU_SYNC_TECLAN_UPDATE\nAFTER UPDATE ON PUBLIC.\"TECLAN\"\nFOR EACH ROW AS\nBEGIN\nINSERT INTO PUBLIC.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues,action)\nVALUES ('TECLAN','TECLAN','ID,NAME',(NEW.\"ID\"||','||NEW.\"NAME\"),(OLD.\"ID\"||','||OLD.\"NAME\"),'UPDATE');\nEND;\n```\n### delete触发器\n```\nCREATE OR REPLACE TRIGGER PIXIU_SYNC_TECLAN_DELETE\nAFTER DELETE ON PUBLIC.\"TECLAN\"\nFOR EACH ROW AS\nBEGIN I\nNSERT INTO PUBLIC.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues,action)\nVALUES ('TECLAN','TECLAN','ID,NAME',(null),(OLD.\"ID\"||','||OLD.\"NAME\"),'DELETE');\nEND;\n```\n### 删除触发器\n```\ndrop trigger triggerName; #triggerName 为指定删除的触发器\n```\n## 存储过程实例\n### 创建100个表\n```\ncreate or replace procedure p0()\nas\ndeclare\n  i integer;\nbegin\n  for i in 1..100 loop\n      Execute immediate 'create TABLE \"PUBLIC\".\"articles'||i||'\"\n       (\"id\"   integer,\n        \"content\"  varchar(2000),\n        primary key(\"id\"))';\n   end loop;\n   end;\ncall p0;\n```\n### 删除100个表\n```\ncreate or replace procedure p0()\nas\ndeclare\n  i integer;\nbegin\n  for i in 1..100 loop\n      Execute immediate 'drop TABLE \"PUBLIC\".\"articles'||i||'\"';\n   end loop;\n   end;\ncall p0;\n```\n### 往100个表添加数据，每个表500条记录\n```\ncreate or replace procedure insert_articles() as\n declare i integer :=1;\n j integer :=1;\n begin\nfor i in 1..100 loop\n  for j in 1..500 loop\n  execute immediate'insert into \"PUBLIC\".\"articles'||i||'\" values('||j||',''昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅'')';\nend loop;\nend loop;\nend;\ncall insert_articles;\n```\n### 删除100个表里面的所有数据\n```\ncreate or replace procedure p0()\nas\ndeclare\n  i integer;\nbegin\n  for i in 1..100 loop\n      Execute immediate 'delete from \"PUBLIC\".\"articles'||i||'\"';\n   end loop;\n   end;\ncall p0;\n```\n","source":"_posts/常见数据库操作SQL.md","raw":"---\ntitle: 常见数据库操作SQL\ndate: 2016-07-15 13:48:40\ntags: [Oracle,达梦,sqlserver2k,sqlserver2k+,DB2,mysql,kingbase]\n---\n\n> 操作表，序列，触发器等时最好都加上schema修饰，以下部分sql中为清晰起见，省略schema修饰。\n  以下 triggerNameForInsert，triggerNameForUpdatet,triggerNameForDelete 均指代\n  触发器名，并且包含schema修饰。\n\n# Oracle\n>owner 是对应的schema，要大写,url中的参数依次是ip,端口，数据库名，以下所有SQL是根据本人用到的做的记录，需要时请自行调整更改。\n\n## Jdbc驱动\n```\noracle.jdbc.driver.OracleDriver\n```\n## url\n```\njdbc:oracle:thin:@%s:%d:%s\n```\n## 查询表主键\n```\nSELECT column_name FROM user_cons_columns WHERE constraint_name = (\nSELECT constraint_name FROM user_constraints WHERE table_name= '%s'\nAND constraint_type ='P')；\n```\n## 查询表字段类型\n```\nselect column_name, data_type from all_tab_columns where owner = '%s' and table_name = '%s'；\n ```\n## 获取所有表\n```\nselect table_name from all_tables where owner=upper('%s')；\n```\n## 查询表是否存在\n```\nSELECT 1 FROM user_tables WHERE table_name='%s'；\n```\n## 查询序列是否存在\n```\nselect SEQUENCE_NAME from user_sequences where SEQUENCE_NAME = '%s'；\n```\n## 创建序列\n```\nCREATE SEQUENCE \\\"%s\\\".\\\"%s\\\" INCREMENT BY 1 START WITH 0 MINVALUE 0 NOMAXVALUE；\n```\n## 删除序列\n```\nDROP SEQUENCE %s.%s；\n```\n## 创建表\n```\nCREATE TABLE %s.%s (\n  id              NUMBER          NOT NULL PRIMARY KEY,\n  dbName          VARCHAR2(50)    NOT NULL,\n  tableName       VARCHAR2(50)    NOT NULL,\n  pkNames         VARCHAR2(2000)  NOT NULL,\n  newPkValues     VARCHAR2(2000),\n  oldPkValues     VARCHAR2(2000),\n  action          VARCHAR2(20)    NOT NULL\n  )；\n```\n## 查询表上是否存在某个触发器\n```\nSELECT trigger_name FROM all_triggers WHERE owner='%s' AND table_name='%s' AND trigger_name='%s'；\n```\n## 查询外键\n```\nselect ucc.constraint_name from user_cons_columns ucc\njoin user_constraints uc on ucc.owner=uc.owner and ucc.constraint_name= uc.constraint_name\njoin user_constraints uc_pk ON uc.r_owner= uc_pk.owner and uc.r_constraint_name=uc_pk.constraint_name\nwhere uc.constraint_type='R' and ucc.table_name='%s'；\n```\n## 关闭外键约束\n```\nalter table %s.%s disable constraint %s；#最后一个参数是某个外键约束\n```\n## 启用外键约束\n```\nalter table %s.%s enable constraint %s；#最后一个参数是某个外键约束\n```\n\n## 触发器\n设1.10创建的表记为 events,用来记录没一条记录的变化，events_seq是存在的一个序列，设有表teclan\n```\ncreate table teclan\n(\n  id number,\n  name varchar(10),\n  age number,\n  sex varchar(10)\n);\nalter table taclan add  primary key(id,name);\n```\n在表teclan上创建触发器，用来记录所有记录的变化，信息存到events表。\n### insert触发器\n```\nCREATE OR REPLACE TRIGGER triggerNameForInsert  #triggerNameForInsert为触发器名，自定义\nAFTER INSERT ON teclan\nFOR EACH ROW\nBEGIN\nINSERT INTO events VALUES (events_seq.nextval ,'xe','teclan','ID,NAME',(:NEW.\"ID\"||','||:NEW.\"NAME\"),\n(:OLD.\"ID\"||','||:OLD.\"NAME\"),'INSERT');\nEND;\n```\n### update触发器\n```\nCREATE OR REPLACE TRIGGER triggerNameForUpdatet\nAFTER UPDATE ON teclan\nFOR EACH ROW\nBEGIN\nINSERT INTO events VALUES (events_seq.nextval ,'xe','teclan','ID,NAME',(:NEW.\"ID\"||','||:NEW.\"NAME\"),\n(:OLD.\"ID\"||','||:OLD.\"NAME\"),'UPDATE');\nEND;\n```\n### delete触发器\n```\nCREATE OR REPLACE TRIGGER triggerNameForDelete\nAFTER DELETE ON teclan\nFOR EACH ROW\nBEGIN INSERT INTO events VALUES (events_seq.nextval ,'xe','teclan','ID,NAME',(:NEW.\"ID\"||','||:NEW.\"NAME\"),\n(:OLD.\"ID\"||','||:OLD.\"NAME\"),'DELETE');\nEND;\n```\n### 删除触发器\n```\ndrop trigger triggerName; #triggerName为指定要删除的触发器\n```\n## 查询数据库中各个表的记录数\n### 创建函数\n```\ncreate or replace function count_rows(table_name in varchar2,owner in varchar2 default null)\nreturn number\nauthid current_user\nIS\n   num_rows number;\n   stmt varchar2(2000);\nbegin\n   if owner is null then\n      stmt := 'select count(*) from \"'||table_name||'\"';\n   else\n      stmt := 'select count(*) from \"'||owner||'\".\"'||table_name||'\"';\n   end if;\n   execute immediate stmt into num_rows;\n   return num_rows;\nend;\n```\n### 查询\n```\nselect table_name, count_rows(table_name)  nrows from user_tables order by nrows desc;\n```\n## 存储过程实例\n### 创建100个表\n```\ndeclare i\ninteger :=1;\nbegin\n  loop\n    if i < 101 then\n      Execute immediate'create TABLE'||'\"USER1\".\"articles'||i||'\"'||\n       '(\"id\"       NUMBER(*,0),\n         \"content\"  clob,\n       PRIMARY KEY (\"id\"))';\n       i:= i+1;\n     else exit;\n   end if;\n  end loop;\nend;\n```\n### 删除100个表\n```\ndeclare i\ninteger :=1;\nbegin\n  loop\n    if i < 101 then\n      Execute immediate'drop table \"USER1\".\"articles'||i||'\"';\n       i:= i+1;\n     else exit;\n    end if;\n  end loop;\nend;\n```\n### 往100个表插入数据，每个表500条记录\n```\ndeclare\ni integer :=1;\nj integer :=1;\nsqlstr varchar(2000);\nbegin\n  for i in 1..100 loop\n    for j in 1..500 loop\n      sqlstr := 'insert into \"USER1\".\"users'||TO_CHAR(i)||'\" values('||j||',''昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅'')';\n      execute immediate sqlstr;\n    end loop;\n   end loop;\n   commit;\nend;\n```\n### 删除100个里面的所有数据\n```\ndeclare i\ninteger :=1;\nbegin\n  loop\n    if i < 101 then\n      Execute immediate'delete from \"USER1\".\"users'||i||'\"';\n       i:= i+1;\n     else exit;\n    end if;\n  end loop;\n  commit;\nend;\n```\n\n# 达梦数据库\n  除以下特别指出外，其余参考Oracle\n\n  > sysobjects.object_name 为库模式，user_constraints.table_name 为表名\n\n## 查询主键\n```\nSELECT column_name FROM user_cons_columns WHERE constraint_name = (select sysobjects.name from\nsysobjects ,all_objects,user_constraints where object_type='SCH' and object_name = '%s'\nand sysobjects.schid = all_objects.object_id  and type$='TABOBJ' and sysobjects.subtype$='CONS'\nand user_constraints.table_name= '%s' AND user_constraints.constraint_type ='P'\nand user_constraints.constraint_name = sysobjects.name)\n```\n## 查询所有表\n```\nselect sysobjects.name from sysobjects,all_objects where object_type='SCH' and object_name = '%s'\nand sysobjects.schid = all_objects.object_id and sysobjects.type$='SCHOBJ' and sysobjects.subtype$='UTAB'\n```\n## 存储过程实例\n### 创建100个表\n```\ndeclare sqls varchar;\nbegin\n  for i in 1..100 loop\n       set sqls = 'CREATE TABLE \"TESTER\".\"users'||TO_CHAR(i)||'\"\n       (\"id\"  INTEGER NOT NULL,\n       \"content\"  VARCHAR2(2000),\n       NOT CLUSTER PRIMARY KEY(\"id\")) STORAGE(ON \"MAIN\", CLUSTERBTR)';\n       EXECUTE IMMEDIATE sqls;\n  end loop;\n  commit;\n end;\n```\n### 删除100个表\n```\ndeclare sqls varchar;\nbegin\n for i in 1..100 loop\n       set sqls = 'drop TABLE \"TESTER\".\"users'||TO_CHAR(i)||'\"';\n       EXECUTE IMMEDIATE sqls;\n end loop;\n       commit;\n end;\n```\n### 往100个表添加数据，每个表500条\n```\nDECLARE\ni integer :=1;\nj integer :=1;\nsqlstr varchar;\ntextstr varchar := '这本书本身的内容并不甘甜,因为里头夹杂着太多不忍与亲身体验的辛酸。苦苦的味道,为这本纪录中国千年文化的书,多写了一道滋味。只有书籍能把个高贵的生命早已遗逝的信号传递给你，只有书籍能把一切美好和智慧对比着丑陋与愚蠢呈现给你。我带着崇敬的心情翻开了它，跟随余秋雨的脚步，去重新认识这些古老深厚的文明，没有肤浅的欢笑，有的只是与作者一起感慨，一起深思。《风雨天一阁》写了一座经历数百年风雨沧桑的普通的楼阁，被一代代人世代保护着，却终被强盗偷窃所骚扰，成为“一种极端艰难，又极其悲怆的文化奇迹”。天一阁承载的文明与历史太多太多。天一阁的命运正是当时中华文化的命运，中华的许多许多文化宝藏在静静地经历数百年甚至数千年的风雨洗礼之后，竟未为人所敬，不为人所珍，最终落入虎口。而当其几近灭亡时，人们才恍然醒悟，慌忙中搜寻回几粒残碎不堪文化碎片，叹息不已，可惜已晚了。《苏东坡突围》使我明白才华横溢、豪放高达的一代文豪苏东坡被一群奸诈卑鄙﹑强词夺理的小人诬陷时的无奈与痛苦，被排挤，被批判，被嘲笑，被流放，可他却并未丧失继续努力生活、前进的勇气。我小时候曾为苏轼美妙清澈的水调歌头所倾心，为他“会挽雕弓如满月，西北望射天狼”的豪情壮志所震撼。';\nBEGIN\n  FOR i in 1..100 LOOP\n    FOR j in 1..500 LOOP\n      set sqlstr := 'insert into \"TESTER\".\"users'||i||'\" values('||j||', '''||textstr||''')';\n      execute immediate sqlstr;\n      --insert into TESTER.\"users1\" values (1,'这本书本身的内容并不甘甜');\n  END LOOP;\n END LOOP;\nEND;\n```\n### 删除100个表里面的所有数据\n```\ndeclare sqls varchar;\nbegin\n for i in 1..100 loop\n       set sqls = 'delete from \"TESTER\".\"users'||TO_CHAR(i)||'\"';\n       EXECUTE IMMEDIATE sqls;\n end loop;\n commit;\n end;\n```\n\n\n# Sqlserver2k\n> o.name 指定表名,sqlserver默认的schema是dbo\n\n## Jdbc驱动\n```\ncom.microsoft.jdbc.sqlserver.SQLServerDriver\n```\n## url\n```\njdbc:microsoft:sqlserver://%s:%d;DatabaseName=%s\n```\n## 查询主键\n```\nSELECT c.name AS name FROM sysobjects o INNER JOIN sysindexes x ON o.id = x.id INNER\nJOIN syscolumns c ON o.id = c.id INNER\nJOIN sysindexkeys xk ON o.id = xk.id\nAND x.indid = xk.indid AND c.colid = xk.colid\nAND x.keycnt >= xk.keyno WHERE o.name = '%s' AND (o.type IN ('U')) AND (x.status & 32 = 0)\nAND (CONVERT(bit, (x.status & 0x800) / 0x800) = 1);\n```\n## 查询表字段类型\n```\nselect users.name as schema_name,o.name as table_name, c.name as column_name, t.name as data_type \nfrom syscolumns c, sysobjects o, systypes t,dbo.sysusers users where o.name = '%s' and users.name = '%s' and users.uid =o.uid and c.id = o.id and c.xtype = t.xtype;\n# 其中，第一个参数为表名，第二个参数为模式名（用户名）\n```\n## 获取所有表\n```\nselect table_name from information_schema.tables where table_type='base table' and table_schema='%s'\";\n```\n## 查询表是否存在\n```\nSELECT name FROM dbo.sysobjects WHERE name='%s'；\n```\n## 创建表\n```\nCREATE TABLE %s.%s\n(\nid INTEGER IDENTITY(1,1) NOT NULL PRIMARY KEY, #自增字段\ndbName     VARCHAR(30),\ntableName  VARCHAR(30),\npkNames    VARCHAR(2000),\nnewPkValues   VARCHAR(2000),\noldPkValues   VARCHAR(2000),\naction     VARCHAR(20)\n)；\n```\n## 查询外键\n```\nselect distinct a.table_name, b.column_name,b.constraint_name,object_name(rkeyid) r_table_name  \nfrom information_schema.table_constraints a, information_schema.constraint_column_usage b, sysforeignkeys c\nwhere a.constraint_type='foreign key' and a.constraint_name= b.constraint_name and object_name(fkeyid)=a.table_name\nand object_name(constid)=a.constraint_name and a.table_name='%s'；\n```\n## 关闭外键约束\n```\nalter table %s nocheck constraint %s；#最后一个参数为某个外键约束\n```\n## 启用为外键约束\n```\nalter table %s check constraint %s;#最后一个参数为某个外键约束\n```\n## 查询表上面是否存在某个触发器\n```\nSELECT name FROM dbo.sysobjects WHERE type='TR' AND name='%s'；\n```\n## 创建触发器\n设3.7创建的表为events，且有表teclan如下：\n```\ncreate table teclan\n(\nid int,\nname varchar(10),\nage int,\nsex varchar(10)\n);\nalter table teclan add primary key(id,name);\n```\n### insert触发器\n```\nCREATE TRIGGER triggerNameForInsert\nON dbo.teclan\nFOR INSERT\nAS\nDECLARE\n@newid VARCHAR(20),@oldid VARCHAR(20),\n@newname VARCHAR(20),@oldname VARCHAR(20)\nBEGIN\nselect @newid=CONVERT(VARCHAR(200),id) from inserted\nselect @oldid=CONVERT(VARCHAR(200),id) from deleted\nselect @newname=CONVERT(VARCHAR(200),name) from inserted\nselect @oldname=CONVERT(VARCHAR(200),name) from deleted  \nINSERT INTO dbo.events(dbName, tableName, pkNames, newPkValues, oldPkValues, action)\nVALUES ('testdb', 'teclan', 'id,name', @newid+','+@newname, @oldid+','+@oldname , 'INSERT')\nEND;\n```\n### update触发器\n```\nCREATE TRIGGER triggerNameForUpdatet\nON dbo.teclan\nFOR UPDATE\nAS\nDECLARE\n@newid VARCHAR(20),@oldid VARCHAR(20),\n@newname VARCHAR(20),@oldname VARCHAR(20)\nBEGIN\nselect @newid=CONVERT(VARCHAR(200),id) from inserted\nselect @oldid=CONVERT(VARCHAR(200),id) from deleted\nselect @newname=CONVERT(VARCHAR(200),name) from inserted\nselect @oldname=CONVERT(VARCHAR(200),name) from deleted  \nINSERT INTO dbo.events(dbName, tableName, pkNames, newPkValues, oldPkValues, action)\nVALUES ('testdb', 'teclan', 'id,name', @newid+','+@newname, @oldid+','+@oldname , 'UPDATE')\nEND;\n```\n### delete触发器\n>关于sqlserver，delete操作如果按insert和update方式创建触发器，那么在执行delete from table 删除表全部数据\n或者带条件删除某个区间时，触发器只能记录到最后一条数据，为解决这个问题，需要重构触发器，以下是我的方案：\n当delete操作发生后，我们判断数据库中是否存在 {表名_delete_tmp} 这样一个表，如果存在则将其删掉，之后使用\nselect pknames into {表名_delete_tmp} from deleted,将delete表中的主键值复制到  {表名_delete_tmp}，之后再\n遍历 {表名_delete_tmp} ，依次获取对应的主键值，再存入events表。\n特别注意，在inserted和deleted表中不允许使用text,ntext和image这三个字段，意味着如果表中存在这三个字段中的一个\n或多个字段作为主键时，这个触发器就会无法创建，建议使用varchar（max）代替text和ntext，使用varbinary代替image，微软建议\n尽量不使用text,ntext和image这三个字段。\n\n```\ncreate trigger triggerNameForDelete\non dbo.teclan\nafter DELETE\nas\nDECLARE\n@i int set @i=(select count(table_name) from information_schema.tables where table_type='base table' and table_schema='dbo' and table_name='teclan_delete_tmp')\nif @i=1\n  drop table teclan_delete_tmp ;\nselect id,name into teclan_delete_tmp from deleted;\ndeclare @rows int  \ndeclare @id varchar(500)\ndeclare @name varchar(500)\nset @rows=(select count(*) from teclan_delete_tmp)\nwhile @rows>0\nbegin  \n  set @id=(select top 1 id from teclan_delete_tmp)  \n  set @name=(select top 1 name from teclan_delete_tmp)  \n  insert into dbo.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action)\n  values ('testdb','teclan','id,name','null',@id+','+@name,'DELETE');\n  delete from teclan_delete_tmp where  id=@id and  name=@name  \n  set @rows=(select count(*) from teclan_delete_tmp)\nend;\ndrop table teclan_delete_tmp\n```\n### 删除触发器\n```\ndrop trigger triggerName;#triggerName是要删除的触发器名\n```\n\n## 存储过程实例\n### 创建100个表\n```\nDECLARE @i int\nDECLARE @j int\nDECLARE @table_name varchar(1000)\nSET   @i = 1\nSET   @j = 101 WHILE @i < @j BEGIN\nSET   @table_name = 'users' + rtrim(@i) DECLARE @sqlsource_create varchar(1000)\nSET   @sqlsource_create = 'create table[dbo].' + @table_name + '(\n\t[id] [int] IDENTITY (1, 1) NOT NULL PRIMARY KEY,\n\t[content] [varchar] (2000) COLLATE Chinese_PRC_CI_AS NULL ,\n\t) ON [PRIMARY]'\nEXEC (@sqlsource_create)\nSET   @i = @i + 1\nEND\n```\n### 删除100个表\n```\ndeclare @i int\ndeclare @j int\ndeclare @table_name varchar(1000)\nset @i = 1\nset @j =101\nwhile @i<@j\nbegin\nset @table_name='users'+rtrim(@i)\ndeclare @sqlsource_drop varchar(1000)\nset @sqlsource_drop='drop table[dbo].'+@table_name\nexec(@sqlsource_drop)\nset @i=@i+1\nend\n```\n### 往100个表添加数据，每个表500条记录\n```\ndeclare @i int\ndeclare @j int\ndeclare @k int\ndeclare @table_name varchar(1000)\ndeclare @sqlstr varchar(2000)\nset @i = 1\nset @j =101\nset @sqlstr = '''昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅'''\nwhile @i<@j\nbegin\nset @table_name='users'+rtrim(@i)\nprint @table_name\ndeclare @sqlsource_insert varchar(2000)\nset @k =0\nwhile (@k<500)\nbegin\nset @sqlsource_insert='insert into dbo.'+ @table_name +'(content)values('+ @sqlstr+ ')'\nprint @sqlsource_insert\nexec(@sqlsource_insert)\nset @k=@k+1\nend\nset @i=@i+1\nend\n```\n### 删除100个表里面的所有数据\n```\ndeclare @i int\ndeclare @j int\ndeclare @table_name varchar(1000)\nset @i = 1\nset @j =101\nwhile @i<@j\nbegin\nset @table_name='users'+rtrim(@i)\ndeclare @sqlsource_drop varchar(1000)\nset @sqlsource_drop='delete from [dbo].'+@table_name\nexec(@sqlsource_drop)\nset @i=@i+1\nend\n```\n\n## 查询各个表的记录数\n```\nselect  b.name as tablename ,  \n        a.rowcnt as datacount  \nfrom    sysindexes a ,  \n        sysobjects b  \nwhere   a.id = b.id  \n        and a.indid < 2  \n        and objectproperty(b.id, 'IsMSShipped') = 0   \norder by tablename asc;\n```\n\n\n# sqlserver2k+\n> table_catalog 对应的数据库名，object_id('%s') 对应参数是表名，\n除以下特别指定的，其他SQL参考sqlserver2k。\n\n## Jdbc驱动\n```\ncom.microsoft.sqlserver.jdbc.SQLServerDriver\n```\n## url\n```\njdbc:sqlserver://%s:%d;DatabaseName=%s\n```\n## 获取所有表\n```\nselect name from sys.tables;\n```\n## 查询主键\n```\nselect name from syscolumns where id=object_id('%s') and colid in(select keyno from sysindexkeys where id=object_id('%s'));\n```\n或\n```\nSELECT a.column_name FROM information_schema.key_column_usage a\nINNER JOIN information_schema.table_constraints b\nON (a.constraint_name = b.constraint_name)\nWHERE a.table_schema = '%s' AND b.table_schema = '%s'\nAND b.table_catalog = '%s' AND b.table_name = '%s'\nAND b.constraint_type = 'PRIMARY KEY';\n```\n## 查询触发器是否存在\n```\n# b.name 对应触发器名，a.name 对应schema\nSELECT b.name FROM sys.schemas a INNER JOIN sys.objects b ON a.schema_id=b.schema_id WHERE b.type='TR' AND b.name='%s' AND a.name='%s';\n```\n## 查询外键\n```\n# oSub.name 对应表名\nselect oSub.name as table_name, fk.name as constraint_name, SubCol.name as column_name, oMain.name as r_table_name,\nMainCol.name as r_column_name from sys.foreign_keys fk\njoin sys.all_objects oSub  on (fk.parent_object_id = oSub.object_id)\njoin sys.all_objects oMain on (fk.referenced_object_id = oMain.object_id)\njoin sys.foreign_key_columns fkCols  on (fk.object_id = fkCols.constraint_object_id)\njoin sys.columns SubCol ON (oSub.object_id = SubCol.object_id and fkCols.parent_column_id = SubCol.column_id)\njoin sys.columns MainCol on (oMain.object_id = MainCol.object_id and fkCols.referenced_column_id = MainCol.column_id)\nwhere oSub.name='%s';\n```\n## 查询字段属性\n```\nselect  schemas.name as schema_name ,o.name as table_name, c.name as column_name, t.name as data_type \nfrom syscolumns c, sysobjects o, systypes t,sys.tables tables,sys.schemas  schemas where o.name = '%s' \nand schemas.name='%s' and c.id = o.id and c.xtype = t.xtype and tables.object_id = c.id and tables.schema_id =schemas.schema_id\n# 其中第一个参数为表名，第二个参数为模式名\n```\n# DB2\n## Jdbc驱动\n```\nCOM.ibm.db2os390.sqlj.jdbc.DB2SQLJDriver\n```\n## url\n```\njdbc:db2://%s:%s/%s\n```\n## 查询主键\n```\nSELECT a.colname FROM SYSCAT.keycoluse AS a INNER JOIN SYSCAT.tabconst AS b ON (a.constname = b.constname)\nWHERE a.tabschema = '%s' AND b.tabschema = '%s' AND a.tabname = '%s' AND b.tabname = '%s' AND b.type = 'P';\n```\n## 查询字段类型\n```\nselect column_name, data_type from sysibm.columns where table_name = upper('%s')；\n```\n## 获取所有表\n```\n# creator 对应schema\nSELECT name FROM SYSIBM.SYSTABLES WHERE creator='%s' ORDER BY name；\n```\n## 查询表是否存在\n```\n# tabschema 对应schema,tabname 对应表名\nSELECT tabname FROM SYSCAT.tables WHERE tabschema='%s' AND tabname='%s';\n```\n## 创建表\n```\nCREATE TABLE %s.%s\n(\n  id INTEGER  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1, NO CACHE ) ,#严格自增字段\ndbName VARCHAR(20),\ntableName VARCHAR(20),  \npkNames VARCHAR(255),\nnewPkValues VARCHAR(255),\noldPkValues VARCHAR(255),\naction VARCHAR(20),\nPRIMARY KEY (id)\n);\n```\n## 查询外键\n```\nselect r.reftabname as table_name, k.colname as column_name, r.constname as constraint_name\nfrom syscat.references as r,syscat.keycoluse as k\nwhere r.tabname=k.tabname and k.constname=r.constname and r.tanschema=’%s’ and r.reftabname='%s';\n```\n## 关闭外键约束\n```\nalter table %s alter foreign key %s not enforced；#最后一个参数是某个外键约束\n```\n## 启用外键约束\n```\nalter table %s alter foreign key %s enforced；#最后一个参数是某个外键约束\n```\n## 查询触发器是否存在\n```\n# trigschema 对应 schema, trigevent 对应触发器名\nSELECT trigname FROM SYSCAT.triggers WHERE trigschema='%s' AND trigname='%s' AND trigevent ='%s'；\n```\n## 触发器\n> DB2 触发器名字不能超过18个字符,触发器SQL最后的 “END” 后面不加分号，activejdbc中加了分号会报错，其他工具请\n自己测试调整。特别注意：\n1:如果表中自增列使用的是 GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1,\n  NO CACHE)声明,则数据库将严格保证该列满足自增约束(唯一性),用户不可指定该列的值,无法插入数据。\n2:如果表中自增列使用的是 GENERATED BY DEFAULT AS IDENTITY (START WITH 0, INCREMENT\n  BY 1, NO CACHE)声明,则允许指定此列的值。\n\n设5.7创建的表为EVENTS，且有表teclan如下（DEV为schema）：\n```\ncreate table teclan\n(\nid bigint,\nname integer,\nage bigint,\nsex clob\n);\nalter table teclan add primary key(id,name);\n```\n### insert触发器\n```\nCREATE TRIGGER triggerNameForInsert\nAFTER INSERT ON DEV.TECLAN\nREFERENCING  NEW AS N  FOR EACH ROW MODE DB2SQL\nBEGIN ATOMIC\nINSERT INTO DEV.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues, action) VALUES ('DB2', 'TECLAN', 'ID,NAME', CHAR(N.ID)||','||CHAR(N.NAME), null,'INSERT');\nEND\n```\n### update触发器\n```\nCREATE TRIGGER triggerNameForUpdatet\nAFTER UPDATE ON DEV.TECLAN\nREFERENCING  NEW AS N OLD AS O  \nFOR EACH ROW MODE DB2SQL BEGIN ATOMIC\nINSERT INTO DEV.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues, action) VALUES ('DB2', 'TECLAN', 'ID,NAME', CHAR(N.ID)||','||CHAR(N.NAME), CHAR(O.ID)||','||CHAR(O.NAME),'UPDATE');\nEND\n```\n### delete触发器\n```\nCREATE TRIGGER triggerNameForDelete\nAFTER DELETE ON DEV.TECLAN\nREFERENCING  OLD AS O  FOR EACH ROW MODE DB2SQL\nBEGIN ATOMIC INSERT INTO DEV.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues, action) VALUES ('DB2', 'TECLAN', 'ID,NAME', null, CHAR(O.ID)||','||CHAR(O.NAME),'DELETE');\nEND\n```\n### 删除触发器\n```\ndrop  trigger triggerName;#triggerName 为要删除的触发器名\n```\n## 存储过程实例\n>  需要修改数据库的日志文件大小和数量，然后重启数据库，才能删除大量数据，步骤如下：\ndb2cmd\ndb2 get db cfg for cnaps2\n此命令可以查看当前数据库的日志文件大小（LOGFILSIZ）,主日志数（LOGPRIMARY）,辅日志数（LOGSECOND）。\ndb2 update db cfg for cnaps2 using LOGPRIMARY 50\n修改主日志数为50\ndb2 update db cfg for cnaps2 using LOGSECOND 20\n修改辅日志数为20\ndb2 update db cfg for cnaps2 using LOGFILSIZ 10240\n修改日志大小为10240\n此时，活动日志空间的最大容量为（20 + 50） * 10240 * 4KB\n停止数据库：db2stop.这时会报SQL1025N  未停止数据库，因为数据库仍是活动的。\n执行:db2 list application 查看目前数据库中活动的链接\ndb2 force application all 杀掉所有活动的链接，此时可以顺利的停止数据库了。\n重新启动数据库：db2start\ndb2 get db cfg for cnaps2 查看当前数据库日志配置，是否为上面修改后的数字。\nDB2下的存储过程均放在独立的文件中，调用命令形如（其中p0()是example.sql中定义的存储过程）\nc:\\Program Files\\IBM\\SQLLIB\\BIN>db2 connect to TESTDB\ndb2 -td@ -f example.sql\ndb2 call p0();\n\n\n### 创建100个表\n```\ncreate procedure p0()\nlanguage sql\nbegin atomic\ndeclare i integer;\ndeclare sqlstr varchar(2000);\ndeclare st statement;\nset i=1;\nwhile i<=100 do\n  set sqlstr='create table ADMINISTRATOR.articles'||char(i)||' (id  integer not null ,content varchar(2000), primary key(id) )';\n  set i=i+1;\nprepare st from sqlstr;\nexecute st;\nend while;\nend@\n```\n### 删除100个表\n```\ncreate procedure p3()\nlanguage sql\nbegin atomic\ndeclare i integer;\ndeclare sqlstr varchar(2000);\ndeclare st statement;\nset i=1;\nwhile i<=100 do\n  set sqlstr='drop table ADMINISTRATOR.articles'||char(i)||'';\n  set i=i+1;\nprepare st from sqlstr;\nexecute st;\nend while;\nend@\n```\n### 往100个表中添加数据，每个表500条记录\n```\ncreate procedure p1()\nlanguage sql\nbegin atomic\ndeclare i integer;\ndeclare j integer;\ndeclare sqlstr varchar(2000);\ndeclare st statement;\nset j=1;\nwhile j<=100 do\n  set i=1;\n  while i<=500 do\n    set sqlstr='insert into ADMINISTRATOR.articles'||char(j)||' values ('||char(i)||',''昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召\n开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽\n咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学\n良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎\n都是实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来\n，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有\n着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅'')';\n    set i=i+1;\n    prepare st from sqlstr;\n    execute st;\n  end while;\nset j=j+1;\nend while;\nend@\n```\n### 删除100个表里面的所有数据\n```\ncreate procedure p2()\nlanguage sql\nbegin atomic\ndeclare i integer;\ndeclare sqlstr varchar(2000);\ndeclare st statement;\nset i=1;\nwhile i<=100 do\n  set sqlstr='delete from ADMINISTRATOR.articles'||char(i)||'';\n  set i=i+1;\nprepare st from sqlstr;\nexecute st;\nend while;\nend@\n```\n# mysql\n## Jdbc驱动\n```\ncom.mysql.jdbc.Driver\n```\n## url\n```\njdbc:mysql://%s:%d/%s\n```\n## 获取所有表\n```\nselect table_name from information_schema.tables where table_schema  ='%s';\n```\n## 查询表是否存在\n```\nSELECT TABLE_NAME AS name FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='%s';\n```\n## 查询表字段类型\n```\nselect column_name,data_type from information_schema.columns where table_schema='%s' and table_name='%s';\n```\n## 查询主键\n```\nselect concat(c.column_name) as 'column_name' from information_schema.table_constraints as t,\ninformation_schema.key_column_usage as c where t.table_name=c.table_name and t.table_name='%s'\nand t.table_schema='%s'；\n```\n## 创建表\n```\nCREATE TABLE %s.%s\n(\n  id         BIGINT        NOT NULL PRIMARY KEY     AUTO_INCREMENT,#自增字段\n  dbName     VARCHAR(30),\n  tableName  VARCHAR(30),\n  pkNames    VARCHAR(2000),\n  newPkValues   VARCHAR(2000),\n  oldPkValues   VARCHAR(2000),\n  action     VARCHAR(20)\n  );\n```\n## 关闭外键约束\n```\nset foreign_key_checks=0;\n```\n## 启用外键约束\n```\nset foreign_key_checks=1;\n```\n## 查询触发器是否存在\n```\n# EVENT_OBJECT_TABLE 对应表名\nSELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS WHERE TRIGGER_SCHEMA='%s'\nAND EVENT_OBJECT_TABLE='%s' AND TRIGGER_NAME='%s'\n```\n## 触发器\n设6.7创建的表为events,且有表teclan如下,schema与数据库名均为testdb:\n```\ncreate table teclan\n(\nid int,\nname varchar(10),\nage int,\nsex varchar(10)  \n);\nalter table teclan add primary key(id,name);\n```\n### insert触发器\n```\nCREATE TRIGGER triggerNameForInsert\nAFTER INSERT ON testdb.teclan\nFOR EACH ROW\nINSERT INTO testdb.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action) VALUES('testdb','teclan','id,name',(concat_ws(',',new.id,new.name)),(null),'INSERT');\n```\n### update触发器\n```\nCREATE TRIGGER triggerNameForUpdatet\nAFTER UPDATE ON testdb.teclan\nFOR EACH ROW\nINSERT INTO testdb.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action) VALUES('testdb','teclan','id,name',(concat_ws(',',new.id,new.name)),(concat_ws(',',old.id,old.name)),'UPDATE');\n```\n### delete触发器\n```\nCREATE TRIGGER triggerNameForDelete\nAFTER DELETE ON testdb.teclan\nFOR EACH ROW\nINSERT INTO testdb.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action) VALUES('testdb','teclan','id,name',(null),(concat_ws(',',old.id,old.name)),'DELETE');\n```\n### 删除触发器\n```\ndrop  trigger triggerName;#triggerName为要删除的触发器\n```\n## 存储过程实例\n### 创建100个表\n```\ndelimiter //\nCREATE procedure create_100table()\nBEGIN\nDECLARE `@i` int(11);\nDECLARE `@sqlstr` varchar(2560);\nSET `@i`=1;\nWHILE `@i` < 101 DO\nSET @sqlstr = CONCAT(\n\"CREATE TABLE testdb.articles\",\n`@i`,\n\"(\n`id` int NOT NULL,\n`content` varchar(2000),\nPRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\"\n);\nprepare stmt from @sqlstr;\nexecute stmt;\nSET `@i` = `@i` + 1;\nEND WHILE;\nEND;\ncall create_100table();\ndrop procedure create_100table;\n//\n```\n### 删除100个表\n```\ndelimiter //\nCREATE procedure delete100()\nBEGIN\nDECLARE `@i` int(11);\nDECLARE `@sqlstr` varchar(2560);\nSET `@i`=1;\nWHILE `@i` < 101 DO\nSET @sqlstr = CONCAT(\"drop table testdb.articles\",`@i`);\nprepare stmt from @sqlstr;\nexecute stmt;\nSET `@i` = `@i` + 1;\nEND WHILE;\nEND;\ncall delete100();\ndrop procedure delete100;\n//\n```\n### 往100个表添加数据，每个表500条记录\n```\ndelimiter //\ndrop procedure if exists insertdata;\nCREATE procedure insertdata()\nBEGIN\nDECLARE `@i` int(11);\nDECLARE `@j` int(11);\nDECLARE `@sqlstr` varchar(2560);\nSET `@i`= 0;\nWHILE `@i` < 100 DO\nSET `@i` = `@i` + 1;\nSET `@j`= 1;\nWHILE `@j` < 501 DO\nSET @sqlstr = CONCAT(\"insert into testdb.articles\",`@i`,\"(id,content)values(\",`@j`,\",'昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅')\");\nprepare stmt from @sqlstr;\nexecute stmt;\nSET `@j` = `@j` + 1;\nEND WHILE;\nEND WHILE;\nEND;\ncall insertdata();\n//\n```\n### 删除100个表里面的所有数据\n```\ndelimiter //\nCREATE procedure delete50000()\nBEGIN\nDECLARE `@i` int(11);\nDECLARE `@sqlstr` varchar(2560);\nSET `@i`=1;\nWHILE `@i` < 101 DO\nSET @sqlstr = CONCAT(\"delete from testdb.articles\",`@i`);\nprepare stmt from @sqlstr;\nexecute stmt;\nSET `@i` = `@i` + 1;\nEND WHILE;\nEND;\ncall delete50000();\ndrop procedure delete50000;\n//\n```\n# kingbase\n## Jdbc驱动\n```\njdbc:kingbase://%s:%d/%s\n```\n## url\n```\ncom.kingbase.Driver\n```\n## 获取所有表\n```\nSELECT table_name FROM information_schema.tables WHERE table_schema='%s';\n```\n## 查询表是否存在\n```\nSELECT table_name FROM information_schema.tables WHERE table_schema='%s' AND table_name='%s';\n```\n## 查询表字段类型\n```\nselect column_name, data_type from information_schema.columns where table_schema = '%s' and table_name = '%s'\n```\n## 创建序列\n```\nCREATE SEQUENCE %s.%s START 1 INCREMENT 1;\n```\n## 删除序列\n```\ndrop SEQUENCE %s.%s;\n```\n## 创建表\n```\nCREATE TABLE %s.%s\n(\n  id INT DEFAULT NEXTVAL('%s.%s'),\n  dbName VARCHAR(20),\n  tableName VARCHAR(20),\n  pkNames VARCHAR(255),\n  newPkValues VARCHAR(255),\n  oldPkValues VARCHAR(255),\n  action VARCHAR(20),\n  PRIMARY KEY(id)\n);\n```\n## 查询主键\n```\n# table_catalog 对应数据库名\nSELECT a.column_name FROM information_schema.key_column_usage a\nINNER JOIN information_schema.table_constraints b\nON (a.constraint_name = b.constraint_name)\nWHERE a.table_schema = '%s' AND b.table_schema = '%s'\nAND b.table_catalog = '%s' AND b.table_name = '%s'\nAND b.constraint_type = 'PRIMARY KEY';\n```\n## 查询外键\n```\n# nspname 对应schema\nselect sys_class.relname as table_name,sys_attribute.attname as column name,fk.conname as\nconstraint_name form (select unnest(sys_constraint.conkey),conname,sys_constraint.conrelid,\nsys_constraint.confrelid form sys_constraint,sys_namespace where sys_constraint.connamespace\n=sys_namespace.oid and sys_namespace.nspname=’%s’ and contype=’f’ )fk,sys_attribute,sys_class,all_constraints\nwhere fk.unnest=sys_attribute.attnum and fk.conrelid=sys_attribute.attrelid and\nfk.confrelid=sys_class.oid and fk.conname=all_constraints.constaint_name and sys_class.relname='%s';\n```\n## 关闭外键约束\n```\nalter table %S alter foreign key %s not enforced;#最后一个参数为某个外键约束\n```\n## 启用外键约束\n```\nalter table %s alter foreign key %s enforced;\n```\n## 触发器\n设7.8创建的表为events,且有表teclan如下(\"PUBLIC\" 为schema,\"TECLAN\" 为表名)：\n```\ncreate table teclan\n(\nid int,\nname varchar(10),\nage int,\nsex varchar(10)\n);\nalter table teclan add primay key(id,name);\n```\n### insert触发器\n```\nCREATE OR REPLACE TRIGGER triggerNameForInsert\nAFTER INSERT ON PUBLIC.\"TECLAN\"\nFOR EACH ROW AS\nBEGIN\nINSERT INTO PUBLIC.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues,action)\nVALUES ('TECLAN','TECLAN','ID,NAME',(NEW.\"ID\"||','||NEW.\"NAME\"),(null),'INSERT');\nEND;\n```\n### update触发器\n```\nCREATE OR REPLACE TRIGGER PIXIU_SYNC_TECLAN_UPDATE\nAFTER UPDATE ON PUBLIC.\"TECLAN\"\nFOR EACH ROW AS\nBEGIN\nINSERT INTO PUBLIC.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues,action)\nVALUES ('TECLAN','TECLAN','ID,NAME',(NEW.\"ID\"||','||NEW.\"NAME\"),(OLD.\"ID\"||','||OLD.\"NAME\"),'UPDATE');\nEND;\n```\n### delete触发器\n```\nCREATE OR REPLACE TRIGGER PIXIU_SYNC_TECLAN_DELETE\nAFTER DELETE ON PUBLIC.\"TECLAN\"\nFOR EACH ROW AS\nBEGIN I\nNSERT INTO PUBLIC.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues,action)\nVALUES ('TECLAN','TECLAN','ID,NAME',(null),(OLD.\"ID\"||','||OLD.\"NAME\"),'DELETE');\nEND;\n```\n### 删除触发器\n```\ndrop trigger triggerName; #triggerName 为指定删除的触发器\n```\n## 存储过程实例\n### 创建100个表\n```\ncreate or replace procedure p0()\nas\ndeclare\n  i integer;\nbegin\n  for i in 1..100 loop\n      Execute immediate 'create TABLE \"PUBLIC\".\"articles'||i||'\"\n       (\"id\"   integer,\n        \"content\"  varchar(2000),\n        primary key(\"id\"))';\n   end loop;\n   end;\ncall p0;\n```\n### 删除100个表\n```\ncreate or replace procedure p0()\nas\ndeclare\n  i integer;\nbegin\n  for i in 1..100 loop\n      Execute immediate 'drop TABLE \"PUBLIC\".\"articles'||i||'\"';\n   end loop;\n   end;\ncall p0;\n```\n### 往100个表添加数据，每个表500条记录\n```\ncreate or replace procedure insert_articles() as\n declare i integer :=1;\n j integer :=1;\n begin\nfor i in 1..100 loop\n  for j in 1..500 loop\n  execute immediate'insert into \"PUBLIC\".\"articles'||i||'\" values('||j||',''昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅'')';\nend loop;\nend loop;\nend;\ncall insert_articles;\n```\n### 删除100个表里面的所有数据\n```\ncreate or replace procedure p0()\nas\ndeclare\n  i integer;\nbegin\n  for i in 1..100 loop\n      Execute immediate 'delete from \"PUBLIC\".\"articles'||i||'\"';\n   end loop;\n   end;\ncall p0;\n```\n","slug":"常见数据库操作SQL","published":1,"updated":"2017-08-18T13:17:27.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6hwvw9a000xjeh859klc655","content":"<blockquote>\n<p>操作表，序列，触发器等时最好都加上schema修饰，以下部分sql中为清晰起见，省略schema修饰。<br>  以下 triggerNameForInsert，triggerNameForUpdatet,triggerNameForDelete 均指代<br>  触发器名，并且包含schema修饰。</p>\n</blockquote>\n<h1 id=\"Oracle\"><a href=\"#Oracle\" class=\"headerlink\" title=\"Oracle\"></a>Oracle</h1><blockquote>\n<p>owner 是对应的schema，要大写,url中的参数依次是ip,端口，数据库名，以下所有SQL是根据本人用到的做的记录，需要时请自行调整更改。</p>\n</blockquote>\n<h2 id=\"Jdbc驱动\"><a href=\"#Jdbc驱动\" class=\"headerlink\" title=\"Jdbc驱动\"></a>Jdbc驱动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">oracle.jdbc.driver.OracleDriver</div></pre></td></tr></table></figure>\n<h2 id=\"url\"><a href=\"#url\" class=\"headerlink\" title=\"url\"></a>url</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc:oracle:thin:@%s:%d:%s</div></pre></td></tr></table></figure>\n<h2 id=\"查询表主键\"><a href=\"#查询表主键\" class=\"headerlink\" title=\"查询表主键\"></a>查询表主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT column_name FROM user_cons_columns WHERE constraint_name = (</div><div class=\"line\">SELECT constraint_name FROM user_constraints WHERE table_name= &apos;%s&apos;</div><div class=\"line\">AND constraint_type =&apos;P&apos;)；</div></pre></td></tr></table></figure>\n<h2 id=\"查询表字段类型\"><a href=\"#查询表字段类型\" class=\"headerlink\" title=\"查询表字段类型\"></a>查询表字段类型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select column_name, data_type from all_tab_columns where owner = &apos;%s&apos; and table_name = &apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"获取所有表\"><a href=\"#获取所有表\" class=\"headerlink\" title=\"获取所有表\"></a>获取所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select table_name from all_tables where owner=upper(&apos;%s&apos;)；</div></pre></td></tr></table></figure>\n<h2 id=\"查询表是否存在\"><a href=\"#查询表是否存在\" class=\"headerlink\" title=\"查询表是否存在\"></a>查询表是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT 1 FROM user_tables WHERE table_name=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"查询序列是否存在\"><a href=\"#查询序列是否存在\" class=\"headerlink\" title=\"查询序列是否存在\"></a>查询序列是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select SEQUENCE_NAME from user_sequences where SEQUENCE_NAME = &apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"创建序列\"><a href=\"#创建序列\" class=\"headerlink\" title=\"创建序列\"></a>创建序列</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE SEQUENCE \\&quot;%s\\&quot;.\\&quot;%s\\&quot; INCREMENT BY 1 START WITH 0 MINVALUE 0 NOMAXVALUE；</div></pre></td></tr></table></figure>\n<h2 id=\"删除序列\"><a href=\"#删除序列\" class=\"headerlink\" title=\"删除序列\"></a>删除序列</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">DROP SEQUENCE %s.%s；</div></pre></td></tr></table></figure>\n<h2 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TABLE %s.%s (</div><div class=\"line\">  id              NUMBER          NOT NULL PRIMARY KEY,</div><div class=\"line\">  dbName          VARCHAR2(50)    NOT NULL,</div><div class=\"line\">  tableName       VARCHAR2(50)    NOT NULL,</div><div class=\"line\">  pkNames         VARCHAR2(2000)  NOT NULL,</div><div class=\"line\">  newPkValues     VARCHAR2(2000),</div><div class=\"line\">  oldPkValues     VARCHAR2(2000),</div><div class=\"line\">  action          VARCHAR2(20)    NOT NULL</div><div class=\"line\">  )；</div></pre></td></tr></table></figure>\n<h2 id=\"查询表上是否存在某个触发器\"><a href=\"#查询表上是否存在某个触发器\" class=\"headerlink\" title=\"查询表上是否存在某个触发器\"></a>查询表上是否存在某个触发器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT trigger_name FROM all_triggers WHERE owner=&apos;%s&apos; AND table_name=&apos;%s&apos; AND trigger_name=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"查询外键\"><a href=\"#查询外键\" class=\"headerlink\" title=\"查询外键\"></a>查询外键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">select ucc.constraint_name from user_cons_columns ucc</div><div class=\"line\">join user_constraints uc on ucc.owner=uc.owner and ucc.constraint_name= uc.constraint_name</div><div class=\"line\">join user_constraints uc_pk ON uc.r_owner= uc_pk.owner and uc.r_constraint_name=uc_pk.constraint_name</div><div class=\"line\">where uc.constraint_type=&apos;R&apos; and ucc.table_name=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"关闭外键约束\"><a href=\"#关闭外键约束\" class=\"headerlink\" title=\"关闭外键约束\"></a>关闭外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s.%s disable constraint %s；#最后一个参数是某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"启用外键约束\"><a href=\"#启用外键约束\" class=\"headerlink\" title=\"启用外键约束\"></a>启用外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s.%s enable constraint %s；#最后一个参数是某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"触发器\"><a href=\"#触发器\" class=\"headerlink\" title=\"触发器\"></a>触发器</h2><p>设1.10创建的表记为 events,用来记录没一条记录的变化，events_seq是存在的一个序列，设有表teclan<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table teclan</div><div class=\"line\">(</div><div class=\"line\">  id number,</div><div class=\"line\">  name varchar(10),</div><div class=\"line\">  age number,</div><div class=\"line\">  sex varchar(10)</div><div class=\"line\">);</div><div class=\"line\">alter table taclan add  primary key(id,name);</div></pre></td></tr></table></figure></p>\n<p>在表teclan上创建触发器，用来记录所有记录的变化，信息存到events表。</p>\n<h3 id=\"insert触发器\"><a href=\"#insert触发器\" class=\"headerlink\" title=\"insert触发器\"></a>insert触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE TRIGGER triggerNameForInsert  #triggerNameForInsert为触发器名，自定义</div><div class=\"line\">AFTER INSERT ON teclan</div><div class=\"line\">FOR EACH ROW</div><div class=\"line\">BEGIN</div><div class=\"line\">INSERT INTO events VALUES (events_seq.nextval ,&apos;xe&apos;,&apos;teclan&apos;,&apos;ID,NAME&apos;,(:NEW.&quot;ID&quot;||&apos;,&apos;||:NEW.&quot;NAME&quot;),</div><div class=\"line\">(:OLD.&quot;ID&quot;||&apos;,&apos;||:OLD.&quot;NAME&quot;),&apos;INSERT&apos;);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"update触发器\"><a href=\"#update触发器\" class=\"headerlink\" title=\"update触发器\"></a>update触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE TRIGGER triggerNameForUpdatet</div><div class=\"line\">AFTER UPDATE ON teclan</div><div class=\"line\">FOR EACH ROW</div><div class=\"line\">BEGIN</div><div class=\"line\">INSERT INTO events VALUES (events_seq.nextval ,&apos;xe&apos;,&apos;teclan&apos;,&apos;ID,NAME&apos;,(:NEW.&quot;ID&quot;||&apos;,&apos;||:NEW.&quot;NAME&quot;),</div><div class=\"line\">(:OLD.&quot;ID&quot;||&apos;,&apos;||:OLD.&quot;NAME&quot;),&apos;UPDATE&apos;);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"delete触发器\"><a href=\"#delete触发器\" class=\"headerlink\" title=\"delete触发器\"></a>delete触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE TRIGGER triggerNameForDelete</div><div class=\"line\">AFTER DELETE ON teclan</div><div class=\"line\">FOR EACH ROW</div><div class=\"line\">BEGIN INSERT INTO events VALUES (events_seq.nextval ,&apos;xe&apos;,&apos;teclan&apos;,&apos;ID,NAME&apos;,(:NEW.&quot;ID&quot;||&apos;,&apos;||:NEW.&quot;NAME&quot;),</div><div class=\"line\">(:OLD.&quot;ID&quot;||&apos;,&apos;||:OLD.&quot;NAME&quot;),&apos;DELETE&apos;);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"删除触发器\"><a href=\"#删除触发器\" class=\"headerlink\" title=\"删除触发器\"></a>删除触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop trigger triggerName; #triggerName为指定要删除的触发器</div></pre></td></tr></table></figure>\n<h2 id=\"查询数据库中各个表的记录数\"><a href=\"#查询数据库中各个表的记录数\" class=\"headerlink\" title=\"查询数据库中各个表的记录数\"></a>查询数据库中各个表的记录数</h2><h3 id=\"创建函数\"><a href=\"#创建函数\" class=\"headerlink\" title=\"创建函数\"></a>创建函数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">create or replace function count_rows(table_name in varchar2,owner in varchar2 default null)</div><div class=\"line\">return number</div><div class=\"line\">authid current_user</div><div class=\"line\">IS</div><div class=\"line\">   num_rows number;</div><div class=\"line\">   stmt varchar2(2000);</div><div class=\"line\">begin</div><div class=\"line\">   if owner is null then</div><div class=\"line\">      stmt := &apos;select count(*) from &quot;&apos;||table_name||&apos;&quot;&apos;;</div><div class=\"line\">   else</div><div class=\"line\">      stmt := &apos;select count(*) from &quot;&apos;||owner||&apos;&quot;.&quot;&apos;||table_name||&apos;&quot;&apos;;</div><div class=\"line\">   end if;</div><div class=\"line\">   execute immediate stmt into num_rows;</div><div class=\"line\">   return num_rows;</div><div class=\"line\">end;</div></pre></td></tr></table></figure>\n<h3 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select table_name, count_rows(table_name)  nrows from user_tables order by nrows desc;</div></pre></td></tr></table></figure>\n<h2 id=\"存储过程实例\"><a href=\"#存储过程实例\" class=\"headerlink\" title=\"存储过程实例\"></a>存储过程实例</h2><h3 id=\"创建100个表\"><a href=\"#创建100个表\" class=\"headerlink\" title=\"创建100个表\"></a>创建100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare i</div><div class=\"line\">integer :=1;</div><div class=\"line\">begin</div><div class=\"line\">  loop</div><div class=\"line\">    if i &lt; 101 then</div><div class=\"line\">      Execute immediate&apos;create TABLE&apos;||&apos;&quot;USER1&quot;.&quot;articles&apos;||i||&apos;&quot;&apos;||</div><div class=\"line\">       &apos;(&quot;id&quot;       NUMBER(*,0),</div><div class=\"line\">         &quot;content&quot;  clob,</div><div class=\"line\">       PRIMARY KEY (&quot;id&quot;))&apos;;</div><div class=\"line\">       i:= i+1;</div><div class=\"line\">     else exit;</div><div class=\"line\">   end if;</div><div class=\"line\">  end loop;</div><div class=\"line\">end;</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表\"><a href=\"#删除100个表\" class=\"headerlink\" title=\"删除100个表\"></a>删除100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare i</div><div class=\"line\">integer :=1;</div><div class=\"line\">begin</div><div class=\"line\">  loop</div><div class=\"line\">    if i &lt; 101 then</div><div class=\"line\">      Execute immediate&apos;drop table &quot;USER1&quot;.&quot;articles&apos;||i||&apos;&quot;&apos;;</div><div class=\"line\">       i:= i+1;</div><div class=\"line\">     else exit;</div><div class=\"line\">    end if;</div><div class=\"line\">  end loop;</div><div class=\"line\">end;</div></pre></td></tr></table></figure>\n<h3 id=\"往100个表插入数据，每个表500条记录\"><a href=\"#往100个表插入数据，每个表500条记录\" class=\"headerlink\" title=\"往100个表插入数据，每个表500条记录\"></a>往100个表插入数据，每个表500条记录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare</div><div class=\"line\">i integer :=1;</div><div class=\"line\">j integer :=1;</div><div class=\"line\">sqlstr varchar(2000);</div><div class=\"line\">begin</div><div class=\"line\">  for i in 1..100 loop</div><div class=\"line\">    for j in 1..500 loop</div><div class=\"line\">      sqlstr := &apos;insert into &quot;USER1&quot;.&quot;users&apos;||TO_CHAR(i)||&apos;&quot; values(&apos;||j||&apos;,&apos;&apos;昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅&apos;&apos;)&apos;;</div><div class=\"line\">      execute immediate sqlstr;</div><div class=\"line\">    end loop;</div><div class=\"line\">   end loop;</div><div class=\"line\">   commit;</div><div class=\"line\">end;</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个里面的所有数据\"><a href=\"#删除100个里面的所有数据\" class=\"headerlink\" title=\"删除100个里面的所有数据\"></a>删除100个里面的所有数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare i</div><div class=\"line\">integer :=1;</div><div class=\"line\">begin</div><div class=\"line\">  loop</div><div class=\"line\">    if i &lt; 101 then</div><div class=\"line\">      Execute immediate&apos;delete from &quot;USER1&quot;.&quot;users&apos;||i||&apos;&quot;&apos;;</div><div class=\"line\">       i:= i+1;</div><div class=\"line\">     else exit;</div><div class=\"line\">    end if;</div><div class=\"line\">  end loop;</div><div class=\"line\">  commit;</div><div class=\"line\">end;</div></pre></td></tr></table></figure>\n<h1 id=\"达梦数据库\"><a href=\"#达梦数据库\" class=\"headerlink\" title=\"达梦数据库\"></a>达梦数据库</h1><p>  除以下特别指出外，其余参考Oracle</p>\n<blockquote>\n<p>sysobjects.object_name 为库模式，user_constraints.table_name 为表名</p>\n</blockquote>\n<h2 id=\"查询主键\"><a href=\"#查询主键\" class=\"headerlink\" title=\"查询主键\"></a>查询主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT column_name FROM user_cons_columns WHERE constraint_name = (select sysobjects.name from</div><div class=\"line\">sysobjects ,all_objects,user_constraints where object_type=&apos;SCH&apos; and object_name = &apos;%s&apos;</div><div class=\"line\">and sysobjects.schid = all_objects.object_id  and type$=&apos;TABOBJ&apos; and sysobjects.subtype$=&apos;CONS&apos;</div><div class=\"line\">and user_constraints.table_name= &apos;%s&apos; AND user_constraints.constraint_type =&apos;P&apos;</div><div class=\"line\">and user_constraints.constraint_name = sysobjects.name)</div></pre></td></tr></table></figure>\n<h2 id=\"查询所有表\"><a href=\"#查询所有表\" class=\"headerlink\" title=\"查询所有表\"></a>查询所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">select sysobjects.name from sysobjects,all_objects where object_type=&apos;SCH&apos; and object_name = &apos;%s&apos;</div><div class=\"line\">and sysobjects.schid = all_objects.object_id and sysobjects.type$=&apos;SCHOBJ&apos; and sysobjects.subtype$=&apos;UTAB&apos;</div></pre></td></tr></table></figure>\n<h2 id=\"存储过程实例-1\"><a href=\"#存储过程实例-1\" class=\"headerlink\" title=\"存储过程实例\"></a>存储过程实例</h2><h3 id=\"创建100个表-1\"><a href=\"#创建100个表-1\" class=\"headerlink\" title=\"创建100个表\"></a>创建100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare sqls varchar;</div><div class=\"line\">begin</div><div class=\"line\">  for i in 1..100 loop</div><div class=\"line\">       set sqls = &apos;CREATE TABLE &quot;TESTER&quot;.&quot;users&apos;||TO_CHAR(i)||&apos;&quot;</div><div class=\"line\">       (&quot;id&quot;  INTEGER NOT NULL,</div><div class=\"line\">       &quot;content&quot;  VARCHAR2(2000),</div><div class=\"line\">       NOT CLUSTER PRIMARY KEY(&quot;id&quot;)) STORAGE(ON &quot;MAIN&quot;, CLUSTERBTR)&apos;;</div><div class=\"line\">       EXECUTE IMMEDIATE sqls;</div><div class=\"line\">  end loop;</div><div class=\"line\">  commit;</div><div class=\"line\"> end;</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表-1\"><a href=\"#删除100个表-1\" class=\"headerlink\" title=\"删除100个表\"></a>删除100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare sqls varchar;</div><div class=\"line\">begin</div><div class=\"line\"> for i in 1..100 loop</div><div class=\"line\">       set sqls = &apos;drop TABLE &quot;TESTER&quot;.&quot;users&apos;||TO_CHAR(i)||&apos;&quot;&apos;;</div><div class=\"line\">       EXECUTE IMMEDIATE sqls;</div><div class=\"line\"> end loop;</div><div class=\"line\">       commit;</div><div class=\"line\"> end;</div></pre></td></tr></table></figure>\n<h3 id=\"往100个表添加数据，每个表500条\"><a href=\"#往100个表添加数据，每个表500条\" class=\"headerlink\" title=\"往100个表添加数据，每个表500条\"></a>往100个表添加数据，每个表500条</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">DECLARE</div><div class=\"line\">i integer :=1;</div><div class=\"line\">j integer :=1;</div><div class=\"line\">sqlstr varchar;</div><div class=\"line\">textstr varchar := &apos;这本书本身的内容并不甘甜,因为里头夹杂着太多不忍与亲身体验的辛酸。苦苦的味道,为这本纪录中国千年文化的书,多写了一道滋味。只有书籍能把个高贵的生命早已遗逝的信号传递给你，只有书籍能把一切美好和智慧对比着丑陋与愚蠢呈现给你。我带着崇敬的心情翻开了它，跟随余秋雨的脚步，去重新认识这些古老深厚的文明，没有肤浅的欢笑，有的只是与作者一起感慨，一起深思。《风雨天一阁》写了一座经历数百年风雨沧桑的普通的楼阁，被一代代人世代保护着，却终被强盗偷窃所骚扰，成为“一种极端艰难，又极其悲怆的文化奇迹”。天一阁承载的文明与历史太多太多。天一阁的命运正是当时中华文化的命运，中华的许多许多文化宝藏在静静地经历数百年甚至数千年的风雨洗礼之后，竟未为人所敬，不为人所珍，最终落入虎口。而当其几近灭亡时，人们才恍然醒悟，慌忙中搜寻回几粒残碎不堪文化碎片，叹息不已，可惜已晚了。《苏东坡突围》使我明白才华横溢、豪放高达的一代文豪苏东坡被一群奸诈卑鄙﹑强词夺理的小人诬陷时的无奈与痛苦，被排挤，被批判，被嘲笑，被流放，可他却并未丧失继续努力生活、前进的勇气。我小时候曾为苏轼美妙清澈的水调歌头所倾心，为他“会挽雕弓如满月，西北望射天狼”的豪情壮志所震撼。&apos;;</div><div class=\"line\">BEGIN</div><div class=\"line\">  FOR i in 1..100 LOOP</div><div class=\"line\">    FOR j in 1..500 LOOP</div><div class=\"line\">      set sqlstr := &apos;insert into &quot;TESTER&quot;.&quot;users&apos;||i||&apos;&quot; values(&apos;||j||&apos;, &apos;&apos;&apos;||textstr||&apos;&apos;&apos;)&apos;;</div><div class=\"line\">      execute immediate sqlstr;</div><div class=\"line\">      --insert into TESTER.&quot;users1&quot; values (1,&apos;这本书本身的内容并不甘甜&apos;);</div><div class=\"line\">  END LOOP;</div><div class=\"line\"> END LOOP;</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表里面的所有数据\"><a href=\"#删除100个表里面的所有数据\" class=\"headerlink\" title=\"删除100个表里面的所有数据\"></a>删除100个表里面的所有数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare sqls varchar;</div><div class=\"line\">begin</div><div class=\"line\"> for i in 1..100 loop</div><div class=\"line\">       set sqls = &apos;delete from &quot;TESTER&quot;.&quot;users&apos;||TO_CHAR(i)||&apos;&quot;&apos;;</div><div class=\"line\">       EXECUTE IMMEDIATE sqls;</div><div class=\"line\"> end loop;</div><div class=\"line\"> commit;</div><div class=\"line\"> end;</div></pre></td></tr></table></figure>\n<h1 id=\"Sqlserver2k\"><a href=\"#Sqlserver2k\" class=\"headerlink\" title=\"Sqlserver2k\"></a>Sqlserver2k</h1><blockquote>\n<p>o.name 指定表名,sqlserver默认的schema是dbo</p>\n</blockquote>\n<h2 id=\"Jdbc驱动-1\"><a href=\"#Jdbc驱动-1\" class=\"headerlink\" title=\"Jdbc驱动\"></a>Jdbc驱动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.microsoft.jdbc.sqlserver.SQLServerDriver</div></pre></td></tr></table></figure>\n<h2 id=\"url-1\"><a href=\"#url-1\" class=\"headerlink\" title=\"url\"></a>url</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc:microsoft:sqlserver://%s:%d;DatabaseName=%s</div></pre></td></tr></table></figure>\n<h2 id=\"查询主键-1\"><a href=\"#查询主键-1\" class=\"headerlink\" title=\"查询主键\"></a>查询主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT c.name AS name FROM sysobjects o INNER JOIN sysindexes x ON o.id = x.id INNER</div><div class=\"line\">JOIN syscolumns c ON o.id = c.id INNER</div><div class=\"line\">JOIN sysindexkeys xk ON o.id = xk.id</div><div class=\"line\">AND x.indid = xk.indid AND c.colid = xk.colid</div><div class=\"line\">AND x.keycnt &gt;= xk.keyno WHERE o.name = &apos;%s&apos; AND (o.type IN (&apos;U&apos;)) AND (x.status &amp; 32 = 0)</div><div class=\"line\">AND (CONVERT(bit, (x.status &amp; 0x800) / 0x800) = 1);</div></pre></td></tr></table></figure>\n<h2 id=\"查询表字段类型-1\"><a href=\"#查询表字段类型-1\" class=\"headerlink\" title=\"查询表字段类型\"></a>查询表字段类型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">select users.name as schema_name,o.name as table_name, c.name as column_name, t.name as data_type </div><div class=\"line\">from syscolumns c, sysobjects o, systypes t,dbo.sysusers users where o.name = &apos;%s&apos; and users.name = &apos;%s&apos; and users.uid =o.uid and c.id = o.id and c.xtype = t.xtype;</div><div class=\"line\"># 其中，第一个参数为表名，第二个参数为模式名（用户名）</div></pre></td></tr></table></figure>\n<h2 id=\"获取所有表-1\"><a href=\"#获取所有表-1\" class=\"headerlink\" title=\"获取所有表\"></a>获取所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select table_name from information_schema.tables where table_type=&apos;base table&apos; and table_schema=&apos;%s&apos;&quot;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询表是否存在-1\"><a href=\"#查询表是否存在-1\" class=\"headerlink\" title=\"查询表是否存在\"></a>查询表是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT name FROM dbo.sysobjects WHERE name=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"创建表-1\"><a href=\"#创建表-1\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TABLE %s.%s</div><div class=\"line\">(</div><div class=\"line\">id INTEGER IDENTITY(1,1) NOT NULL PRIMARY KEY, #自增字段</div><div class=\"line\">dbName     VARCHAR(30),</div><div class=\"line\">tableName  VARCHAR(30),</div><div class=\"line\">pkNames    VARCHAR(2000),</div><div class=\"line\">newPkValues   VARCHAR(2000),</div><div class=\"line\">oldPkValues   VARCHAR(2000),</div><div class=\"line\">action     VARCHAR(20)</div><div class=\"line\">)；</div></pre></td></tr></table></figure>\n<h2 id=\"查询外键-1\"><a href=\"#查询外键-1\" class=\"headerlink\" title=\"查询外键\"></a>查询外键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">select distinct a.table_name, b.column_name,b.constraint_name,object_name(rkeyid) r_table_name  </div><div class=\"line\">from information_schema.table_constraints a, information_schema.constraint_column_usage b, sysforeignkeys c</div><div class=\"line\">where a.constraint_type=&apos;foreign key&apos; and a.constraint_name= b.constraint_name and object_name(fkeyid)=a.table_name</div><div class=\"line\">and object_name(constid)=a.constraint_name and a.table_name=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"关闭外键约束-1\"><a href=\"#关闭外键约束-1\" class=\"headerlink\" title=\"关闭外键约束\"></a>关闭外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s nocheck constraint %s；#最后一个参数为某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"启用为外键约束\"><a href=\"#启用为外键约束\" class=\"headerlink\" title=\"启用为外键约束\"></a>启用为外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s check constraint %s;#最后一个参数为某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"查询表上面是否存在某个触发器\"><a href=\"#查询表上面是否存在某个触发器\" class=\"headerlink\" title=\"查询表上面是否存在某个触发器\"></a>查询表上面是否存在某个触发器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT name FROM dbo.sysobjects WHERE type=&apos;TR&apos; AND name=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"创建触发器\"><a href=\"#创建触发器\" class=\"headerlink\" title=\"创建触发器\"></a>创建触发器</h2><p>设3.7创建的表为events，且有表teclan如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table teclan</div><div class=\"line\">(</div><div class=\"line\">id int,</div><div class=\"line\">name varchar(10),</div><div class=\"line\">age int,</div><div class=\"line\">sex varchar(10)</div><div class=\"line\">);</div><div class=\"line\">alter table teclan add primary key(id,name);</div></pre></td></tr></table></figure></p>\n<h3 id=\"insert触发器-1\"><a href=\"#insert触发器-1\" class=\"headerlink\" title=\"insert触发器\"></a>insert触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForInsert</div><div class=\"line\">ON dbo.teclan</div><div class=\"line\">FOR INSERT</div><div class=\"line\">AS</div><div class=\"line\">DECLARE</div><div class=\"line\">@newid VARCHAR(20),@oldid VARCHAR(20),</div><div class=\"line\">@newname VARCHAR(20),@oldname VARCHAR(20)</div><div class=\"line\">BEGIN</div><div class=\"line\">select @newid=CONVERT(VARCHAR(200),id) from inserted</div><div class=\"line\">select @oldid=CONVERT(VARCHAR(200),id) from deleted</div><div class=\"line\">select @newname=CONVERT(VARCHAR(200),name) from inserted</div><div class=\"line\">select @oldname=CONVERT(VARCHAR(200),name) from deleted  </div><div class=\"line\">INSERT INTO dbo.events(dbName, tableName, pkNames, newPkValues, oldPkValues, action)</div><div class=\"line\">VALUES (&apos;testdb&apos;, &apos;teclan&apos;, &apos;id,name&apos;, @newid+&apos;,&apos;+@newname, @oldid+&apos;,&apos;+@oldname , &apos;INSERT&apos;)</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"update触发器-1\"><a href=\"#update触发器-1\" class=\"headerlink\" title=\"update触发器\"></a>update触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForUpdatet</div><div class=\"line\">ON dbo.teclan</div><div class=\"line\">FOR UPDATE</div><div class=\"line\">AS</div><div class=\"line\">DECLARE</div><div class=\"line\">@newid VARCHAR(20),@oldid VARCHAR(20),</div><div class=\"line\">@newname VARCHAR(20),@oldname VARCHAR(20)</div><div class=\"line\">BEGIN</div><div class=\"line\">select @newid=CONVERT(VARCHAR(200),id) from inserted</div><div class=\"line\">select @oldid=CONVERT(VARCHAR(200),id) from deleted</div><div class=\"line\">select @newname=CONVERT(VARCHAR(200),name) from inserted</div><div class=\"line\">select @oldname=CONVERT(VARCHAR(200),name) from deleted  </div><div class=\"line\">INSERT INTO dbo.events(dbName, tableName, pkNames, newPkValues, oldPkValues, action)</div><div class=\"line\">VALUES (&apos;testdb&apos;, &apos;teclan&apos;, &apos;id,name&apos;, @newid+&apos;,&apos;+@newname, @oldid+&apos;,&apos;+@oldname , &apos;UPDATE&apos;)</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"delete触发器-1\"><a href=\"#delete触发器-1\" class=\"headerlink\" title=\"delete触发器\"></a>delete触发器</h3><blockquote>\n<p>关于sqlserver，delete操作如果按insert和update方式创建触发器，那么在执行delete from table 删除表全部数据<br>或者带条件删除某个区间时，触发器只能记录到最后一条数据，为解决这个问题，需要重构触发器，以下是我的方案：<br>当delete操作发生后，我们判断数据库中是否存在 {表名_delete_tmp} 这样一个表，如果存在则将其删掉，之后使用<br>select pknames into {表名_delete_tmp} from deleted,将delete表中的主键值复制到  {表名_delete_tmp}，之后再<br>遍历 {表名_delete_tmp} ，依次获取对应的主键值，再存入events表。<br>特别注意，在inserted和deleted表中不允许使用text,ntext和image这三个字段，意味着如果表中存在这三个字段中的一个<br>或多个字段作为主键时，这个触发器就会无法创建，建议使用varchar（max）代替text和ntext，使用varbinary代替image，微软建议<br>尽量不使用text,ntext和image这三个字段。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">create trigger triggerNameForDelete</div><div class=\"line\">on dbo.teclan</div><div class=\"line\">after DELETE</div><div class=\"line\">as</div><div class=\"line\">DECLARE</div><div class=\"line\">@i int set @i=(select count(table_name) from information_schema.tables where table_type=&apos;base table&apos; and table_schema=&apos;dbo&apos; and table_name=&apos;teclan_delete_tmp&apos;)</div><div class=\"line\">if @i=1</div><div class=\"line\">  drop table teclan_delete_tmp ;</div><div class=\"line\">select id,name into teclan_delete_tmp from deleted;</div><div class=\"line\">declare @rows int  </div><div class=\"line\">declare @id varchar(500)</div><div class=\"line\">declare @name varchar(500)</div><div class=\"line\">set @rows=(select count(*) from teclan_delete_tmp)</div><div class=\"line\">while @rows&gt;0</div><div class=\"line\">begin  </div><div class=\"line\">  set @id=(select top 1 id from teclan_delete_tmp)  </div><div class=\"line\">  set @name=(select top 1 name from teclan_delete_tmp)  </div><div class=\"line\">  insert into dbo.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action)</div><div class=\"line\">  values (&apos;testdb&apos;,&apos;teclan&apos;,&apos;id,name&apos;,&apos;null&apos;,@id+&apos;,&apos;+@name,&apos;DELETE&apos;);</div><div class=\"line\">  delete from teclan_delete_tmp where  id=@id and  name=@name  </div><div class=\"line\">  set @rows=(select count(*) from teclan_delete_tmp)</div><div class=\"line\">end;</div><div class=\"line\">drop table teclan_delete_tmp</div></pre></td></tr></table></figure>\n<h3 id=\"删除触发器-1\"><a href=\"#删除触发器-1\" class=\"headerlink\" title=\"删除触发器\"></a>删除触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop trigger triggerName;#triggerName是要删除的触发器名</div></pre></td></tr></table></figure>\n<h2 id=\"存储过程实例-2\"><a href=\"#存储过程实例-2\" class=\"headerlink\" title=\"存储过程实例\"></a>存储过程实例</h2><h3 id=\"创建100个表-2\"><a href=\"#创建100个表-2\" class=\"headerlink\" title=\"创建100个表\"></a>创建100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">DECLARE @i int</div><div class=\"line\">DECLARE @j int</div><div class=\"line\">DECLARE @table_name varchar(1000)</div><div class=\"line\">SET   @i = 1</div><div class=\"line\">SET   @j = 101 WHILE @i &lt; @j BEGIN</div><div class=\"line\">SET   @table_name = &apos;users&apos; + rtrim(@i) DECLARE @sqlsource_create varchar(1000)</div><div class=\"line\">SET   @sqlsource_create = &apos;create table[dbo].&apos; + @table_name + &apos;(</div><div class=\"line\">\t[id] [int] IDENTITY (1, 1) NOT NULL PRIMARY KEY,</div><div class=\"line\">\t[content] [varchar] (2000) COLLATE Chinese_PRC_CI_AS NULL ,</div><div class=\"line\">\t) ON [PRIMARY]&apos;</div><div class=\"line\">EXEC (@sqlsource_create)</div><div class=\"line\">SET   @i = @i + 1</div><div class=\"line\">END</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表-2\"><a href=\"#删除100个表-2\" class=\"headerlink\" title=\"删除100个表\"></a>删除100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare @i int</div><div class=\"line\">declare @j int</div><div class=\"line\">declare @table_name varchar(1000)</div><div class=\"line\">set @i = 1</div><div class=\"line\">set @j =101</div><div class=\"line\">while @i&lt;@j</div><div class=\"line\">begin</div><div class=\"line\">set @table_name=&apos;users&apos;+rtrim(@i)</div><div class=\"line\">declare @sqlsource_drop varchar(1000)</div><div class=\"line\">set @sqlsource_drop=&apos;drop table[dbo].&apos;+@table_name</div><div class=\"line\">exec(@sqlsource_drop)</div><div class=\"line\">set @i=@i+1</div><div class=\"line\">end</div></pre></td></tr></table></figure>\n<h3 id=\"往100个表添加数据，每个表500条记录\"><a href=\"#往100个表添加数据，每个表500条记录\" class=\"headerlink\" title=\"往100个表添加数据，每个表500条记录\"></a>往100个表添加数据，每个表500条记录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare @i int</div><div class=\"line\">declare @j int</div><div class=\"line\">declare @k int</div><div class=\"line\">declare @table_name varchar(1000)</div><div class=\"line\">declare @sqlstr varchar(2000)</div><div class=\"line\">set @i = 1</div><div class=\"line\">set @j =101</div><div class=\"line\">set @sqlstr = &apos;&apos;&apos;昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅&apos;&apos;&apos;</div><div class=\"line\">while @i&lt;@j</div><div class=\"line\">begin</div><div class=\"line\">set @table_name=&apos;users&apos;+rtrim(@i)</div><div class=\"line\">print @table_name</div><div class=\"line\">declare @sqlsource_insert varchar(2000)</div><div class=\"line\">set @k =0</div><div class=\"line\">while (@k&lt;500)</div><div class=\"line\">begin</div><div class=\"line\">set @sqlsource_insert=&apos;insert into dbo.&apos;+ @table_name +&apos;(content)values(&apos;+ @sqlstr+ &apos;)&apos;</div><div class=\"line\">print @sqlsource_insert</div><div class=\"line\">exec(@sqlsource_insert)</div><div class=\"line\">set @k=@k+1</div><div class=\"line\">end</div><div class=\"line\">set @i=@i+1</div><div class=\"line\">end</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表里面的所有数据-1\"><a href=\"#删除100个表里面的所有数据-1\" class=\"headerlink\" title=\"删除100个表里面的所有数据\"></a>删除100个表里面的所有数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare @i int</div><div class=\"line\">declare @j int</div><div class=\"line\">declare @table_name varchar(1000)</div><div class=\"line\">set @i = 1</div><div class=\"line\">set @j =101</div><div class=\"line\">while @i&lt;@j</div><div class=\"line\">begin</div><div class=\"line\">set @table_name=&apos;users&apos;+rtrim(@i)</div><div class=\"line\">declare @sqlsource_drop varchar(1000)</div><div class=\"line\">set @sqlsource_drop=&apos;delete from [dbo].&apos;+@table_name</div><div class=\"line\">exec(@sqlsource_drop)</div><div class=\"line\">set @i=@i+1</div><div class=\"line\">end</div></pre></td></tr></table></figure>\n<h2 id=\"查询各个表的记录数\"><a href=\"#查询各个表的记录数\" class=\"headerlink\" title=\"查询各个表的记录数\"></a>查询各个表的记录数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">select  b.name as tablename ,  </div><div class=\"line\">        a.rowcnt as datacount  </div><div class=\"line\">from    sysindexes a ,  </div><div class=\"line\">        sysobjects b  </div><div class=\"line\">where   a.id = b.id  </div><div class=\"line\">        and a.indid &lt; 2  </div><div class=\"line\">        and objectproperty(b.id, &apos;IsMSShipped&apos;) = 0   </div><div class=\"line\">order by tablename asc;</div></pre></td></tr></table></figure>\n<h1 id=\"sqlserver2k\"><a href=\"#sqlserver2k\" class=\"headerlink\" title=\"sqlserver2k+\"></a>sqlserver2k+</h1><blockquote>\n<p>table_catalog 对应的数据库名，object_id(‘%s’) 对应参数是表名，<br>除以下特别指定的，其他SQL参考sqlserver2k。</p>\n</blockquote>\n<h2 id=\"Jdbc驱动-2\"><a href=\"#Jdbc驱动-2\" class=\"headerlink\" title=\"Jdbc驱动\"></a>Jdbc驱动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.microsoft.sqlserver.jdbc.SQLServerDriver</div></pre></td></tr></table></figure>\n<h2 id=\"url-2\"><a href=\"#url-2\" class=\"headerlink\" title=\"url\"></a>url</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc:sqlserver://%s:%d;DatabaseName=%s</div></pre></td></tr></table></figure>\n<h2 id=\"获取所有表-2\"><a href=\"#获取所有表-2\" class=\"headerlink\" title=\"获取所有表\"></a>获取所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select name from sys.tables;</div></pre></td></tr></table></figure>\n<h2 id=\"查询主键-2\"><a href=\"#查询主键-2\" class=\"headerlink\" title=\"查询主键\"></a>查询主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select name from syscolumns where id=object_id(&apos;%s&apos;) and colid in(select keyno from sysindexkeys where id=object_id(&apos;%s&apos;));</div></pre></td></tr></table></figure>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT a.column_name FROM information_schema.key_column_usage a</div><div class=\"line\">INNER JOIN information_schema.table_constraints b</div><div class=\"line\">ON (a.constraint_name = b.constraint_name)</div><div class=\"line\">WHERE a.table_schema = &apos;%s&apos; AND b.table_schema = &apos;%s&apos;</div><div class=\"line\">AND b.table_catalog = &apos;%s&apos; AND b.table_name = &apos;%s&apos;</div><div class=\"line\">AND b.constraint_type = &apos;PRIMARY KEY&apos;;</div></pre></td></tr></table></figure></p>\n<h2 id=\"查询触发器是否存在\"><a href=\"#查询触发器是否存在\" class=\"headerlink\" title=\"查询触发器是否存在\"></a>查询触发器是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># b.name 对应触发器名，a.name 对应schema</div><div class=\"line\">SELECT b.name FROM sys.schemas a INNER JOIN sys.objects b ON a.schema_id=b.schema_id WHERE b.type=&apos;TR&apos; AND b.name=&apos;%s&apos; AND a.name=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询外键-2\"><a href=\"#查询外键-2\" class=\"headerlink\" title=\"查询外键\"></a>查询外键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"># oSub.name 对应表名</div><div class=\"line\">select oSub.name as table_name, fk.name as constraint_name, SubCol.name as column_name, oMain.name as r_table_name,</div><div class=\"line\">MainCol.name as r_column_name from sys.foreign_keys fk</div><div class=\"line\">join sys.all_objects oSub  on (fk.parent_object_id = oSub.object_id)</div><div class=\"line\">join sys.all_objects oMain on (fk.referenced_object_id = oMain.object_id)</div><div class=\"line\">join sys.foreign_key_columns fkCols  on (fk.object_id = fkCols.constraint_object_id)</div><div class=\"line\">join sys.columns SubCol ON (oSub.object_id = SubCol.object_id and fkCols.parent_column_id = SubCol.column_id)</div><div class=\"line\">join sys.columns MainCol on (oMain.object_id = MainCol.object_id and fkCols.referenced_column_id = MainCol.column_id)</div><div class=\"line\">where oSub.name=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询字段属性\"><a href=\"#查询字段属性\" class=\"headerlink\" title=\"查询字段属性\"></a>查询字段属性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">select  schemas.name as schema_name ,o.name as table_name, c.name as column_name, t.name as data_type </div><div class=\"line\">from syscolumns c, sysobjects o, systypes t,sys.tables tables,sys.schemas  schemas where o.name = &apos;%s&apos; </div><div class=\"line\">and schemas.name=&apos;%s&apos; and c.id = o.id and c.xtype = t.xtype and tables.object_id = c.id and tables.schema_id =schemas.schema_id</div><div class=\"line\"># 其中第一个参数为表名，第二个参数为模式名</div></pre></td></tr></table></figure>\n<h1 id=\"DB2\"><a href=\"#DB2\" class=\"headerlink\" title=\"DB2\"></a>DB2</h1><h2 id=\"Jdbc驱动-3\"><a href=\"#Jdbc驱动-3\" class=\"headerlink\" title=\"Jdbc驱动\"></a>Jdbc驱动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">COM.ibm.db2os390.sqlj.jdbc.DB2SQLJDriver</div></pre></td></tr></table></figure>\n<h2 id=\"url-3\"><a href=\"#url-3\" class=\"headerlink\" title=\"url\"></a>url</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc:db2://%s:%s/%s</div></pre></td></tr></table></figure>\n<h2 id=\"查询主键-3\"><a href=\"#查询主键-3\" class=\"headerlink\" title=\"查询主键\"></a>查询主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT a.colname FROM SYSCAT.keycoluse AS a INNER JOIN SYSCAT.tabconst AS b ON (a.constname = b.constname)</div><div class=\"line\">WHERE a.tabschema = &apos;%s&apos; AND b.tabschema = &apos;%s&apos; AND a.tabname = &apos;%s&apos; AND b.tabname = &apos;%s&apos; AND b.type = &apos;P&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询字段类型\"><a href=\"#查询字段类型\" class=\"headerlink\" title=\"查询字段类型\"></a>查询字段类型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select column_name, data_type from sysibm.columns where table_name = upper(&apos;%s&apos;)；</div></pre></td></tr></table></figure>\n<h2 id=\"获取所有表-3\"><a href=\"#获取所有表-3\" class=\"headerlink\" title=\"获取所有表\"></a>获取所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># creator 对应schema</div><div class=\"line\">SELECT name FROM SYSIBM.SYSTABLES WHERE creator=&apos;%s&apos; ORDER BY name；</div></pre></td></tr></table></figure>\n<h2 id=\"查询表是否存在-2\"><a href=\"#查询表是否存在-2\" class=\"headerlink\" title=\"查询表是否存在\"></a>查询表是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># tabschema 对应schema,tabname 对应表名</div><div class=\"line\">SELECT tabname FROM SYSCAT.tables WHERE tabschema=&apos;%s&apos; AND tabname=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"创建表-2\"><a href=\"#创建表-2\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TABLE %s.%s</div><div class=\"line\">(</div><div class=\"line\">  id INTEGER  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1, NO CACHE ) ,#严格自增字段</div><div class=\"line\">dbName VARCHAR(20),</div><div class=\"line\">tableName VARCHAR(20),  </div><div class=\"line\">pkNames VARCHAR(255),</div><div class=\"line\">newPkValues VARCHAR(255),</div><div class=\"line\">oldPkValues VARCHAR(255),</div><div class=\"line\">action VARCHAR(20),</div><div class=\"line\">PRIMARY KEY (id)</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<h2 id=\"查询外键-3\"><a href=\"#查询外键-3\" class=\"headerlink\" title=\"查询外键\"></a>查询外键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">select r.reftabname as table_name, k.colname as column_name, r.constname as constraint_name</div><div class=\"line\">from syscat.references as r,syscat.keycoluse as k</div><div class=\"line\">where r.tabname=k.tabname and k.constname=r.constname and r.tanschema=’%s’ and r.reftabname=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"关闭外键约束-2\"><a href=\"#关闭外键约束-2\" class=\"headerlink\" title=\"关闭外键约束\"></a>关闭外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s alter foreign key %s not enforced；#最后一个参数是某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"启用外键约束-1\"><a href=\"#启用外键约束-1\" class=\"headerlink\" title=\"启用外键约束\"></a>启用外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s alter foreign key %s enforced；#最后一个参数是某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"查询触发器是否存在-1\"><a href=\"#查询触发器是否存在-1\" class=\"headerlink\" title=\"查询触发器是否存在\"></a>查询触发器是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># trigschema 对应 schema, trigevent 对应触发器名</div><div class=\"line\">SELECT trigname FROM SYSCAT.triggers WHERE trigschema=&apos;%s&apos; AND trigname=&apos;%s&apos; AND trigevent =&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"触发器-1\"><a href=\"#触发器-1\" class=\"headerlink\" title=\"触发器\"></a>触发器</h2><blockquote>\n<p>DB2 触发器名字不能超过18个字符,触发器SQL最后的 “END” 后面不加分号，activejdbc中加了分号会报错，其他工具请<br>自己测试调整。特别注意：<br>1:如果表中自增列使用的是 GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1,<br>  NO CACHE)声明,则数据库将严格保证该列满足自增约束(唯一性),用户不可指定该列的值,无法插入数据。<br>2:如果表中自增列使用的是 GENERATED BY DEFAULT AS IDENTITY (START WITH 0, INCREMENT<br>  BY 1, NO CACHE)声明,则允许指定此列的值。</p>\n</blockquote>\n<p>设5.7创建的表为EVENTS，且有表teclan如下（DEV为schema）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table teclan</div><div class=\"line\">(</div><div class=\"line\">id bigint,</div><div class=\"line\">name integer,</div><div class=\"line\">age bigint,</div><div class=\"line\">sex clob</div><div class=\"line\">);</div><div class=\"line\">alter table teclan add primary key(id,name);</div></pre></td></tr></table></figure></p>\n<h3 id=\"insert触发器-2\"><a href=\"#insert触发器-2\" class=\"headerlink\" title=\"insert触发器\"></a>insert触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForInsert</div><div class=\"line\">AFTER INSERT ON DEV.TECLAN</div><div class=\"line\">REFERENCING  NEW AS N  FOR EACH ROW MODE DB2SQL</div><div class=\"line\">BEGIN ATOMIC</div><div class=\"line\">INSERT INTO DEV.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues, action) VALUES (&apos;DB2&apos;, &apos;TECLAN&apos;, &apos;ID,NAME&apos;, CHAR(N.ID)||&apos;,&apos;||CHAR(N.NAME), null,&apos;INSERT&apos;);</div><div class=\"line\">END</div></pre></td></tr></table></figure>\n<h3 id=\"update触发器-2\"><a href=\"#update触发器-2\" class=\"headerlink\" title=\"update触发器\"></a>update触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForUpdatet</div><div class=\"line\">AFTER UPDATE ON DEV.TECLAN</div><div class=\"line\">REFERENCING  NEW AS N OLD AS O  </div><div class=\"line\">FOR EACH ROW MODE DB2SQL BEGIN ATOMIC</div><div class=\"line\">INSERT INTO DEV.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues, action) VALUES (&apos;DB2&apos;, &apos;TECLAN&apos;, &apos;ID,NAME&apos;, CHAR(N.ID)||&apos;,&apos;||CHAR(N.NAME), CHAR(O.ID)||&apos;,&apos;||CHAR(O.NAME),&apos;UPDATE&apos;);</div><div class=\"line\">END</div></pre></td></tr></table></figure>\n<h3 id=\"delete触发器-2\"><a href=\"#delete触发器-2\" class=\"headerlink\" title=\"delete触发器\"></a>delete触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForDelete</div><div class=\"line\">AFTER DELETE ON DEV.TECLAN</div><div class=\"line\">REFERENCING  OLD AS O  FOR EACH ROW MODE DB2SQL</div><div class=\"line\">BEGIN ATOMIC INSERT INTO DEV.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues, action) VALUES (&apos;DB2&apos;, &apos;TECLAN&apos;, &apos;ID,NAME&apos;, null, CHAR(O.ID)||&apos;,&apos;||CHAR(O.NAME),&apos;DELETE&apos;);</div><div class=\"line\">END</div></pre></td></tr></table></figure>\n<h3 id=\"删除触发器-2\"><a href=\"#删除触发器-2\" class=\"headerlink\" title=\"删除触发器\"></a>删除触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop  trigger triggerName;#triggerName 为要删除的触发器名</div></pre></td></tr></table></figure>\n<h2 id=\"存储过程实例-3\"><a href=\"#存储过程实例-3\" class=\"headerlink\" title=\"存储过程实例\"></a>存储过程实例</h2><blockquote>\n<p> 需要修改数据库的日志文件大小和数量，然后重启数据库，才能删除大量数据，步骤如下：<br>db2cmd<br>db2 get db cfg for cnaps2<br>此命令可以查看当前数据库的日志文件大小（LOGFILSIZ）,主日志数（LOGPRIMARY）,辅日志数（LOGSECOND）。<br>db2 update db cfg for cnaps2 using LOGPRIMARY 50<br>修改主日志数为50<br>db2 update db cfg for cnaps2 using LOGSECOND 20<br>修改辅日志数为20<br>db2 update db cfg for cnaps2 using LOGFILSIZ 10240<br>修改日志大小为10240<br>此时，活动日志空间的最大容量为（20 + 50） <em> 10240 </em> 4KB<br>停止数据库：db2stop.这时会报SQL1025N  未停止数据库，因为数据库仍是活动的。<br>执行:db2 list application 查看目前数据库中活动的链接<br>db2 force application all 杀掉所有活动的链接，此时可以顺利的停止数据库了。<br>重新启动数据库：db2start<br>db2 get db cfg for cnaps2 查看当前数据库日志配置，是否为上面修改后的数字。<br>DB2下的存储过程均放在独立的文件中，调用命令形如（其中p0()是example.sql中定义的存储过程）<br>c:\\Program Files\\IBM\\SQLLIB\\BIN&gt;db2 connect to TESTDB<br>db2 -td@ -f example.sql<br>db2 call p0();</p>\n</blockquote>\n<h3 id=\"创建100个表-3\"><a href=\"#创建100个表-3\" class=\"headerlink\" title=\"创建100个表\"></a>创建100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">create procedure p0()</div><div class=\"line\">language sql</div><div class=\"line\">begin atomic</div><div class=\"line\">declare i integer;</div><div class=\"line\">declare sqlstr varchar(2000);</div><div class=\"line\">declare st statement;</div><div class=\"line\">set i=1;</div><div class=\"line\">while i&lt;=100 do</div><div class=\"line\">  set sqlstr=&apos;create table ADMINISTRATOR.articles&apos;||char(i)||&apos; (id  integer not null ,content varchar(2000), primary key(id) )&apos;;</div><div class=\"line\">  set i=i+1;</div><div class=\"line\">prepare st from sqlstr;</div><div class=\"line\">execute st;</div><div class=\"line\">end while;</div><div class=\"line\">end@</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表-3\"><a href=\"#删除100个表-3\" class=\"headerlink\" title=\"删除100个表\"></a>删除100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">create procedure p3()</div><div class=\"line\">language sql</div><div class=\"line\">begin atomic</div><div class=\"line\">declare i integer;</div><div class=\"line\">declare sqlstr varchar(2000);</div><div class=\"line\">declare st statement;</div><div class=\"line\">set i=1;</div><div class=\"line\">while i&lt;=100 do</div><div class=\"line\">  set sqlstr=&apos;drop table ADMINISTRATOR.articles&apos;||char(i)||&apos;&apos;;</div><div class=\"line\">  set i=i+1;</div><div class=\"line\">prepare st from sqlstr;</div><div class=\"line\">execute st;</div><div class=\"line\">end while;</div><div class=\"line\">end@</div></pre></td></tr></table></figure>\n<h3 id=\"往100个表中添加数据，每个表500条记录\"><a href=\"#往100个表中添加数据，每个表500条记录\" class=\"headerlink\" title=\"往100个表中添加数据，每个表500条记录\"></a>往100个表中添加数据，每个表500条记录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">create procedure p1()</div><div class=\"line\">language sql</div><div class=\"line\">begin atomic</div><div class=\"line\">declare i integer;</div><div class=\"line\">declare j integer;</div><div class=\"line\">declare sqlstr varchar(2000);</div><div class=\"line\">declare st statement;</div><div class=\"line\">set j=1;</div><div class=\"line\">while j&lt;=100 do</div><div class=\"line\">  set i=1;</div><div class=\"line\">  while i&lt;=500 do</div><div class=\"line\">    set sqlstr=&apos;insert into ADMINISTRATOR.articles&apos;||char(j)||&apos; values (&apos;||char(i)||&apos;,&apos;&apos;昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召</div><div class=\"line\">开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽</div><div class=\"line\">咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学</div><div class=\"line\">良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎</div><div class=\"line\">都是实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来</div><div class=\"line\">，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有</div><div class=\"line\">着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅&apos;&apos;)&apos;;</div><div class=\"line\">    set i=i+1;</div><div class=\"line\">    prepare st from sqlstr;</div><div class=\"line\">    execute st;</div><div class=\"line\">  end while;</div><div class=\"line\">set j=j+1;</div><div class=\"line\">end while;</div><div class=\"line\">end@</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表里面的所有数据-2\"><a href=\"#删除100个表里面的所有数据-2\" class=\"headerlink\" title=\"删除100个表里面的所有数据\"></a>删除100个表里面的所有数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">create procedure p2()</div><div class=\"line\">language sql</div><div class=\"line\">begin atomic</div><div class=\"line\">declare i integer;</div><div class=\"line\">declare sqlstr varchar(2000);</div><div class=\"line\">declare st statement;</div><div class=\"line\">set i=1;</div><div class=\"line\">while i&lt;=100 do</div><div class=\"line\">  set sqlstr=&apos;delete from ADMINISTRATOR.articles&apos;||char(i)||&apos;&apos;;</div><div class=\"line\">  set i=i+1;</div><div class=\"line\">prepare st from sqlstr;</div><div class=\"line\">execute st;</div><div class=\"line\">end while;</div><div class=\"line\">end@</div></pre></td></tr></table></figure>\n<h1 id=\"mysql\"><a href=\"#mysql\" class=\"headerlink\" title=\"mysql\"></a>mysql</h1><h2 id=\"Jdbc驱动-4\"><a href=\"#Jdbc驱动-4\" class=\"headerlink\" title=\"Jdbc驱动\"></a>Jdbc驱动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.mysql.jdbc.Driver</div></pre></td></tr></table></figure>\n<h2 id=\"url-4\"><a href=\"#url-4\" class=\"headerlink\" title=\"url\"></a>url</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc:mysql://%s:%d/%s</div></pre></td></tr></table></figure>\n<h2 id=\"获取所有表-4\"><a href=\"#获取所有表-4\" class=\"headerlink\" title=\"获取所有表\"></a>获取所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select table_name from information_schema.tables where table_schema  =&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询表是否存在-3\"><a href=\"#查询表是否存在-3\" class=\"headerlink\" title=\"查询表是否存在\"></a>查询表是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT TABLE_NAME AS name FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询表字段类型-2\"><a href=\"#查询表字段类型-2\" class=\"headerlink\" title=\"查询表字段类型\"></a>查询表字段类型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select column_name,data_type from information_schema.columns where table_schema=&apos;%s&apos; and table_name=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询主键-4\"><a href=\"#查询主键-4\" class=\"headerlink\" title=\"查询主键\"></a>查询主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">select concat(c.column_name) as &apos;column_name&apos; from information_schema.table_constraints as t,</div><div class=\"line\">information_schema.key_column_usage as c where t.table_name=c.table_name and t.table_name=&apos;%s&apos;</div><div class=\"line\">and t.table_schema=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"创建表-3\"><a href=\"#创建表-3\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TABLE %s.%s</div><div class=\"line\">(</div><div class=\"line\">  id         BIGINT        NOT NULL PRIMARY KEY     AUTO_INCREMENT,#自增字段</div><div class=\"line\">  dbName     VARCHAR(30),</div><div class=\"line\">  tableName  VARCHAR(30),</div><div class=\"line\">  pkNames    VARCHAR(2000),</div><div class=\"line\">  newPkValues   VARCHAR(2000),</div><div class=\"line\">  oldPkValues   VARCHAR(2000),</div><div class=\"line\">  action     VARCHAR(20)</div><div class=\"line\">  );</div></pre></td></tr></table></figure>\n<h2 id=\"关闭外键约束-3\"><a href=\"#关闭外键约束-3\" class=\"headerlink\" title=\"关闭外键约束\"></a>关闭外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set foreign_key_checks=0;</div></pre></td></tr></table></figure>\n<h2 id=\"启用外键约束-2\"><a href=\"#启用外键约束-2\" class=\"headerlink\" title=\"启用外键约束\"></a>启用外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set foreign_key_checks=1;</div></pre></td></tr></table></figure>\n<h2 id=\"查询触发器是否存在-2\"><a href=\"#查询触发器是否存在-2\" class=\"headerlink\" title=\"查询触发器是否存在\"></a>查询触发器是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"># EVENT_OBJECT_TABLE 对应表名</div><div class=\"line\">SELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS WHERE TRIGGER_SCHEMA=&apos;%s&apos;</div><div class=\"line\">AND EVENT_OBJECT_TABLE=&apos;%s&apos; AND TRIGGER_NAME=&apos;%s&apos;</div></pre></td></tr></table></figure>\n<h2 id=\"触发器-2\"><a href=\"#触发器-2\" class=\"headerlink\" title=\"触发器\"></a>触发器</h2><p>设6.7创建的表为events,且有表teclan如下,schema与数据库名均为testdb:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table teclan</div><div class=\"line\">(</div><div class=\"line\">id int,</div><div class=\"line\">name varchar(10),</div><div class=\"line\">age int,</div><div class=\"line\">sex varchar(10)  </div><div class=\"line\">);</div><div class=\"line\">alter table teclan add primary key(id,name);</div></pre></td></tr></table></figure></p>\n<h3 id=\"insert触发器-3\"><a href=\"#insert触发器-3\" class=\"headerlink\" title=\"insert触发器\"></a>insert触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForInsert</div><div class=\"line\">AFTER INSERT ON testdb.teclan</div><div class=\"line\">FOR EACH ROW</div><div class=\"line\">INSERT INTO testdb.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action) VALUES(&apos;testdb&apos;,&apos;teclan&apos;,&apos;id,name&apos;,(concat_ws(&apos;,&apos;,new.id,new.name)),(null),&apos;INSERT&apos;);</div></pre></td></tr></table></figure>\n<h3 id=\"update触发器-3\"><a href=\"#update触发器-3\" class=\"headerlink\" title=\"update触发器\"></a>update触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForUpdatet</div><div class=\"line\">AFTER UPDATE ON testdb.teclan</div><div class=\"line\">FOR EACH ROW</div><div class=\"line\">INSERT INTO testdb.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action) VALUES(&apos;testdb&apos;,&apos;teclan&apos;,&apos;id,name&apos;,(concat_ws(&apos;,&apos;,new.id,new.name)),(concat_ws(&apos;,&apos;,old.id,old.name)),&apos;UPDATE&apos;);</div></pre></td></tr></table></figure>\n<h3 id=\"delete触发器-3\"><a href=\"#delete触发器-3\" class=\"headerlink\" title=\"delete触发器\"></a>delete触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForDelete</div><div class=\"line\">AFTER DELETE ON testdb.teclan</div><div class=\"line\">FOR EACH ROW</div><div class=\"line\">INSERT INTO testdb.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action) VALUES(&apos;testdb&apos;,&apos;teclan&apos;,&apos;id,name&apos;,(null),(concat_ws(&apos;,&apos;,old.id,old.name)),&apos;DELETE&apos;);</div></pre></td></tr></table></figure>\n<h3 id=\"删除触发器-3\"><a href=\"#删除触发器-3\" class=\"headerlink\" title=\"删除触发器\"></a>删除触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop  trigger triggerName;#triggerName为要删除的触发器</div></pre></td></tr></table></figure>\n<h2 id=\"存储过程实例-4\"><a href=\"#存储过程实例-4\" class=\"headerlink\" title=\"存储过程实例\"></a>存储过程实例</h2><h3 id=\"创建100个表-4\"><a href=\"#创建100个表-4\" class=\"headerlink\" title=\"创建100个表\"></a>创建100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">delimiter //</div><div class=\"line\">CREATE procedure create_100table()</div><div class=\"line\">BEGIN</div><div class=\"line\">DECLARE `@i` int(11);</div><div class=\"line\">DECLARE `@sqlstr` varchar(2560);</div><div class=\"line\">SET `@i`=1;</div><div class=\"line\">WHILE `@i` &lt; 101 DO</div><div class=\"line\">SET @sqlstr = CONCAT(</div><div class=\"line\">&quot;CREATE TABLE testdb.articles&quot;,</div><div class=\"line\">`@i`,</div><div class=\"line\">&quot;(</div><div class=\"line\">`id` int NOT NULL,</div><div class=\"line\">`content` varchar(2000),</div><div class=\"line\">PRIMARY KEY (`id`)</div><div class=\"line\">) ENGINE=InnoDB DEFAULT CHARSET=utf8&quot;</div><div class=\"line\">);</div><div class=\"line\">prepare stmt from @sqlstr;</div><div class=\"line\">execute stmt;</div><div class=\"line\">SET `@i` = `@i` + 1;</div><div class=\"line\">END WHILE;</div><div class=\"line\">END;</div><div class=\"line\">call create_100table();</div><div class=\"line\">drop procedure create_100table;</div><div class=\"line\">//</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表-4\"><a href=\"#删除100个表-4\" class=\"headerlink\" title=\"删除100个表\"></a>删除100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">delimiter //</div><div class=\"line\">CREATE procedure delete100()</div><div class=\"line\">BEGIN</div><div class=\"line\">DECLARE `@i` int(11);</div><div class=\"line\">DECLARE `@sqlstr` varchar(2560);</div><div class=\"line\">SET `@i`=1;</div><div class=\"line\">WHILE `@i` &lt; 101 DO</div><div class=\"line\">SET @sqlstr = CONCAT(&quot;drop table testdb.articles&quot;,`@i`);</div><div class=\"line\">prepare stmt from @sqlstr;</div><div class=\"line\">execute stmt;</div><div class=\"line\">SET `@i` = `@i` + 1;</div><div class=\"line\">END WHILE;</div><div class=\"line\">END;</div><div class=\"line\">call delete100();</div><div class=\"line\">drop procedure delete100;</div><div class=\"line\">//</div></pre></td></tr></table></figure>\n<h3 id=\"往100个表添加数据，每个表500条记录-1\"><a href=\"#往100个表添加数据，每个表500条记录-1\" class=\"headerlink\" title=\"往100个表添加数据，每个表500条记录\"></a>往100个表添加数据，每个表500条记录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">delimiter //</div><div class=\"line\">drop procedure if exists insertdata;</div><div class=\"line\">CREATE procedure insertdata()</div><div class=\"line\">BEGIN</div><div class=\"line\">DECLARE `@i` int(11);</div><div class=\"line\">DECLARE `@j` int(11);</div><div class=\"line\">DECLARE `@sqlstr` varchar(2560);</div><div class=\"line\">SET `@i`= 0;</div><div class=\"line\">WHILE `@i` &lt; 100 DO</div><div class=\"line\">SET `@i` = `@i` + 1;</div><div class=\"line\">SET `@j`= 1;</div><div class=\"line\">WHILE `@j` &lt; 501 DO</div><div class=\"line\">SET @sqlstr = CONCAT(&quot;insert into testdb.articles&quot;,`@i`,&quot;(id,content)values(&quot;,`@j`,&quot;,&apos;昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅&apos;)&quot;);</div><div class=\"line\">prepare stmt from @sqlstr;</div><div class=\"line\">execute stmt;</div><div class=\"line\">SET `@j` = `@j` + 1;</div><div class=\"line\">END WHILE;</div><div class=\"line\">END WHILE;</div><div class=\"line\">END;</div><div class=\"line\">call insertdata();</div><div class=\"line\">//</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表里面的所有数据-3\"><a href=\"#删除100个表里面的所有数据-3\" class=\"headerlink\" title=\"删除100个表里面的所有数据\"></a>删除100个表里面的所有数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">delimiter //</div><div class=\"line\">CREATE procedure delete50000()</div><div class=\"line\">BEGIN</div><div class=\"line\">DECLARE `@i` int(11);</div><div class=\"line\">DECLARE `@sqlstr` varchar(2560);</div><div class=\"line\">SET `@i`=1;</div><div class=\"line\">WHILE `@i` &lt; 101 DO</div><div class=\"line\">SET @sqlstr = CONCAT(&quot;delete from testdb.articles&quot;,`@i`);</div><div class=\"line\">prepare stmt from @sqlstr;</div><div class=\"line\">execute stmt;</div><div class=\"line\">SET `@i` = `@i` + 1;</div><div class=\"line\">END WHILE;</div><div class=\"line\">END;</div><div class=\"line\">call delete50000();</div><div class=\"line\">drop procedure delete50000;</div><div class=\"line\">//</div></pre></td></tr></table></figure>\n<h1 id=\"kingbase\"><a href=\"#kingbase\" class=\"headerlink\" title=\"kingbase\"></a>kingbase</h1><h2 id=\"Jdbc驱动-5\"><a href=\"#Jdbc驱动-5\" class=\"headerlink\" title=\"Jdbc驱动\"></a>Jdbc驱动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc:kingbase://%s:%d/%s</div></pre></td></tr></table></figure>\n<h2 id=\"url-5\"><a href=\"#url-5\" class=\"headerlink\" title=\"url\"></a>url</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.kingbase.Driver</div></pre></td></tr></table></figure>\n<h2 id=\"获取所有表-5\"><a href=\"#获取所有表-5\" class=\"headerlink\" title=\"获取所有表\"></a>获取所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT table_name FROM information_schema.tables WHERE table_schema=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询表是否存在-4\"><a href=\"#查询表是否存在-4\" class=\"headerlink\" title=\"查询表是否存在\"></a>查询表是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT table_name FROM information_schema.tables WHERE table_schema=&apos;%s&apos; AND table_name=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询表字段类型-3\"><a href=\"#查询表字段类型-3\" class=\"headerlink\" title=\"查询表字段类型\"></a>查询表字段类型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select column_name, data_type from information_schema.columns where table_schema = &apos;%s&apos; and table_name = &apos;%s&apos;</div></pre></td></tr></table></figure>\n<h2 id=\"创建序列-1\"><a href=\"#创建序列-1\" class=\"headerlink\" title=\"创建序列\"></a>创建序列</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE SEQUENCE %s.%s START 1 INCREMENT 1;</div></pre></td></tr></table></figure>\n<h2 id=\"删除序列-1\"><a href=\"#删除序列-1\" class=\"headerlink\" title=\"删除序列\"></a>删除序列</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop SEQUENCE %s.%s;</div></pre></td></tr></table></figure>\n<h2 id=\"创建表-4\"><a href=\"#创建表-4\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TABLE %s.%s</div><div class=\"line\">(</div><div class=\"line\">  id INT DEFAULT NEXTVAL(&apos;%s.%s&apos;),</div><div class=\"line\">  dbName VARCHAR(20),</div><div class=\"line\">  tableName VARCHAR(20),</div><div class=\"line\">  pkNames VARCHAR(255),</div><div class=\"line\">  newPkValues VARCHAR(255),</div><div class=\"line\">  oldPkValues VARCHAR(255),</div><div class=\"line\">  action VARCHAR(20),</div><div class=\"line\">  PRIMARY KEY(id)</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<h2 id=\"查询主键-5\"><a href=\"#查询主键-5\" class=\"headerlink\" title=\"查询主键\"></a>查询主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"># table_catalog 对应数据库名</div><div class=\"line\">SELECT a.column_name FROM information_schema.key_column_usage a</div><div class=\"line\">INNER JOIN information_schema.table_constraints b</div><div class=\"line\">ON (a.constraint_name = b.constraint_name)</div><div class=\"line\">WHERE a.table_schema = &apos;%s&apos; AND b.table_schema = &apos;%s&apos;</div><div class=\"line\">AND b.table_catalog = &apos;%s&apos; AND b.table_name = &apos;%s&apos;</div><div class=\"line\">AND b.constraint_type = &apos;PRIMARY KEY&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询外键-4\"><a href=\"#查询外键-4\" class=\"headerlink\" title=\"查询外键\"></a>查询外键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"># nspname 对应schema</div><div class=\"line\">select sys_class.relname as table_name,sys_attribute.attname as column name,fk.conname as</div><div class=\"line\">constraint_name form (select unnest(sys_constraint.conkey),conname,sys_constraint.conrelid,</div><div class=\"line\">sys_constraint.confrelid form sys_constraint,sys_namespace where sys_constraint.connamespace</div><div class=\"line\">=sys_namespace.oid and sys_namespace.nspname=’%s’ and contype=’f’ )fk,sys_attribute,sys_class,all_constraints</div><div class=\"line\">where fk.unnest=sys_attribute.attnum and fk.conrelid=sys_attribute.attrelid and</div><div class=\"line\">fk.confrelid=sys_class.oid and fk.conname=all_constraints.constaint_name and sys_class.relname=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"关闭外键约束-4\"><a href=\"#关闭外键约束-4\" class=\"headerlink\" title=\"关闭外键约束\"></a>关闭外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %S alter foreign key %s not enforced;#最后一个参数为某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"启用外键约束-3\"><a href=\"#启用外键约束-3\" class=\"headerlink\" title=\"启用外键约束\"></a>启用外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s alter foreign key %s enforced;</div></pre></td></tr></table></figure>\n<h2 id=\"触发器-3\"><a href=\"#触发器-3\" class=\"headerlink\" title=\"触发器\"></a>触发器</h2><p>设7.8创建的表为events,且有表teclan如下(“PUBLIC” 为schema,”TECLAN” 为表名)：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table teclan</div><div class=\"line\">(</div><div class=\"line\">id int,</div><div class=\"line\">name varchar(10),</div><div class=\"line\">age int,</div><div class=\"line\">sex varchar(10)</div><div class=\"line\">);</div><div class=\"line\">alter table teclan add primay key(id,name);</div></pre></td></tr></table></figure></p>\n<h3 id=\"insert触发器-4\"><a href=\"#insert触发器-4\" class=\"headerlink\" title=\"insert触发器\"></a>insert触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE TRIGGER triggerNameForInsert</div><div class=\"line\">AFTER INSERT ON PUBLIC.&quot;TECLAN&quot;</div><div class=\"line\">FOR EACH ROW AS</div><div class=\"line\">BEGIN</div><div class=\"line\">INSERT INTO PUBLIC.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues,action)</div><div class=\"line\">VALUES (&apos;TECLAN&apos;,&apos;TECLAN&apos;,&apos;ID,NAME&apos;,(NEW.&quot;ID&quot;||&apos;,&apos;||NEW.&quot;NAME&quot;),(null),&apos;INSERT&apos;);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"update触发器-4\"><a href=\"#update触发器-4\" class=\"headerlink\" title=\"update触发器\"></a>update触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE TRIGGER PIXIU_SYNC_TECLAN_UPDATE</div><div class=\"line\">AFTER UPDATE ON PUBLIC.&quot;TECLAN&quot;</div><div class=\"line\">FOR EACH ROW AS</div><div class=\"line\">BEGIN</div><div class=\"line\">INSERT INTO PUBLIC.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues,action)</div><div class=\"line\">VALUES (&apos;TECLAN&apos;,&apos;TECLAN&apos;,&apos;ID,NAME&apos;,(NEW.&quot;ID&quot;||&apos;,&apos;||NEW.&quot;NAME&quot;),(OLD.&quot;ID&quot;||&apos;,&apos;||OLD.&quot;NAME&quot;),&apos;UPDATE&apos;);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"delete触发器-4\"><a href=\"#delete触发器-4\" class=\"headerlink\" title=\"delete触发器\"></a>delete触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE TRIGGER PIXIU_SYNC_TECLAN_DELETE</div><div class=\"line\">AFTER DELETE ON PUBLIC.&quot;TECLAN&quot;</div><div class=\"line\">FOR EACH ROW AS</div><div class=\"line\">BEGIN I</div><div class=\"line\">NSERT INTO PUBLIC.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues,action)</div><div class=\"line\">VALUES (&apos;TECLAN&apos;,&apos;TECLAN&apos;,&apos;ID,NAME&apos;,(null),(OLD.&quot;ID&quot;||&apos;,&apos;||OLD.&quot;NAME&quot;),&apos;DELETE&apos;);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"删除触发器-4\"><a href=\"#删除触发器-4\" class=\"headerlink\" title=\"删除触发器\"></a>删除触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop trigger triggerName; #triggerName 为指定删除的触发器</div></pre></td></tr></table></figure>\n<h2 id=\"存储过程实例-5\"><a href=\"#存储过程实例-5\" class=\"headerlink\" title=\"存储过程实例\"></a>存储过程实例</h2><h3 id=\"创建100个表-5\"><a href=\"#创建100个表-5\" class=\"headerlink\" title=\"创建100个表\"></a>创建100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">create or replace procedure p0()</div><div class=\"line\">as</div><div class=\"line\">declare</div><div class=\"line\">  i integer;</div><div class=\"line\">begin</div><div class=\"line\">  for i in 1..100 loop</div><div class=\"line\">      Execute immediate &apos;create TABLE &quot;PUBLIC&quot;.&quot;articles&apos;||i||&apos;&quot;</div><div class=\"line\">       (&quot;id&quot;   integer,</div><div class=\"line\">        &quot;content&quot;  varchar(2000),</div><div class=\"line\">        primary key(&quot;id&quot;))&apos;;</div><div class=\"line\">   end loop;</div><div class=\"line\">   end;</div><div class=\"line\">call p0;</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表-5\"><a href=\"#删除100个表-5\" class=\"headerlink\" title=\"删除100个表\"></a>删除100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">create or replace procedure p0()</div><div class=\"line\">as</div><div class=\"line\">declare</div><div class=\"line\">  i integer;</div><div class=\"line\">begin</div><div class=\"line\">  for i in 1..100 loop</div><div class=\"line\">      Execute immediate &apos;drop TABLE &quot;PUBLIC&quot;.&quot;articles&apos;||i||&apos;&quot;&apos;;</div><div class=\"line\">   end loop;</div><div class=\"line\">   end;</div><div class=\"line\">call p0;</div></pre></td></tr></table></figure>\n<h3 id=\"往100个表添加数据，每个表500条记录-2\"><a href=\"#往100个表添加数据，每个表500条记录-2\" class=\"headerlink\" title=\"往100个表添加数据，每个表500条记录\"></a>往100个表添加数据，每个表500条记录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">create or replace procedure insert_articles() as</div><div class=\"line\"> declare i integer :=1;</div><div class=\"line\"> j integer :=1;</div><div class=\"line\"> begin</div><div class=\"line\">for i in 1..100 loop</div><div class=\"line\">  for j in 1..500 loop</div><div class=\"line\">  execute immediate&apos;insert into &quot;PUBLIC&quot;.&quot;articles&apos;||i||&apos;&quot; values(&apos;||j||&apos;,&apos;&apos;昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅&apos;&apos;)&apos;;</div><div class=\"line\">end loop;</div><div class=\"line\">end loop;</div><div class=\"line\">end;</div><div class=\"line\">call insert_articles;</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表里面的所有数据-4\"><a href=\"#删除100个表里面的所有数据-4\" class=\"headerlink\" title=\"删除100个表里面的所有数据\"></a>删除100个表里面的所有数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">create or replace procedure p0()</div><div class=\"line\">as</div><div class=\"line\">declare</div><div class=\"line\">  i integer;</div><div class=\"line\">begin</div><div class=\"line\">  for i in 1..100 loop</div><div class=\"line\">      Execute immediate &apos;delete from &quot;PUBLIC&quot;.&quot;articles&apos;||i||&apos;&quot;&apos;;</div><div class=\"line\">   end loop;</div><div class=\"line\">   end;</div><div class=\"line\">call p0;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<blockquote>\n<p>操作表，序列，触发器等时最好都加上schema修饰，以下部分sql中为清晰起见，省略schema修饰。<br>  以下 triggerNameForInsert，triggerNameForUpdatet,triggerNameForDelete 均指代<br>  触发器名，并且包含schema修饰。</p>\n</blockquote>\n<h1 id=\"Oracle\"><a href=\"#Oracle\" class=\"headerlink\" title=\"Oracle\"></a>Oracle</h1><blockquote>\n<p>owner 是对应的schema，要大写,url中的参数依次是ip,端口，数据库名，以下所有SQL是根据本人用到的做的记录，需要时请自行调整更改。</p>\n</blockquote>\n<h2 id=\"Jdbc驱动\"><a href=\"#Jdbc驱动\" class=\"headerlink\" title=\"Jdbc驱动\"></a>Jdbc驱动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">oracle.jdbc.driver.OracleDriver</div></pre></td></tr></table></figure>\n<h2 id=\"url\"><a href=\"#url\" class=\"headerlink\" title=\"url\"></a>url</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc:oracle:thin:@%s:%d:%s</div></pre></td></tr></table></figure>\n<h2 id=\"查询表主键\"><a href=\"#查询表主键\" class=\"headerlink\" title=\"查询表主键\"></a>查询表主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT column_name FROM user_cons_columns WHERE constraint_name = (</div><div class=\"line\">SELECT constraint_name FROM user_constraints WHERE table_name= &apos;%s&apos;</div><div class=\"line\">AND constraint_type =&apos;P&apos;)；</div></pre></td></tr></table></figure>\n<h2 id=\"查询表字段类型\"><a href=\"#查询表字段类型\" class=\"headerlink\" title=\"查询表字段类型\"></a>查询表字段类型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select column_name, data_type from all_tab_columns where owner = &apos;%s&apos; and table_name = &apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"获取所有表\"><a href=\"#获取所有表\" class=\"headerlink\" title=\"获取所有表\"></a>获取所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select table_name from all_tables where owner=upper(&apos;%s&apos;)；</div></pre></td></tr></table></figure>\n<h2 id=\"查询表是否存在\"><a href=\"#查询表是否存在\" class=\"headerlink\" title=\"查询表是否存在\"></a>查询表是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT 1 FROM user_tables WHERE table_name=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"查询序列是否存在\"><a href=\"#查询序列是否存在\" class=\"headerlink\" title=\"查询序列是否存在\"></a>查询序列是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select SEQUENCE_NAME from user_sequences where SEQUENCE_NAME = &apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"创建序列\"><a href=\"#创建序列\" class=\"headerlink\" title=\"创建序列\"></a>创建序列</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE SEQUENCE \\&quot;%s\\&quot;.\\&quot;%s\\&quot; INCREMENT BY 1 START WITH 0 MINVALUE 0 NOMAXVALUE；</div></pre></td></tr></table></figure>\n<h2 id=\"删除序列\"><a href=\"#删除序列\" class=\"headerlink\" title=\"删除序列\"></a>删除序列</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">DROP SEQUENCE %s.%s；</div></pre></td></tr></table></figure>\n<h2 id=\"创建表\"><a href=\"#创建表\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TABLE %s.%s (</div><div class=\"line\">  id              NUMBER          NOT NULL PRIMARY KEY,</div><div class=\"line\">  dbName          VARCHAR2(50)    NOT NULL,</div><div class=\"line\">  tableName       VARCHAR2(50)    NOT NULL,</div><div class=\"line\">  pkNames         VARCHAR2(2000)  NOT NULL,</div><div class=\"line\">  newPkValues     VARCHAR2(2000),</div><div class=\"line\">  oldPkValues     VARCHAR2(2000),</div><div class=\"line\">  action          VARCHAR2(20)    NOT NULL</div><div class=\"line\">  )；</div></pre></td></tr></table></figure>\n<h2 id=\"查询表上是否存在某个触发器\"><a href=\"#查询表上是否存在某个触发器\" class=\"headerlink\" title=\"查询表上是否存在某个触发器\"></a>查询表上是否存在某个触发器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT trigger_name FROM all_triggers WHERE owner=&apos;%s&apos; AND table_name=&apos;%s&apos; AND trigger_name=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"查询外键\"><a href=\"#查询外键\" class=\"headerlink\" title=\"查询外键\"></a>查询外键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">select ucc.constraint_name from user_cons_columns ucc</div><div class=\"line\">join user_constraints uc on ucc.owner=uc.owner and ucc.constraint_name= uc.constraint_name</div><div class=\"line\">join user_constraints uc_pk ON uc.r_owner= uc_pk.owner and uc.r_constraint_name=uc_pk.constraint_name</div><div class=\"line\">where uc.constraint_type=&apos;R&apos; and ucc.table_name=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"关闭外键约束\"><a href=\"#关闭外键约束\" class=\"headerlink\" title=\"关闭外键约束\"></a>关闭外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s.%s disable constraint %s；#最后一个参数是某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"启用外键约束\"><a href=\"#启用外键约束\" class=\"headerlink\" title=\"启用外键约束\"></a>启用外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s.%s enable constraint %s；#最后一个参数是某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"触发器\"><a href=\"#触发器\" class=\"headerlink\" title=\"触发器\"></a>触发器</h2><p>设1.10创建的表记为 events,用来记录没一条记录的变化，events_seq是存在的一个序列，设有表teclan<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table teclan</div><div class=\"line\">(</div><div class=\"line\">  id number,</div><div class=\"line\">  name varchar(10),</div><div class=\"line\">  age number,</div><div class=\"line\">  sex varchar(10)</div><div class=\"line\">);</div><div class=\"line\">alter table taclan add  primary key(id,name);</div></pre></td></tr></table></figure></p>\n<p>在表teclan上创建触发器，用来记录所有记录的变化，信息存到events表。</p>\n<h3 id=\"insert触发器\"><a href=\"#insert触发器\" class=\"headerlink\" title=\"insert触发器\"></a>insert触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE TRIGGER triggerNameForInsert  #triggerNameForInsert为触发器名，自定义</div><div class=\"line\">AFTER INSERT ON teclan</div><div class=\"line\">FOR EACH ROW</div><div class=\"line\">BEGIN</div><div class=\"line\">INSERT INTO events VALUES (events_seq.nextval ,&apos;xe&apos;,&apos;teclan&apos;,&apos;ID,NAME&apos;,(:NEW.&quot;ID&quot;||&apos;,&apos;||:NEW.&quot;NAME&quot;),</div><div class=\"line\">(:OLD.&quot;ID&quot;||&apos;,&apos;||:OLD.&quot;NAME&quot;),&apos;INSERT&apos;);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"update触发器\"><a href=\"#update触发器\" class=\"headerlink\" title=\"update触发器\"></a>update触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE TRIGGER triggerNameForUpdatet</div><div class=\"line\">AFTER UPDATE ON teclan</div><div class=\"line\">FOR EACH ROW</div><div class=\"line\">BEGIN</div><div class=\"line\">INSERT INTO events VALUES (events_seq.nextval ,&apos;xe&apos;,&apos;teclan&apos;,&apos;ID,NAME&apos;,(:NEW.&quot;ID&quot;||&apos;,&apos;||:NEW.&quot;NAME&quot;),</div><div class=\"line\">(:OLD.&quot;ID&quot;||&apos;,&apos;||:OLD.&quot;NAME&quot;),&apos;UPDATE&apos;);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"delete触发器\"><a href=\"#delete触发器\" class=\"headerlink\" title=\"delete触发器\"></a>delete触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE TRIGGER triggerNameForDelete</div><div class=\"line\">AFTER DELETE ON teclan</div><div class=\"line\">FOR EACH ROW</div><div class=\"line\">BEGIN INSERT INTO events VALUES (events_seq.nextval ,&apos;xe&apos;,&apos;teclan&apos;,&apos;ID,NAME&apos;,(:NEW.&quot;ID&quot;||&apos;,&apos;||:NEW.&quot;NAME&quot;),</div><div class=\"line\">(:OLD.&quot;ID&quot;||&apos;,&apos;||:OLD.&quot;NAME&quot;),&apos;DELETE&apos;);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"删除触发器\"><a href=\"#删除触发器\" class=\"headerlink\" title=\"删除触发器\"></a>删除触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop trigger triggerName; #triggerName为指定要删除的触发器</div></pre></td></tr></table></figure>\n<h2 id=\"查询数据库中各个表的记录数\"><a href=\"#查询数据库中各个表的记录数\" class=\"headerlink\" title=\"查询数据库中各个表的记录数\"></a>查询数据库中各个表的记录数</h2><h3 id=\"创建函数\"><a href=\"#创建函数\" class=\"headerlink\" title=\"创建函数\"></a>创建函数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">create or replace function count_rows(table_name in varchar2,owner in varchar2 default null)</div><div class=\"line\">return number</div><div class=\"line\">authid current_user</div><div class=\"line\">IS</div><div class=\"line\">   num_rows number;</div><div class=\"line\">   stmt varchar2(2000);</div><div class=\"line\">begin</div><div class=\"line\">   if owner is null then</div><div class=\"line\">      stmt := &apos;select count(*) from &quot;&apos;||table_name||&apos;&quot;&apos;;</div><div class=\"line\">   else</div><div class=\"line\">      stmt := &apos;select count(*) from &quot;&apos;||owner||&apos;&quot;.&quot;&apos;||table_name||&apos;&quot;&apos;;</div><div class=\"line\">   end if;</div><div class=\"line\">   execute immediate stmt into num_rows;</div><div class=\"line\">   return num_rows;</div><div class=\"line\">end;</div></pre></td></tr></table></figure>\n<h3 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select table_name, count_rows(table_name)  nrows from user_tables order by nrows desc;</div></pre></td></tr></table></figure>\n<h2 id=\"存储过程实例\"><a href=\"#存储过程实例\" class=\"headerlink\" title=\"存储过程实例\"></a>存储过程实例</h2><h3 id=\"创建100个表\"><a href=\"#创建100个表\" class=\"headerlink\" title=\"创建100个表\"></a>创建100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare i</div><div class=\"line\">integer :=1;</div><div class=\"line\">begin</div><div class=\"line\">  loop</div><div class=\"line\">    if i &lt; 101 then</div><div class=\"line\">      Execute immediate&apos;create TABLE&apos;||&apos;&quot;USER1&quot;.&quot;articles&apos;||i||&apos;&quot;&apos;||</div><div class=\"line\">       &apos;(&quot;id&quot;       NUMBER(*,0),</div><div class=\"line\">         &quot;content&quot;  clob,</div><div class=\"line\">       PRIMARY KEY (&quot;id&quot;))&apos;;</div><div class=\"line\">       i:= i+1;</div><div class=\"line\">     else exit;</div><div class=\"line\">   end if;</div><div class=\"line\">  end loop;</div><div class=\"line\">end;</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表\"><a href=\"#删除100个表\" class=\"headerlink\" title=\"删除100个表\"></a>删除100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare i</div><div class=\"line\">integer :=1;</div><div class=\"line\">begin</div><div class=\"line\">  loop</div><div class=\"line\">    if i &lt; 101 then</div><div class=\"line\">      Execute immediate&apos;drop table &quot;USER1&quot;.&quot;articles&apos;||i||&apos;&quot;&apos;;</div><div class=\"line\">       i:= i+1;</div><div class=\"line\">     else exit;</div><div class=\"line\">    end if;</div><div class=\"line\">  end loop;</div><div class=\"line\">end;</div></pre></td></tr></table></figure>\n<h3 id=\"往100个表插入数据，每个表500条记录\"><a href=\"#往100个表插入数据，每个表500条记录\" class=\"headerlink\" title=\"往100个表插入数据，每个表500条记录\"></a>往100个表插入数据，每个表500条记录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare</div><div class=\"line\">i integer :=1;</div><div class=\"line\">j integer :=1;</div><div class=\"line\">sqlstr varchar(2000);</div><div class=\"line\">begin</div><div class=\"line\">  for i in 1..100 loop</div><div class=\"line\">    for j in 1..500 loop</div><div class=\"line\">      sqlstr := &apos;insert into &quot;USER1&quot;.&quot;users&apos;||TO_CHAR(i)||&apos;&quot; values(&apos;||j||&apos;,&apos;&apos;昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅&apos;&apos;)&apos;;</div><div class=\"line\">      execute immediate sqlstr;</div><div class=\"line\">    end loop;</div><div class=\"line\">   end loop;</div><div class=\"line\">   commit;</div><div class=\"line\">end;</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个里面的所有数据\"><a href=\"#删除100个里面的所有数据\" class=\"headerlink\" title=\"删除100个里面的所有数据\"></a>删除100个里面的所有数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare i</div><div class=\"line\">integer :=1;</div><div class=\"line\">begin</div><div class=\"line\">  loop</div><div class=\"line\">    if i &lt; 101 then</div><div class=\"line\">      Execute immediate&apos;delete from &quot;USER1&quot;.&quot;users&apos;||i||&apos;&quot;&apos;;</div><div class=\"line\">       i:= i+1;</div><div class=\"line\">     else exit;</div><div class=\"line\">    end if;</div><div class=\"line\">  end loop;</div><div class=\"line\">  commit;</div><div class=\"line\">end;</div></pre></td></tr></table></figure>\n<h1 id=\"达梦数据库\"><a href=\"#达梦数据库\" class=\"headerlink\" title=\"达梦数据库\"></a>达梦数据库</h1><p>  除以下特别指出外，其余参考Oracle</p>\n<blockquote>\n<p>sysobjects.object_name 为库模式，user_constraints.table_name 为表名</p>\n</blockquote>\n<h2 id=\"查询主键\"><a href=\"#查询主键\" class=\"headerlink\" title=\"查询主键\"></a>查询主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT column_name FROM user_cons_columns WHERE constraint_name = (select sysobjects.name from</div><div class=\"line\">sysobjects ,all_objects,user_constraints where object_type=&apos;SCH&apos; and object_name = &apos;%s&apos;</div><div class=\"line\">and sysobjects.schid = all_objects.object_id  and type$=&apos;TABOBJ&apos; and sysobjects.subtype$=&apos;CONS&apos;</div><div class=\"line\">and user_constraints.table_name= &apos;%s&apos; AND user_constraints.constraint_type =&apos;P&apos;</div><div class=\"line\">and user_constraints.constraint_name = sysobjects.name)</div></pre></td></tr></table></figure>\n<h2 id=\"查询所有表\"><a href=\"#查询所有表\" class=\"headerlink\" title=\"查询所有表\"></a>查询所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">select sysobjects.name from sysobjects,all_objects where object_type=&apos;SCH&apos; and object_name = &apos;%s&apos;</div><div class=\"line\">and sysobjects.schid = all_objects.object_id and sysobjects.type$=&apos;SCHOBJ&apos; and sysobjects.subtype$=&apos;UTAB&apos;</div></pre></td></tr></table></figure>\n<h2 id=\"存储过程实例-1\"><a href=\"#存储过程实例-1\" class=\"headerlink\" title=\"存储过程实例\"></a>存储过程实例</h2><h3 id=\"创建100个表-1\"><a href=\"#创建100个表-1\" class=\"headerlink\" title=\"创建100个表\"></a>创建100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare sqls varchar;</div><div class=\"line\">begin</div><div class=\"line\">  for i in 1..100 loop</div><div class=\"line\">       set sqls = &apos;CREATE TABLE &quot;TESTER&quot;.&quot;users&apos;||TO_CHAR(i)||&apos;&quot;</div><div class=\"line\">       (&quot;id&quot;  INTEGER NOT NULL,</div><div class=\"line\">       &quot;content&quot;  VARCHAR2(2000),</div><div class=\"line\">       NOT CLUSTER PRIMARY KEY(&quot;id&quot;)) STORAGE(ON &quot;MAIN&quot;, CLUSTERBTR)&apos;;</div><div class=\"line\">       EXECUTE IMMEDIATE sqls;</div><div class=\"line\">  end loop;</div><div class=\"line\">  commit;</div><div class=\"line\"> end;</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表-1\"><a href=\"#删除100个表-1\" class=\"headerlink\" title=\"删除100个表\"></a>删除100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare sqls varchar;</div><div class=\"line\">begin</div><div class=\"line\"> for i in 1..100 loop</div><div class=\"line\">       set sqls = &apos;drop TABLE &quot;TESTER&quot;.&quot;users&apos;||TO_CHAR(i)||&apos;&quot;&apos;;</div><div class=\"line\">       EXECUTE IMMEDIATE sqls;</div><div class=\"line\"> end loop;</div><div class=\"line\">       commit;</div><div class=\"line\"> end;</div></pre></td></tr></table></figure>\n<h3 id=\"往100个表添加数据，每个表500条\"><a href=\"#往100个表添加数据，每个表500条\" class=\"headerlink\" title=\"往100个表添加数据，每个表500条\"></a>往100个表添加数据，每个表500条</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">DECLARE</div><div class=\"line\">i integer :=1;</div><div class=\"line\">j integer :=1;</div><div class=\"line\">sqlstr varchar;</div><div class=\"line\">textstr varchar := &apos;这本书本身的内容并不甘甜,因为里头夹杂着太多不忍与亲身体验的辛酸。苦苦的味道,为这本纪录中国千年文化的书,多写了一道滋味。只有书籍能把个高贵的生命早已遗逝的信号传递给你，只有书籍能把一切美好和智慧对比着丑陋与愚蠢呈现给你。我带着崇敬的心情翻开了它，跟随余秋雨的脚步，去重新认识这些古老深厚的文明，没有肤浅的欢笑，有的只是与作者一起感慨，一起深思。《风雨天一阁》写了一座经历数百年风雨沧桑的普通的楼阁，被一代代人世代保护着，却终被强盗偷窃所骚扰，成为“一种极端艰难，又极其悲怆的文化奇迹”。天一阁承载的文明与历史太多太多。天一阁的命运正是当时中华文化的命运，中华的许多许多文化宝藏在静静地经历数百年甚至数千年的风雨洗礼之后，竟未为人所敬，不为人所珍，最终落入虎口。而当其几近灭亡时，人们才恍然醒悟，慌忙中搜寻回几粒残碎不堪文化碎片，叹息不已，可惜已晚了。《苏东坡突围》使我明白才华横溢、豪放高达的一代文豪苏东坡被一群奸诈卑鄙﹑强词夺理的小人诬陷时的无奈与痛苦，被排挤，被批判，被嘲笑，被流放，可他却并未丧失继续努力生活、前进的勇气。我小时候曾为苏轼美妙清澈的水调歌头所倾心，为他“会挽雕弓如满月，西北望射天狼”的豪情壮志所震撼。&apos;;</div><div class=\"line\">BEGIN</div><div class=\"line\">  FOR i in 1..100 LOOP</div><div class=\"line\">    FOR j in 1..500 LOOP</div><div class=\"line\">      set sqlstr := &apos;insert into &quot;TESTER&quot;.&quot;users&apos;||i||&apos;&quot; values(&apos;||j||&apos;, &apos;&apos;&apos;||textstr||&apos;&apos;&apos;)&apos;;</div><div class=\"line\">      execute immediate sqlstr;</div><div class=\"line\">      --insert into TESTER.&quot;users1&quot; values (1,&apos;这本书本身的内容并不甘甜&apos;);</div><div class=\"line\">  END LOOP;</div><div class=\"line\"> END LOOP;</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表里面的所有数据\"><a href=\"#删除100个表里面的所有数据\" class=\"headerlink\" title=\"删除100个表里面的所有数据\"></a>删除100个表里面的所有数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare sqls varchar;</div><div class=\"line\">begin</div><div class=\"line\"> for i in 1..100 loop</div><div class=\"line\">       set sqls = &apos;delete from &quot;TESTER&quot;.&quot;users&apos;||TO_CHAR(i)||&apos;&quot;&apos;;</div><div class=\"line\">       EXECUTE IMMEDIATE sqls;</div><div class=\"line\"> end loop;</div><div class=\"line\"> commit;</div><div class=\"line\"> end;</div></pre></td></tr></table></figure>\n<h1 id=\"Sqlserver2k\"><a href=\"#Sqlserver2k\" class=\"headerlink\" title=\"Sqlserver2k\"></a>Sqlserver2k</h1><blockquote>\n<p>o.name 指定表名,sqlserver默认的schema是dbo</p>\n</blockquote>\n<h2 id=\"Jdbc驱动-1\"><a href=\"#Jdbc驱动-1\" class=\"headerlink\" title=\"Jdbc驱动\"></a>Jdbc驱动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.microsoft.jdbc.sqlserver.SQLServerDriver</div></pre></td></tr></table></figure>\n<h2 id=\"url-1\"><a href=\"#url-1\" class=\"headerlink\" title=\"url\"></a>url</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc:microsoft:sqlserver://%s:%d;DatabaseName=%s</div></pre></td></tr></table></figure>\n<h2 id=\"查询主键-1\"><a href=\"#查询主键-1\" class=\"headerlink\" title=\"查询主键\"></a>查询主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT c.name AS name FROM sysobjects o INNER JOIN sysindexes x ON o.id = x.id INNER</div><div class=\"line\">JOIN syscolumns c ON o.id = c.id INNER</div><div class=\"line\">JOIN sysindexkeys xk ON o.id = xk.id</div><div class=\"line\">AND x.indid = xk.indid AND c.colid = xk.colid</div><div class=\"line\">AND x.keycnt &gt;= xk.keyno WHERE o.name = &apos;%s&apos; AND (o.type IN (&apos;U&apos;)) AND (x.status &amp; 32 = 0)</div><div class=\"line\">AND (CONVERT(bit, (x.status &amp; 0x800) / 0x800) = 1);</div></pre></td></tr></table></figure>\n<h2 id=\"查询表字段类型-1\"><a href=\"#查询表字段类型-1\" class=\"headerlink\" title=\"查询表字段类型\"></a>查询表字段类型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">select users.name as schema_name,o.name as table_name, c.name as column_name, t.name as data_type </div><div class=\"line\">from syscolumns c, sysobjects o, systypes t,dbo.sysusers users where o.name = &apos;%s&apos; and users.name = &apos;%s&apos; and users.uid =o.uid and c.id = o.id and c.xtype = t.xtype;</div><div class=\"line\"># 其中，第一个参数为表名，第二个参数为模式名（用户名）</div></pre></td></tr></table></figure>\n<h2 id=\"获取所有表-1\"><a href=\"#获取所有表-1\" class=\"headerlink\" title=\"获取所有表\"></a>获取所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select table_name from information_schema.tables where table_type=&apos;base table&apos; and table_schema=&apos;%s&apos;&quot;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询表是否存在-1\"><a href=\"#查询表是否存在-1\" class=\"headerlink\" title=\"查询表是否存在\"></a>查询表是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT name FROM dbo.sysobjects WHERE name=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"创建表-1\"><a href=\"#创建表-1\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TABLE %s.%s</div><div class=\"line\">(</div><div class=\"line\">id INTEGER IDENTITY(1,1) NOT NULL PRIMARY KEY, #自增字段</div><div class=\"line\">dbName     VARCHAR(30),</div><div class=\"line\">tableName  VARCHAR(30),</div><div class=\"line\">pkNames    VARCHAR(2000),</div><div class=\"line\">newPkValues   VARCHAR(2000),</div><div class=\"line\">oldPkValues   VARCHAR(2000),</div><div class=\"line\">action     VARCHAR(20)</div><div class=\"line\">)；</div></pre></td></tr></table></figure>\n<h2 id=\"查询外键-1\"><a href=\"#查询外键-1\" class=\"headerlink\" title=\"查询外键\"></a>查询外键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">select distinct a.table_name, b.column_name,b.constraint_name,object_name(rkeyid) r_table_name  </div><div class=\"line\">from information_schema.table_constraints a, information_schema.constraint_column_usage b, sysforeignkeys c</div><div class=\"line\">where a.constraint_type=&apos;foreign key&apos; and a.constraint_name= b.constraint_name and object_name(fkeyid)=a.table_name</div><div class=\"line\">and object_name(constid)=a.constraint_name and a.table_name=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"关闭外键约束-1\"><a href=\"#关闭外键约束-1\" class=\"headerlink\" title=\"关闭外键约束\"></a>关闭外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s nocheck constraint %s；#最后一个参数为某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"启用为外键约束\"><a href=\"#启用为外键约束\" class=\"headerlink\" title=\"启用为外键约束\"></a>启用为外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s check constraint %s;#最后一个参数为某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"查询表上面是否存在某个触发器\"><a href=\"#查询表上面是否存在某个触发器\" class=\"headerlink\" title=\"查询表上面是否存在某个触发器\"></a>查询表上面是否存在某个触发器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT name FROM dbo.sysobjects WHERE type=&apos;TR&apos; AND name=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"创建触发器\"><a href=\"#创建触发器\" class=\"headerlink\" title=\"创建触发器\"></a>创建触发器</h2><p>设3.7创建的表为events，且有表teclan如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table teclan</div><div class=\"line\">(</div><div class=\"line\">id int,</div><div class=\"line\">name varchar(10),</div><div class=\"line\">age int,</div><div class=\"line\">sex varchar(10)</div><div class=\"line\">);</div><div class=\"line\">alter table teclan add primary key(id,name);</div></pre></td></tr></table></figure></p>\n<h3 id=\"insert触发器-1\"><a href=\"#insert触发器-1\" class=\"headerlink\" title=\"insert触发器\"></a>insert触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForInsert</div><div class=\"line\">ON dbo.teclan</div><div class=\"line\">FOR INSERT</div><div class=\"line\">AS</div><div class=\"line\">DECLARE</div><div class=\"line\">@newid VARCHAR(20),@oldid VARCHAR(20),</div><div class=\"line\">@newname VARCHAR(20),@oldname VARCHAR(20)</div><div class=\"line\">BEGIN</div><div class=\"line\">select @newid=CONVERT(VARCHAR(200),id) from inserted</div><div class=\"line\">select @oldid=CONVERT(VARCHAR(200),id) from deleted</div><div class=\"line\">select @newname=CONVERT(VARCHAR(200),name) from inserted</div><div class=\"line\">select @oldname=CONVERT(VARCHAR(200),name) from deleted  </div><div class=\"line\">INSERT INTO dbo.events(dbName, tableName, pkNames, newPkValues, oldPkValues, action)</div><div class=\"line\">VALUES (&apos;testdb&apos;, &apos;teclan&apos;, &apos;id,name&apos;, @newid+&apos;,&apos;+@newname, @oldid+&apos;,&apos;+@oldname , &apos;INSERT&apos;)</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"update触发器-1\"><a href=\"#update触发器-1\" class=\"headerlink\" title=\"update触发器\"></a>update触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForUpdatet</div><div class=\"line\">ON dbo.teclan</div><div class=\"line\">FOR UPDATE</div><div class=\"line\">AS</div><div class=\"line\">DECLARE</div><div class=\"line\">@newid VARCHAR(20),@oldid VARCHAR(20),</div><div class=\"line\">@newname VARCHAR(20),@oldname VARCHAR(20)</div><div class=\"line\">BEGIN</div><div class=\"line\">select @newid=CONVERT(VARCHAR(200),id) from inserted</div><div class=\"line\">select @oldid=CONVERT(VARCHAR(200),id) from deleted</div><div class=\"line\">select @newname=CONVERT(VARCHAR(200),name) from inserted</div><div class=\"line\">select @oldname=CONVERT(VARCHAR(200),name) from deleted  </div><div class=\"line\">INSERT INTO dbo.events(dbName, tableName, pkNames, newPkValues, oldPkValues, action)</div><div class=\"line\">VALUES (&apos;testdb&apos;, &apos;teclan&apos;, &apos;id,name&apos;, @newid+&apos;,&apos;+@newname, @oldid+&apos;,&apos;+@oldname , &apos;UPDATE&apos;)</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"delete触发器-1\"><a href=\"#delete触发器-1\" class=\"headerlink\" title=\"delete触发器\"></a>delete触发器</h3><blockquote>\n<p>关于sqlserver，delete操作如果按insert和update方式创建触发器，那么在执行delete from table 删除表全部数据<br>或者带条件删除某个区间时，触发器只能记录到最后一条数据，为解决这个问题，需要重构触发器，以下是我的方案：<br>当delete操作发生后，我们判断数据库中是否存在 {表名_delete_tmp} 这样一个表，如果存在则将其删掉，之后使用<br>select pknames into {表名_delete_tmp} from deleted,将delete表中的主键值复制到  {表名_delete_tmp}，之后再<br>遍历 {表名_delete_tmp} ，依次获取对应的主键值，再存入events表。<br>特别注意，在inserted和deleted表中不允许使用text,ntext和image这三个字段，意味着如果表中存在这三个字段中的一个<br>或多个字段作为主键时，这个触发器就会无法创建，建议使用varchar（max）代替text和ntext，使用varbinary代替image，微软建议<br>尽量不使用text,ntext和image这三个字段。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">create trigger triggerNameForDelete</div><div class=\"line\">on dbo.teclan</div><div class=\"line\">after DELETE</div><div class=\"line\">as</div><div class=\"line\">DECLARE</div><div class=\"line\">@i int set @i=(select count(table_name) from information_schema.tables where table_type=&apos;base table&apos; and table_schema=&apos;dbo&apos; and table_name=&apos;teclan_delete_tmp&apos;)</div><div class=\"line\">if @i=1</div><div class=\"line\">  drop table teclan_delete_tmp ;</div><div class=\"line\">select id,name into teclan_delete_tmp from deleted;</div><div class=\"line\">declare @rows int  </div><div class=\"line\">declare @id varchar(500)</div><div class=\"line\">declare @name varchar(500)</div><div class=\"line\">set @rows=(select count(*) from teclan_delete_tmp)</div><div class=\"line\">while @rows&gt;0</div><div class=\"line\">begin  </div><div class=\"line\">  set @id=(select top 1 id from teclan_delete_tmp)  </div><div class=\"line\">  set @name=(select top 1 name from teclan_delete_tmp)  </div><div class=\"line\">  insert into dbo.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action)</div><div class=\"line\">  values (&apos;testdb&apos;,&apos;teclan&apos;,&apos;id,name&apos;,&apos;null&apos;,@id+&apos;,&apos;+@name,&apos;DELETE&apos;);</div><div class=\"line\">  delete from teclan_delete_tmp where  id=@id and  name=@name  </div><div class=\"line\">  set @rows=(select count(*) from teclan_delete_tmp)</div><div class=\"line\">end;</div><div class=\"line\">drop table teclan_delete_tmp</div></pre></td></tr></table></figure>\n<h3 id=\"删除触发器-1\"><a href=\"#删除触发器-1\" class=\"headerlink\" title=\"删除触发器\"></a>删除触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop trigger triggerName;#triggerName是要删除的触发器名</div></pre></td></tr></table></figure>\n<h2 id=\"存储过程实例-2\"><a href=\"#存储过程实例-2\" class=\"headerlink\" title=\"存储过程实例\"></a>存储过程实例</h2><h3 id=\"创建100个表-2\"><a href=\"#创建100个表-2\" class=\"headerlink\" title=\"创建100个表\"></a>创建100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">DECLARE @i int</div><div class=\"line\">DECLARE @j int</div><div class=\"line\">DECLARE @table_name varchar(1000)</div><div class=\"line\">SET   @i = 1</div><div class=\"line\">SET   @j = 101 WHILE @i &lt; @j BEGIN</div><div class=\"line\">SET   @table_name = &apos;users&apos; + rtrim(@i) DECLARE @sqlsource_create varchar(1000)</div><div class=\"line\">SET   @sqlsource_create = &apos;create table[dbo].&apos; + @table_name + &apos;(</div><div class=\"line\">\t[id] [int] IDENTITY (1, 1) NOT NULL PRIMARY KEY,</div><div class=\"line\">\t[content] [varchar] (2000) COLLATE Chinese_PRC_CI_AS NULL ,</div><div class=\"line\">\t) ON [PRIMARY]&apos;</div><div class=\"line\">EXEC (@sqlsource_create)</div><div class=\"line\">SET   @i = @i + 1</div><div class=\"line\">END</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表-2\"><a href=\"#删除100个表-2\" class=\"headerlink\" title=\"删除100个表\"></a>删除100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare @i int</div><div class=\"line\">declare @j int</div><div class=\"line\">declare @table_name varchar(1000)</div><div class=\"line\">set @i = 1</div><div class=\"line\">set @j =101</div><div class=\"line\">while @i&lt;@j</div><div class=\"line\">begin</div><div class=\"line\">set @table_name=&apos;users&apos;+rtrim(@i)</div><div class=\"line\">declare @sqlsource_drop varchar(1000)</div><div class=\"line\">set @sqlsource_drop=&apos;drop table[dbo].&apos;+@table_name</div><div class=\"line\">exec(@sqlsource_drop)</div><div class=\"line\">set @i=@i+1</div><div class=\"line\">end</div></pre></td></tr></table></figure>\n<h3 id=\"往100个表添加数据，每个表500条记录\"><a href=\"#往100个表添加数据，每个表500条记录\" class=\"headerlink\" title=\"往100个表添加数据，每个表500条记录\"></a>往100个表添加数据，每个表500条记录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare @i int</div><div class=\"line\">declare @j int</div><div class=\"line\">declare @k int</div><div class=\"line\">declare @table_name varchar(1000)</div><div class=\"line\">declare @sqlstr varchar(2000)</div><div class=\"line\">set @i = 1</div><div class=\"line\">set @j =101</div><div class=\"line\">set @sqlstr = &apos;&apos;&apos;昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅&apos;&apos;&apos;</div><div class=\"line\">while @i&lt;@j</div><div class=\"line\">begin</div><div class=\"line\">set @table_name=&apos;users&apos;+rtrim(@i)</div><div class=\"line\">print @table_name</div><div class=\"line\">declare @sqlsource_insert varchar(2000)</div><div class=\"line\">set @k =0</div><div class=\"line\">while (@k&lt;500)</div><div class=\"line\">begin</div><div class=\"line\">set @sqlsource_insert=&apos;insert into dbo.&apos;+ @table_name +&apos;(content)values(&apos;+ @sqlstr+ &apos;)&apos;</div><div class=\"line\">print @sqlsource_insert</div><div class=\"line\">exec(@sqlsource_insert)</div><div class=\"line\">set @k=@k+1</div><div class=\"line\">end</div><div class=\"line\">set @i=@i+1</div><div class=\"line\">end</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表里面的所有数据-1\"><a href=\"#删除100个表里面的所有数据-1\" class=\"headerlink\" title=\"删除100个表里面的所有数据\"></a>删除100个表里面的所有数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">declare @i int</div><div class=\"line\">declare @j int</div><div class=\"line\">declare @table_name varchar(1000)</div><div class=\"line\">set @i = 1</div><div class=\"line\">set @j =101</div><div class=\"line\">while @i&lt;@j</div><div class=\"line\">begin</div><div class=\"line\">set @table_name=&apos;users&apos;+rtrim(@i)</div><div class=\"line\">declare @sqlsource_drop varchar(1000)</div><div class=\"line\">set @sqlsource_drop=&apos;delete from [dbo].&apos;+@table_name</div><div class=\"line\">exec(@sqlsource_drop)</div><div class=\"line\">set @i=@i+1</div><div class=\"line\">end</div></pre></td></tr></table></figure>\n<h2 id=\"查询各个表的记录数\"><a href=\"#查询各个表的记录数\" class=\"headerlink\" title=\"查询各个表的记录数\"></a>查询各个表的记录数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">select  b.name as tablename ,  </div><div class=\"line\">        a.rowcnt as datacount  </div><div class=\"line\">from    sysindexes a ,  </div><div class=\"line\">        sysobjects b  </div><div class=\"line\">where   a.id = b.id  </div><div class=\"line\">        and a.indid &lt; 2  </div><div class=\"line\">        and objectproperty(b.id, &apos;IsMSShipped&apos;) = 0   </div><div class=\"line\">order by tablename asc;</div></pre></td></tr></table></figure>\n<h1 id=\"sqlserver2k\"><a href=\"#sqlserver2k\" class=\"headerlink\" title=\"sqlserver2k+\"></a>sqlserver2k+</h1><blockquote>\n<p>table_catalog 对应的数据库名，object_id(‘%s’) 对应参数是表名，<br>除以下特别指定的，其他SQL参考sqlserver2k。</p>\n</blockquote>\n<h2 id=\"Jdbc驱动-2\"><a href=\"#Jdbc驱动-2\" class=\"headerlink\" title=\"Jdbc驱动\"></a>Jdbc驱动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.microsoft.sqlserver.jdbc.SQLServerDriver</div></pre></td></tr></table></figure>\n<h2 id=\"url-2\"><a href=\"#url-2\" class=\"headerlink\" title=\"url\"></a>url</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc:sqlserver://%s:%d;DatabaseName=%s</div></pre></td></tr></table></figure>\n<h2 id=\"获取所有表-2\"><a href=\"#获取所有表-2\" class=\"headerlink\" title=\"获取所有表\"></a>获取所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select name from sys.tables;</div></pre></td></tr></table></figure>\n<h2 id=\"查询主键-2\"><a href=\"#查询主键-2\" class=\"headerlink\" title=\"查询主键\"></a>查询主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select name from syscolumns where id=object_id(&apos;%s&apos;) and colid in(select keyno from sysindexkeys where id=object_id(&apos;%s&apos;));</div></pre></td></tr></table></figure>\n<p>或<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT a.column_name FROM information_schema.key_column_usage a</div><div class=\"line\">INNER JOIN information_schema.table_constraints b</div><div class=\"line\">ON (a.constraint_name = b.constraint_name)</div><div class=\"line\">WHERE a.table_schema = &apos;%s&apos; AND b.table_schema = &apos;%s&apos;</div><div class=\"line\">AND b.table_catalog = &apos;%s&apos; AND b.table_name = &apos;%s&apos;</div><div class=\"line\">AND b.constraint_type = &apos;PRIMARY KEY&apos;;</div></pre></td></tr></table></figure></p>\n<h2 id=\"查询触发器是否存在\"><a href=\"#查询触发器是否存在\" class=\"headerlink\" title=\"查询触发器是否存在\"></a>查询触发器是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># b.name 对应触发器名，a.name 对应schema</div><div class=\"line\">SELECT b.name FROM sys.schemas a INNER JOIN sys.objects b ON a.schema_id=b.schema_id WHERE b.type=&apos;TR&apos; AND b.name=&apos;%s&apos; AND a.name=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询外键-2\"><a href=\"#查询外键-2\" class=\"headerlink\" title=\"查询外键\"></a>查询外键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"># oSub.name 对应表名</div><div class=\"line\">select oSub.name as table_name, fk.name as constraint_name, SubCol.name as column_name, oMain.name as r_table_name,</div><div class=\"line\">MainCol.name as r_column_name from sys.foreign_keys fk</div><div class=\"line\">join sys.all_objects oSub  on (fk.parent_object_id = oSub.object_id)</div><div class=\"line\">join sys.all_objects oMain on (fk.referenced_object_id = oMain.object_id)</div><div class=\"line\">join sys.foreign_key_columns fkCols  on (fk.object_id = fkCols.constraint_object_id)</div><div class=\"line\">join sys.columns SubCol ON (oSub.object_id = SubCol.object_id and fkCols.parent_column_id = SubCol.column_id)</div><div class=\"line\">join sys.columns MainCol on (oMain.object_id = MainCol.object_id and fkCols.referenced_column_id = MainCol.column_id)</div><div class=\"line\">where oSub.name=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询字段属性\"><a href=\"#查询字段属性\" class=\"headerlink\" title=\"查询字段属性\"></a>查询字段属性</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">select  schemas.name as schema_name ,o.name as table_name, c.name as column_name, t.name as data_type </div><div class=\"line\">from syscolumns c, sysobjects o, systypes t,sys.tables tables,sys.schemas  schemas where o.name = &apos;%s&apos; </div><div class=\"line\">and schemas.name=&apos;%s&apos; and c.id = o.id and c.xtype = t.xtype and tables.object_id = c.id and tables.schema_id =schemas.schema_id</div><div class=\"line\"># 其中第一个参数为表名，第二个参数为模式名</div></pre></td></tr></table></figure>\n<h1 id=\"DB2\"><a href=\"#DB2\" class=\"headerlink\" title=\"DB2\"></a>DB2</h1><h2 id=\"Jdbc驱动-3\"><a href=\"#Jdbc驱动-3\" class=\"headerlink\" title=\"Jdbc驱动\"></a>Jdbc驱动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">COM.ibm.db2os390.sqlj.jdbc.DB2SQLJDriver</div></pre></td></tr></table></figure>\n<h2 id=\"url-3\"><a href=\"#url-3\" class=\"headerlink\" title=\"url\"></a>url</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc:db2://%s:%s/%s</div></pre></td></tr></table></figure>\n<h2 id=\"查询主键-3\"><a href=\"#查询主键-3\" class=\"headerlink\" title=\"查询主键\"></a>查询主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT a.colname FROM SYSCAT.keycoluse AS a INNER JOIN SYSCAT.tabconst AS b ON (a.constname = b.constname)</div><div class=\"line\">WHERE a.tabschema = &apos;%s&apos; AND b.tabschema = &apos;%s&apos; AND a.tabname = &apos;%s&apos; AND b.tabname = &apos;%s&apos; AND b.type = &apos;P&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询字段类型\"><a href=\"#查询字段类型\" class=\"headerlink\" title=\"查询字段类型\"></a>查询字段类型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select column_name, data_type from sysibm.columns where table_name = upper(&apos;%s&apos;)；</div></pre></td></tr></table></figure>\n<h2 id=\"获取所有表-3\"><a href=\"#获取所有表-3\" class=\"headerlink\" title=\"获取所有表\"></a>获取所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># creator 对应schema</div><div class=\"line\">SELECT name FROM SYSIBM.SYSTABLES WHERE creator=&apos;%s&apos; ORDER BY name；</div></pre></td></tr></table></figure>\n<h2 id=\"查询表是否存在-2\"><a href=\"#查询表是否存在-2\" class=\"headerlink\" title=\"查询表是否存在\"></a>查询表是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># tabschema 对应schema,tabname 对应表名</div><div class=\"line\">SELECT tabname FROM SYSCAT.tables WHERE tabschema=&apos;%s&apos; AND tabname=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"创建表-2\"><a href=\"#创建表-2\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TABLE %s.%s</div><div class=\"line\">(</div><div class=\"line\">  id INTEGER  NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1, NO CACHE ) ,#严格自增字段</div><div class=\"line\">dbName VARCHAR(20),</div><div class=\"line\">tableName VARCHAR(20),  </div><div class=\"line\">pkNames VARCHAR(255),</div><div class=\"line\">newPkValues VARCHAR(255),</div><div class=\"line\">oldPkValues VARCHAR(255),</div><div class=\"line\">action VARCHAR(20),</div><div class=\"line\">PRIMARY KEY (id)</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<h2 id=\"查询外键-3\"><a href=\"#查询外键-3\" class=\"headerlink\" title=\"查询外键\"></a>查询外键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">select r.reftabname as table_name, k.colname as column_name, r.constname as constraint_name</div><div class=\"line\">from syscat.references as r,syscat.keycoluse as k</div><div class=\"line\">where r.tabname=k.tabname and k.constname=r.constname and r.tanschema=’%s’ and r.reftabname=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"关闭外键约束-2\"><a href=\"#关闭外键约束-2\" class=\"headerlink\" title=\"关闭外键约束\"></a>关闭外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s alter foreign key %s not enforced；#最后一个参数是某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"启用外键约束-1\"><a href=\"#启用外键约束-1\" class=\"headerlink\" title=\"启用外键约束\"></a>启用外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s alter foreign key %s enforced；#最后一个参数是某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"查询触发器是否存在-1\"><a href=\"#查询触发器是否存在-1\" class=\"headerlink\" title=\"查询触发器是否存在\"></a>查询触发器是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># trigschema 对应 schema, trigevent 对应触发器名</div><div class=\"line\">SELECT trigname FROM SYSCAT.triggers WHERE trigschema=&apos;%s&apos; AND trigname=&apos;%s&apos; AND trigevent =&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"触发器-1\"><a href=\"#触发器-1\" class=\"headerlink\" title=\"触发器\"></a>触发器</h2><blockquote>\n<p>DB2 触发器名字不能超过18个字符,触发器SQL最后的 “END” 后面不加分号，activejdbc中加了分号会报错，其他工具请<br>自己测试调整。特别注意：<br>1:如果表中自增列使用的是 GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1,<br>  NO CACHE)声明,则数据库将严格保证该列满足自增约束(唯一性),用户不可指定该列的值,无法插入数据。<br>2:如果表中自增列使用的是 GENERATED BY DEFAULT AS IDENTITY (START WITH 0, INCREMENT<br>  BY 1, NO CACHE)声明,则允许指定此列的值。</p>\n</blockquote>\n<p>设5.7创建的表为EVENTS，且有表teclan如下（DEV为schema）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table teclan</div><div class=\"line\">(</div><div class=\"line\">id bigint,</div><div class=\"line\">name integer,</div><div class=\"line\">age bigint,</div><div class=\"line\">sex clob</div><div class=\"line\">);</div><div class=\"line\">alter table teclan add primary key(id,name);</div></pre></td></tr></table></figure></p>\n<h3 id=\"insert触发器-2\"><a href=\"#insert触发器-2\" class=\"headerlink\" title=\"insert触发器\"></a>insert触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForInsert</div><div class=\"line\">AFTER INSERT ON DEV.TECLAN</div><div class=\"line\">REFERENCING  NEW AS N  FOR EACH ROW MODE DB2SQL</div><div class=\"line\">BEGIN ATOMIC</div><div class=\"line\">INSERT INTO DEV.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues, action) VALUES (&apos;DB2&apos;, &apos;TECLAN&apos;, &apos;ID,NAME&apos;, CHAR(N.ID)||&apos;,&apos;||CHAR(N.NAME), null,&apos;INSERT&apos;);</div><div class=\"line\">END</div></pre></td></tr></table></figure>\n<h3 id=\"update触发器-2\"><a href=\"#update触发器-2\" class=\"headerlink\" title=\"update触发器\"></a>update触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForUpdatet</div><div class=\"line\">AFTER UPDATE ON DEV.TECLAN</div><div class=\"line\">REFERENCING  NEW AS N OLD AS O  </div><div class=\"line\">FOR EACH ROW MODE DB2SQL BEGIN ATOMIC</div><div class=\"line\">INSERT INTO DEV.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues, action) VALUES (&apos;DB2&apos;, &apos;TECLAN&apos;, &apos;ID,NAME&apos;, CHAR(N.ID)||&apos;,&apos;||CHAR(N.NAME), CHAR(O.ID)||&apos;,&apos;||CHAR(O.NAME),&apos;UPDATE&apos;);</div><div class=\"line\">END</div></pre></td></tr></table></figure>\n<h3 id=\"delete触发器-2\"><a href=\"#delete触发器-2\" class=\"headerlink\" title=\"delete触发器\"></a>delete触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForDelete</div><div class=\"line\">AFTER DELETE ON DEV.TECLAN</div><div class=\"line\">REFERENCING  OLD AS O  FOR EACH ROW MODE DB2SQL</div><div class=\"line\">BEGIN ATOMIC INSERT INTO DEV.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues, action) VALUES (&apos;DB2&apos;, &apos;TECLAN&apos;, &apos;ID,NAME&apos;, null, CHAR(O.ID)||&apos;,&apos;||CHAR(O.NAME),&apos;DELETE&apos;);</div><div class=\"line\">END</div></pre></td></tr></table></figure>\n<h3 id=\"删除触发器-2\"><a href=\"#删除触发器-2\" class=\"headerlink\" title=\"删除触发器\"></a>删除触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop  trigger triggerName;#triggerName 为要删除的触发器名</div></pre></td></tr></table></figure>\n<h2 id=\"存储过程实例-3\"><a href=\"#存储过程实例-3\" class=\"headerlink\" title=\"存储过程实例\"></a>存储过程实例</h2><blockquote>\n<p> 需要修改数据库的日志文件大小和数量，然后重启数据库，才能删除大量数据，步骤如下：<br>db2cmd<br>db2 get db cfg for cnaps2<br>此命令可以查看当前数据库的日志文件大小（LOGFILSIZ）,主日志数（LOGPRIMARY）,辅日志数（LOGSECOND）。<br>db2 update db cfg for cnaps2 using LOGPRIMARY 50<br>修改主日志数为50<br>db2 update db cfg for cnaps2 using LOGSECOND 20<br>修改辅日志数为20<br>db2 update db cfg for cnaps2 using LOGFILSIZ 10240<br>修改日志大小为10240<br>此时，活动日志空间的最大容量为（20 + 50） <em> 10240 </em> 4KB<br>停止数据库：db2stop.这时会报SQL1025N  未停止数据库，因为数据库仍是活动的。<br>执行:db2 list application 查看目前数据库中活动的链接<br>db2 force application all 杀掉所有活动的链接，此时可以顺利的停止数据库了。<br>重新启动数据库：db2start<br>db2 get db cfg for cnaps2 查看当前数据库日志配置，是否为上面修改后的数字。<br>DB2下的存储过程均放在独立的文件中，调用命令形如（其中p0()是example.sql中定义的存储过程）<br>c:\\Program Files\\IBM\\SQLLIB\\BIN&gt;db2 connect to TESTDB<br>db2 -td@ -f example.sql<br>db2 call p0();</p>\n</blockquote>\n<h3 id=\"创建100个表-3\"><a href=\"#创建100个表-3\" class=\"headerlink\" title=\"创建100个表\"></a>创建100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">create procedure p0()</div><div class=\"line\">language sql</div><div class=\"line\">begin atomic</div><div class=\"line\">declare i integer;</div><div class=\"line\">declare sqlstr varchar(2000);</div><div class=\"line\">declare st statement;</div><div class=\"line\">set i=1;</div><div class=\"line\">while i&lt;=100 do</div><div class=\"line\">  set sqlstr=&apos;create table ADMINISTRATOR.articles&apos;||char(i)||&apos; (id  integer not null ,content varchar(2000), primary key(id) )&apos;;</div><div class=\"line\">  set i=i+1;</div><div class=\"line\">prepare st from sqlstr;</div><div class=\"line\">execute st;</div><div class=\"line\">end while;</div><div class=\"line\">end@</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表-3\"><a href=\"#删除100个表-3\" class=\"headerlink\" title=\"删除100个表\"></a>删除100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">create procedure p3()</div><div class=\"line\">language sql</div><div class=\"line\">begin atomic</div><div class=\"line\">declare i integer;</div><div class=\"line\">declare sqlstr varchar(2000);</div><div class=\"line\">declare st statement;</div><div class=\"line\">set i=1;</div><div class=\"line\">while i&lt;=100 do</div><div class=\"line\">  set sqlstr=&apos;drop table ADMINISTRATOR.articles&apos;||char(i)||&apos;&apos;;</div><div class=\"line\">  set i=i+1;</div><div class=\"line\">prepare st from sqlstr;</div><div class=\"line\">execute st;</div><div class=\"line\">end while;</div><div class=\"line\">end@</div></pre></td></tr></table></figure>\n<h3 id=\"往100个表中添加数据，每个表500条记录\"><a href=\"#往100个表中添加数据，每个表500条记录\" class=\"headerlink\" title=\"往100个表中添加数据，每个表500条记录\"></a>往100个表中添加数据，每个表500条记录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">create procedure p1()</div><div class=\"line\">language sql</div><div class=\"line\">begin atomic</div><div class=\"line\">declare i integer;</div><div class=\"line\">declare j integer;</div><div class=\"line\">declare sqlstr varchar(2000);</div><div class=\"line\">declare st statement;</div><div class=\"line\">set j=1;</div><div class=\"line\">while j&lt;=100 do</div><div class=\"line\">  set i=1;</div><div class=\"line\">  while i&lt;=500 do</div><div class=\"line\">    set sqlstr=&apos;insert into ADMINISTRATOR.articles&apos;||char(j)||&apos; values (&apos;||char(i)||&apos;,&apos;&apos;昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召</div><div class=\"line\">开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽</div><div class=\"line\">咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学</div><div class=\"line\">良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎</div><div class=\"line\">都是实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来</div><div class=\"line\">，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有</div><div class=\"line\">着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅&apos;&apos;)&apos;;</div><div class=\"line\">    set i=i+1;</div><div class=\"line\">    prepare st from sqlstr;</div><div class=\"line\">    execute st;</div><div class=\"line\">  end while;</div><div class=\"line\">set j=j+1;</div><div class=\"line\">end while;</div><div class=\"line\">end@</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表里面的所有数据-2\"><a href=\"#删除100个表里面的所有数据-2\" class=\"headerlink\" title=\"删除100个表里面的所有数据\"></a>删除100个表里面的所有数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">create procedure p2()</div><div class=\"line\">language sql</div><div class=\"line\">begin atomic</div><div class=\"line\">declare i integer;</div><div class=\"line\">declare sqlstr varchar(2000);</div><div class=\"line\">declare st statement;</div><div class=\"line\">set i=1;</div><div class=\"line\">while i&lt;=100 do</div><div class=\"line\">  set sqlstr=&apos;delete from ADMINISTRATOR.articles&apos;||char(i)||&apos;&apos;;</div><div class=\"line\">  set i=i+1;</div><div class=\"line\">prepare st from sqlstr;</div><div class=\"line\">execute st;</div><div class=\"line\">end while;</div><div class=\"line\">end@</div></pre></td></tr></table></figure>\n<h1 id=\"mysql\"><a href=\"#mysql\" class=\"headerlink\" title=\"mysql\"></a>mysql</h1><h2 id=\"Jdbc驱动-4\"><a href=\"#Jdbc驱动-4\" class=\"headerlink\" title=\"Jdbc驱动\"></a>Jdbc驱动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.mysql.jdbc.Driver</div></pre></td></tr></table></figure>\n<h2 id=\"url-4\"><a href=\"#url-4\" class=\"headerlink\" title=\"url\"></a>url</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc:mysql://%s:%d/%s</div></pre></td></tr></table></figure>\n<h2 id=\"获取所有表-4\"><a href=\"#获取所有表-4\" class=\"headerlink\" title=\"获取所有表\"></a>获取所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select table_name from information_schema.tables where table_schema  =&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询表是否存在-3\"><a href=\"#查询表是否存在-3\" class=\"headerlink\" title=\"查询表是否存在\"></a>查询表是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT TABLE_NAME AS name FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询表字段类型-2\"><a href=\"#查询表字段类型-2\" class=\"headerlink\" title=\"查询表字段类型\"></a>查询表字段类型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select column_name,data_type from information_schema.columns where table_schema=&apos;%s&apos; and table_name=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询主键-4\"><a href=\"#查询主键-4\" class=\"headerlink\" title=\"查询主键\"></a>查询主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">select concat(c.column_name) as &apos;column_name&apos; from information_schema.table_constraints as t,</div><div class=\"line\">information_schema.key_column_usage as c where t.table_name=c.table_name and t.table_name=&apos;%s&apos;</div><div class=\"line\">and t.table_schema=&apos;%s&apos;；</div></pre></td></tr></table></figure>\n<h2 id=\"创建表-3\"><a href=\"#创建表-3\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TABLE %s.%s</div><div class=\"line\">(</div><div class=\"line\">  id         BIGINT        NOT NULL PRIMARY KEY     AUTO_INCREMENT,#自增字段</div><div class=\"line\">  dbName     VARCHAR(30),</div><div class=\"line\">  tableName  VARCHAR(30),</div><div class=\"line\">  pkNames    VARCHAR(2000),</div><div class=\"line\">  newPkValues   VARCHAR(2000),</div><div class=\"line\">  oldPkValues   VARCHAR(2000),</div><div class=\"line\">  action     VARCHAR(20)</div><div class=\"line\">  );</div></pre></td></tr></table></figure>\n<h2 id=\"关闭外键约束-3\"><a href=\"#关闭外键约束-3\" class=\"headerlink\" title=\"关闭外键约束\"></a>关闭外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set foreign_key_checks=0;</div></pre></td></tr></table></figure>\n<h2 id=\"启用外键约束-2\"><a href=\"#启用外键约束-2\" class=\"headerlink\" title=\"启用外键约束\"></a>启用外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set foreign_key_checks=1;</div></pre></td></tr></table></figure>\n<h2 id=\"查询触发器是否存在-2\"><a href=\"#查询触发器是否存在-2\" class=\"headerlink\" title=\"查询触发器是否存在\"></a>查询触发器是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"># EVENT_OBJECT_TABLE 对应表名</div><div class=\"line\">SELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS WHERE TRIGGER_SCHEMA=&apos;%s&apos;</div><div class=\"line\">AND EVENT_OBJECT_TABLE=&apos;%s&apos; AND TRIGGER_NAME=&apos;%s&apos;</div></pre></td></tr></table></figure>\n<h2 id=\"触发器-2\"><a href=\"#触发器-2\" class=\"headerlink\" title=\"触发器\"></a>触发器</h2><p>设6.7创建的表为events,且有表teclan如下,schema与数据库名均为testdb:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table teclan</div><div class=\"line\">(</div><div class=\"line\">id int,</div><div class=\"line\">name varchar(10),</div><div class=\"line\">age int,</div><div class=\"line\">sex varchar(10)  </div><div class=\"line\">);</div><div class=\"line\">alter table teclan add primary key(id,name);</div></pre></td></tr></table></figure></p>\n<h3 id=\"insert触发器-3\"><a href=\"#insert触发器-3\" class=\"headerlink\" title=\"insert触发器\"></a>insert触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForInsert</div><div class=\"line\">AFTER INSERT ON testdb.teclan</div><div class=\"line\">FOR EACH ROW</div><div class=\"line\">INSERT INTO testdb.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action) VALUES(&apos;testdb&apos;,&apos;teclan&apos;,&apos;id,name&apos;,(concat_ws(&apos;,&apos;,new.id,new.name)),(null),&apos;INSERT&apos;);</div></pre></td></tr></table></figure>\n<h3 id=\"update触发器-3\"><a href=\"#update触发器-3\" class=\"headerlink\" title=\"update触发器\"></a>update触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForUpdatet</div><div class=\"line\">AFTER UPDATE ON testdb.teclan</div><div class=\"line\">FOR EACH ROW</div><div class=\"line\">INSERT INTO testdb.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action) VALUES(&apos;testdb&apos;,&apos;teclan&apos;,&apos;id,name&apos;,(concat_ws(&apos;,&apos;,new.id,new.name)),(concat_ws(&apos;,&apos;,old.id,old.name)),&apos;UPDATE&apos;);</div></pre></td></tr></table></figure>\n<h3 id=\"delete触发器-3\"><a href=\"#delete触发器-3\" class=\"headerlink\" title=\"delete触发器\"></a>delete触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TRIGGER triggerNameForDelete</div><div class=\"line\">AFTER DELETE ON testdb.teclan</div><div class=\"line\">FOR EACH ROW</div><div class=\"line\">INSERT INTO testdb.events (dbName,tableName,pkNames,newPkValues,oldPkValues,action) VALUES(&apos;testdb&apos;,&apos;teclan&apos;,&apos;id,name&apos;,(null),(concat_ws(&apos;,&apos;,old.id,old.name)),&apos;DELETE&apos;);</div></pre></td></tr></table></figure>\n<h3 id=\"删除触发器-3\"><a href=\"#删除触发器-3\" class=\"headerlink\" title=\"删除触发器\"></a>删除触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop  trigger triggerName;#triggerName为要删除的触发器</div></pre></td></tr></table></figure>\n<h2 id=\"存储过程实例-4\"><a href=\"#存储过程实例-4\" class=\"headerlink\" title=\"存储过程实例\"></a>存储过程实例</h2><h3 id=\"创建100个表-4\"><a href=\"#创建100个表-4\" class=\"headerlink\" title=\"创建100个表\"></a>创建100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">delimiter //</div><div class=\"line\">CREATE procedure create_100table()</div><div class=\"line\">BEGIN</div><div class=\"line\">DECLARE `@i` int(11);</div><div class=\"line\">DECLARE `@sqlstr` varchar(2560);</div><div class=\"line\">SET `@i`=1;</div><div class=\"line\">WHILE `@i` &lt; 101 DO</div><div class=\"line\">SET @sqlstr = CONCAT(</div><div class=\"line\">&quot;CREATE TABLE testdb.articles&quot;,</div><div class=\"line\">`@i`,</div><div class=\"line\">&quot;(</div><div class=\"line\">`id` int NOT NULL,</div><div class=\"line\">`content` varchar(2000),</div><div class=\"line\">PRIMARY KEY (`id`)</div><div class=\"line\">) ENGINE=InnoDB DEFAULT CHARSET=utf8&quot;</div><div class=\"line\">);</div><div class=\"line\">prepare stmt from @sqlstr;</div><div class=\"line\">execute stmt;</div><div class=\"line\">SET `@i` = `@i` + 1;</div><div class=\"line\">END WHILE;</div><div class=\"line\">END;</div><div class=\"line\">call create_100table();</div><div class=\"line\">drop procedure create_100table;</div><div class=\"line\">//</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表-4\"><a href=\"#删除100个表-4\" class=\"headerlink\" title=\"删除100个表\"></a>删除100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">delimiter //</div><div class=\"line\">CREATE procedure delete100()</div><div class=\"line\">BEGIN</div><div class=\"line\">DECLARE `@i` int(11);</div><div class=\"line\">DECLARE `@sqlstr` varchar(2560);</div><div class=\"line\">SET `@i`=1;</div><div class=\"line\">WHILE `@i` &lt; 101 DO</div><div class=\"line\">SET @sqlstr = CONCAT(&quot;drop table testdb.articles&quot;,`@i`);</div><div class=\"line\">prepare stmt from @sqlstr;</div><div class=\"line\">execute stmt;</div><div class=\"line\">SET `@i` = `@i` + 1;</div><div class=\"line\">END WHILE;</div><div class=\"line\">END;</div><div class=\"line\">call delete100();</div><div class=\"line\">drop procedure delete100;</div><div class=\"line\">//</div></pre></td></tr></table></figure>\n<h3 id=\"往100个表添加数据，每个表500条记录-1\"><a href=\"#往100个表添加数据，每个表500条记录-1\" class=\"headerlink\" title=\"往100个表添加数据，每个表500条记录\"></a>往100个表添加数据，每个表500条记录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">delimiter //</div><div class=\"line\">drop procedure if exists insertdata;</div><div class=\"line\">CREATE procedure insertdata()</div><div class=\"line\">BEGIN</div><div class=\"line\">DECLARE `@i` int(11);</div><div class=\"line\">DECLARE `@j` int(11);</div><div class=\"line\">DECLARE `@sqlstr` varchar(2560);</div><div class=\"line\">SET `@i`= 0;</div><div class=\"line\">WHILE `@i` &lt; 100 DO</div><div class=\"line\">SET `@i` = `@i` + 1;</div><div class=\"line\">SET `@j`= 1;</div><div class=\"line\">WHILE `@j` &lt; 501 DO</div><div class=\"line\">SET @sqlstr = CONCAT(&quot;insert into testdb.articles&quot;,`@i`,&quot;(id,content)values(&quot;,`@j`,&quot;,&apos;昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅&apos;)&quot;);</div><div class=\"line\">prepare stmt from @sqlstr;</div><div class=\"line\">execute stmt;</div><div class=\"line\">SET `@j` = `@j` + 1;</div><div class=\"line\">END WHILE;</div><div class=\"line\">END WHILE;</div><div class=\"line\">END;</div><div class=\"line\">call insertdata();</div><div class=\"line\">//</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表里面的所有数据-3\"><a href=\"#删除100个表里面的所有数据-3\" class=\"headerlink\" title=\"删除100个表里面的所有数据\"></a>删除100个表里面的所有数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">delimiter //</div><div class=\"line\">CREATE procedure delete50000()</div><div class=\"line\">BEGIN</div><div class=\"line\">DECLARE `@i` int(11);</div><div class=\"line\">DECLARE `@sqlstr` varchar(2560);</div><div class=\"line\">SET `@i`=1;</div><div class=\"line\">WHILE `@i` &lt; 101 DO</div><div class=\"line\">SET @sqlstr = CONCAT(&quot;delete from testdb.articles&quot;,`@i`);</div><div class=\"line\">prepare stmt from @sqlstr;</div><div class=\"line\">execute stmt;</div><div class=\"line\">SET `@i` = `@i` + 1;</div><div class=\"line\">END WHILE;</div><div class=\"line\">END;</div><div class=\"line\">call delete50000();</div><div class=\"line\">drop procedure delete50000;</div><div class=\"line\">//</div></pre></td></tr></table></figure>\n<h1 id=\"kingbase\"><a href=\"#kingbase\" class=\"headerlink\" title=\"kingbase\"></a>kingbase</h1><h2 id=\"Jdbc驱动-5\"><a href=\"#Jdbc驱动-5\" class=\"headerlink\" title=\"Jdbc驱动\"></a>Jdbc驱动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdbc:kingbase://%s:%d/%s</div></pre></td></tr></table></figure>\n<h2 id=\"url-5\"><a href=\"#url-5\" class=\"headerlink\" title=\"url\"></a>url</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">com.kingbase.Driver</div></pre></td></tr></table></figure>\n<h2 id=\"获取所有表-5\"><a href=\"#获取所有表-5\" class=\"headerlink\" title=\"获取所有表\"></a>获取所有表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT table_name FROM information_schema.tables WHERE table_schema=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询表是否存在-4\"><a href=\"#查询表是否存在-4\" class=\"headerlink\" title=\"查询表是否存在\"></a>查询表是否存在</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SELECT table_name FROM information_schema.tables WHERE table_schema=&apos;%s&apos; AND table_name=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询表字段类型-3\"><a href=\"#查询表字段类型-3\" class=\"headerlink\" title=\"查询表字段类型\"></a>查询表字段类型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select column_name, data_type from information_schema.columns where table_schema = &apos;%s&apos; and table_name = &apos;%s&apos;</div></pre></td></tr></table></figure>\n<h2 id=\"创建序列-1\"><a href=\"#创建序列-1\" class=\"headerlink\" title=\"创建序列\"></a>创建序列</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE SEQUENCE %s.%s START 1 INCREMENT 1;</div></pre></td></tr></table></figure>\n<h2 id=\"删除序列-1\"><a href=\"#删除序列-1\" class=\"headerlink\" title=\"删除序列\"></a>删除序列</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop SEQUENCE %s.%s;</div></pre></td></tr></table></figure>\n<h2 id=\"创建表-4\"><a href=\"#创建表-4\" class=\"headerlink\" title=\"创建表\"></a>创建表</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE TABLE %s.%s</div><div class=\"line\">(</div><div class=\"line\">  id INT DEFAULT NEXTVAL(&apos;%s.%s&apos;),</div><div class=\"line\">  dbName VARCHAR(20),</div><div class=\"line\">  tableName VARCHAR(20),</div><div class=\"line\">  pkNames VARCHAR(255),</div><div class=\"line\">  newPkValues VARCHAR(255),</div><div class=\"line\">  oldPkValues VARCHAR(255),</div><div class=\"line\">  action VARCHAR(20),</div><div class=\"line\">  PRIMARY KEY(id)</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<h2 id=\"查询主键-5\"><a href=\"#查询主键-5\" class=\"headerlink\" title=\"查询主键\"></a>查询主键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"># table_catalog 对应数据库名</div><div class=\"line\">SELECT a.column_name FROM information_schema.key_column_usage a</div><div class=\"line\">INNER JOIN information_schema.table_constraints b</div><div class=\"line\">ON (a.constraint_name = b.constraint_name)</div><div class=\"line\">WHERE a.table_schema = &apos;%s&apos; AND b.table_schema = &apos;%s&apos;</div><div class=\"line\">AND b.table_catalog = &apos;%s&apos; AND b.table_name = &apos;%s&apos;</div><div class=\"line\">AND b.constraint_type = &apos;PRIMARY KEY&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"查询外键-4\"><a href=\"#查询外键-4\" class=\"headerlink\" title=\"查询外键\"></a>查询外键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"># nspname 对应schema</div><div class=\"line\">select sys_class.relname as table_name,sys_attribute.attname as column name,fk.conname as</div><div class=\"line\">constraint_name form (select unnest(sys_constraint.conkey),conname,sys_constraint.conrelid,</div><div class=\"line\">sys_constraint.confrelid form sys_constraint,sys_namespace where sys_constraint.connamespace</div><div class=\"line\">=sys_namespace.oid and sys_namespace.nspname=’%s’ and contype=’f’ )fk,sys_attribute,sys_class,all_constraints</div><div class=\"line\">where fk.unnest=sys_attribute.attnum and fk.conrelid=sys_attribute.attrelid and</div><div class=\"line\">fk.confrelid=sys_class.oid and fk.conname=all_constraints.constaint_name and sys_class.relname=&apos;%s&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"关闭外键约束-4\"><a href=\"#关闭外键约束-4\" class=\"headerlink\" title=\"关闭外键约束\"></a>关闭外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %S alter foreign key %s not enforced;#最后一个参数为某个外键约束</div></pre></td></tr></table></figure>\n<h2 id=\"启用外键约束-3\"><a href=\"#启用外键约束-3\" class=\"headerlink\" title=\"启用外键约束\"></a>启用外键约束</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter table %s alter foreign key %s enforced;</div></pre></td></tr></table></figure>\n<h2 id=\"触发器-3\"><a href=\"#触发器-3\" class=\"headerlink\" title=\"触发器\"></a>触发器</h2><p>设7.8创建的表为events,且有表teclan如下(“PUBLIC” 为schema,”TECLAN” 为表名)：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table teclan</div><div class=\"line\">(</div><div class=\"line\">id int,</div><div class=\"line\">name varchar(10),</div><div class=\"line\">age int,</div><div class=\"line\">sex varchar(10)</div><div class=\"line\">);</div><div class=\"line\">alter table teclan add primay key(id,name);</div></pre></td></tr></table></figure></p>\n<h3 id=\"insert触发器-4\"><a href=\"#insert触发器-4\" class=\"headerlink\" title=\"insert触发器\"></a>insert触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE TRIGGER triggerNameForInsert</div><div class=\"line\">AFTER INSERT ON PUBLIC.&quot;TECLAN&quot;</div><div class=\"line\">FOR EACH ROW AS</div><div class=\"line\">BEGIN</div><div class=\"line\">INSERT INTO PUBLIC.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues,action)</div><div class=\"line\">VALUES (&apos;TECLAN&apos;,&apos;TECLAN&apos;,&apos;ID,NAME&apos;,(NEW.&quot;ID&quot;||&apos;,&apos;||NEW.&quot;NAME&quot;),(null),&apos;INSERT&apos;);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"update触发器-4\"><a href=\"#update触发器-4\" class=\"headerlink\" title=\"update触发器\"></a>update触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE TRIGGER PIXIU_SYNC_TECLAN_UPDATE</div><div class=\"line\">AFTER UPDATE ON PUBLIC.&quot;TECLAN&quot;</div><div class=\"line\">FOR EACH ROW AS</div><div class=\"line\">BEGIN</div><div class=\"line\">INSERT INTO PUBLIC.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues,action)</div><div class=\"line\">VALUES (&apos;TECLAN&apos;,&apos;TECLAN&apos;,&apos;ID,NAME&apos;,(NEW.&quot;ID&quot;||&apos;,&apos;||NEW.&quot;NAME&quot;),(OLD.&quot;ID&quot;||&apos;,&apos;||OLD.&quot;NAME&quot;),&apos;UPDATE&apos;);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"delete触发器-4\"><a href=\"#delete触发器-4\" class=\"headerlink\" title=\"delete触发器\"></a>delete触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">CREATE OR REPLACE TRIGGER PIXIU_SYNC_TECLAN_DELETE</div><div class=\"line\">AFTER DELETE ON PUBLIC.&quot;TECLAN&quot;</div><div class=\"line\">FOR EACH ROW AS</div><div class=\"line\">BEGIN I</div><div class=\"line\">NSERT INTO PUBLIC.EVENTS (dbName, tableName, pkNames, newPkValues, oldPkValues,action)</div><div class=\"line\">VALUES (&apos;TECLAN&apos;,&apos;TECLAN&apos;,&apos;ID,NAME&apos;,(null),(OLD.&quot;ID&quot;||&apos;,&apos;||OLD.&quot;NAME&quot;),&apos;DELETE&apos;);</div><div class=\"line\">END;</div></pre></td></tr></table></figure>\n<h3 id=\"删除触发器-4\"><a href=\"#删除触发器-4\" class=\"headerlink\" title=\"删除触发器\"></a>删除触发器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">drop trigger triggerName; #triggerName 为指定删除的触发器</div></pre></td></tr></table></figure>\n<h2 id=\"存储过程实例-5\"><a href=\"#存储过程实例-5\" class=\"headerlink\" title=\"存储过程实例\"></a>存储过程实例</h2><h3 id=\"创建100个表-5\"><a href=\"#创建100个表-5\" class=\"headerlink\" title=\"创建100个表\"></a>创建100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">create or replace procedure p0()</div><div class=\"line\">as</div><div class=\"line\">declare</div><div class=\"line\">  i integer;</div><div class=\"line\">begin</div><div class=\"line\">  for i in 1..100 loop</div><div class=\"line\">      Execute immediate &apos;create TABLE &quot;PUBLIC&quot;.&quot;articles&apos;||i||&apos;&quot;</div><div class=\"line\">       (&quot;id&quot;   integer,</div><div class=\"line\">        &quot;content&quot;  varchar(2000),</div><div class=\"line\">        primary key(&quot;id&quot;))&apos;;</div><div class=\"line\">   end loop;</div><div class=\"line\">   end;</div><div class=\"line\">call p0;</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表-5\"><a href=\"#删除100个表-5\" class=\"headerlink\" title=\"删除100个表\"></a>删除100个表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">create or replace procedure p0()</div><div class=\"line\">as</div><div class=\"line\">declare</div><div class=\"line\">  i integer;</div><div class=\"line\">begin</div><div class=\"line\">  for i in 1..100 loop</div><div class=\"line\">      Execute immediate &apos;drop TABLE &quot;PUBLIC&quot;.&quot;articles&apos;||i||&apos;&quot;&apos;;</div><div class=\"line\">   end loop;</div><div class=\"line\">   end;</div><div class=\"line\">call p0;</div></pre></td></tr></table></figure>\n<h3 id=\"往100个表添加数据，每个表500条记录-2\"><a href=\"#往100个表添加数据，每个表500条记录-2\" class=\"headerlink\" title=\"往100个表添加数据，每个表500条记录\"></a>往100个表添加数据，每个表500条记录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">create or replace procedure insert_articles() as</div><div class=\"line\"> declare i integer :=1;</div><div class=\"line\"> j integer :=1;</div><div class=\"line\"> begin</div><div class=\"line\">for i in 1..100 loop</div><div class=\"line\">  for j in 1..500 loop</div><div class=\"line\">  execute immediate&apos;insert into &quot;PUBLIC&quot;.&quot;articles&apos;||i||&apos;&quot; values(&apos;||j||&apos;,&apos;&apos;昨天，由著名导演张黎执导，文章、宋佳、李雪健、张歆怡等主演的48集历史巨制《少帅》在北京召开了首播新闻发布会，该剧将于12日零点在优酷、土豆双平台网络首播，与此同时1月11日晚登陆北京卫视。当天，很久没有亮相的文章在台上真情毕露，聊起出演“少帅”这一复杂角色，他几度哽咽，并现场飙泪，他说：“这个戏真的是拿命在演！扬子晚报记者 张漪收获导演盛赞文章演少帅后脱胎换骨电视剧《少帅》以回忆录的形式，将张学良这位百岁老人的人生故事娓娓道来。既有张学良顽劣的少年时代，又有桀骜不驯的青年时代，既有肩担大义、义薄云天的中年风骨，更有平静淡然的老年时光，全方位展现了张学良从叛逆少年到一代名将的成长之路。张黎透露，剧中剧情几乎都是真实的，“张学良本身的生活就异常丰满且传奇，已经完全足以撑起一部戏，真要撒开了写，100集都写不完，所以整部剧的创作都遵从了一种历史的真实，没有太多虚构的内容。”在张黎看来，剧中讲述的是一个“另类生命的成长史”，在张学良身上，有着“另类的父子情，另类的男女情，另类的师生情，另类的同僚情。”与此同时，这也是一个“总是处在挣扎和煎熬中的人物”，有着格外复杂的心理历程。当被问及希望在这部作品中呈现出一个怎样的张学良时，张黎表示，张学良最大的魅&apos;&apos;)&apos;;</div><div class=\"line\">end loop;</div><div class=\"line\">end loop;</div><div class=\"line\">end;</div><div class=\"line\">call insert_articles;</div></pre></td></tr></table></figure>\n<h3 id=\"删除100个表里面的所有数据-4\"><a href=\"#删除100个表里面的所有数据-4\" class=\"headerlink\" title=\"删除100个表里面的所有数据\"></a>删除100个表里面的所有数据</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">create or replace procedure p0()</div><div class=\"line\">as</div><div class=\"line\">declare</div><div class=\"line\">  i integer;</div><div class=\"line\">begin</div><div class=\"line\">  for i in 1..100 loop</div><div class=\"line\">      Execute immediate &apos;delete from &quot;PUBLIC&quot;.&quot;articles&apos;||i||&apos;&quot;&apos;;</div><div class=\"line\">   end loop;</div><div class=\"line\">   end;</div><div class=\"line\">call p0;</div></pre></td></tr></table></figure>\n"},{"title":"DB2常见错误与解决方案","date":"2017-08-18T13:50:51.000Z","_content":"## windows db2 命令行工具使用\n\n>在控制台中输入 db2cmd 即可启动 db2 命令行工具。\n\n### 连接数据库\n```\ndb2 connect to database_name user user_name using your_password\n```\n### 执行脚本\n```\ndb2 -td@ -vf path_to_you_sql_file\n```\n其中 @ 表示脚本文件的语句结束符为 @，因为 SQL 脚本中默认的语句是分号（;），如果\n不重新指定的话，在执行到第一分号的时候就不往下执行，因为，在SQL脚本文件中的最后一\n个字符必须是 @。v表示将执行的脚本内容在终端中输出，f表示从文件读取SQL，后面的参数\n是SQL脚本的绝对路径。\n\n### 调用存储过程\n```\ndb2 call procedure_name  # 存储过程不带参数可以直接写存储过程名，不用带括号\n```\n\n## SQLCODE=-964日志文件满的问题\n\n```\n# 先连接数据库，依次执行以下命令即可\ndb2 update db cfg for MY_DATABASE using LOGFILSIZ 7900  \ndb2 update db cfg for MY_DATABASE using LOGPRIMARY 30  \ndb2 update db cfg for MY_DATABASE using LOGSECOND 20\ndb2 \"force application all\"\ndb2stop  \ndb2start\n# 重启结束后继续后续操作\n```\n","source":"_posts/DB2常见错误与解决方案.md","raw":"---\ntitle: DB2常见错误与解决方案\ndate: 2017-08-18 21:50:51\ntags: [DB2]\n---\n## windows db2 命令行工具使用\n\n>在控制台中输入 db2cmd 即可启动 db2 命令行工具。\n\n### 连接数据库\n```\ndb2 connect to database_name user user_name using your_password\n```\n### 执行脚本\n```\ndb2 -td@ -vf path_to_you_sql_file\n```\n其中 @ 表示脚本文件的语句结束符为 @，因为 SQL 脚本中默认的语句是分号（;），如果\n不重新指定的话，在执行到第一分号的时候就不往下执行，因为，在SQL脚本文件中的最后一\n个字符必须是 @。v表示将执行的脚本内容在终端中输出，f表示从文件读取SQL，后面的参数\n是SQL脚本的绝对路径。\n\n### 调用存储过程\n```\ndb2 call procedure_name  # 存储过程不带参数可以直接写存储过程名，不用带括号\n```\n\n## SQLCODE=-964日志文件满的问题\n\n```\n# 先连接数据库，依次执行以下命令即可\ndb2 update db cfg for MY_DATABASE using LOGFILSIZ 7900  \ndb2 update db cfg for MY_DATABASE using LOGPRIMARY 30  \ndb2 update db cfg for MY_DATABASE using LOGSECOND 20\ndb2 \"force application all\"\ndb2stop  \ndb2start\n# 重启结束后继续后续操作\n```\n","slug":"DB2常见错误与解决方案","published":1,"updated":"2017-08-18T13:55:21.297Z","_id":"cj6hxnbad0000xlh8m3ah02ka","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"windows-db2-命令行工具使用\"><a href=\"#windows-db2-命令行工具使用\" class=\"headerlink\" title=\"windows db2 命令行工具使用\"></a>windows db2 命令行工具使用</h2><blockquote>\n<p>在控制台中输入 db2cmd 即可启动 db2 命令行工具。</p>\n</blockquote>\n<h3 id=\"连接数据库\"><a href=\"#连接数据库\" class=\"headerlink\" title=\"连接数据库\"></a>连接数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">db2 connect to database_name user user_name using your_password</div></pre></td></tr></table></figure>\n<h3 id=\"执行脚本\"><a href=\"#执行脚本\" class=\"headerlink\" title=\"执行脚本\"></a>执行脚本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">db2 -td@ -vf path_to_you_sql_file</div></pre></td></tr></table></figure>\n<p>其中 @ 表示脚本文件的语句结束符为 @，因为 SQL 脚本中默认的语句是分号（;），如果<br>不重新指定的话，在执行到第一分号的时候就不往下执行，因为，在SQL脚本文件中的最后一<br>个字符必须是 @。v表示将执行的脚本内容在终端中输出，f表示从文件读取SQL，后面的参数<br>是SQL脚本的绝对路径。</p>\n<h3 id=\"调用存储过程\"><a href=\"#调用存储过程\" class=\"headerlink\" title=\"调用存储过程\"></a>调用存储过程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">db2 call procedure_name  # 存储过程不带参数可以直接写存储过程名，不用带括号</div></pre></td></tr></table></figure>\n<h2 id=\"SQLCODE-964日志文件满的问题\"><a href=\"#SQLCODE-964日志文件满的问题\" class=\"headerlink\" title=\"SQLCODE=-964日志文件满的问题\"></a>SQLCODE=-964日志文件满的问题</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 先连接数据库，依次执行以下命令即可</div><div class=\"line\">db2 update db cfg for MY_DATABASE using LOGFILSIZ 7900  </div><div class=\"line\">db2 update db cfg for MY_DATABASE using LOGPRIMARY 30  </div><div class=\"line\">db2 update db cfg for MY_DATABASE using LOGSECOND 20</div><div class=\"line\">db2 &quot;force application all&quot;</div><div class=\"line\">db2stop  </div><div class=\"line\">db2start</div><div class=\"line\"># 重启结束后继续后续操作</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"windows-db2-命令行工具使用\"><a href=\"#windows-db2-命令行工具使用\" class=\"headerlink\" title=\"windows db2 命令行工具使用\"></a>windows db2 命令行工具使用</h2><blockquote>\n<p>在控制台中输入 db2cmd 即可启动 db2 命令行工具。</p>\n</blockquote>\n<h3 id=\"连接数据库\"><a href=\"#连接数据库\" class=\"headerlink\" title=\"连接数据库\"></a>连接数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">db2 connect to database_name user user_name using your_password</div></pre></td></tr></table></figure>\n<h3 id=\"执行脚本\"><a href=\"#执行脚本\" class=\"headerlink\" title=\"执行脚本\"></a>执行脚本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">db2 -td@ -vf path_to_you_sql_file</div></pre></td></tr></table></figure>\n<p>其中 @ 表示脚本文件的语句结束符为 @，因为 SQL 脚本中默认的语句是分号（;），如果<br>不重新指定的话，在执行到第一分号的时候就不往下执行，因为，在SQL脚本文件中的最后一<br>个字符必须是 @。v表示将执行的脚本内容在终端中输出，f表示从文件读取SQL，后面的参数<br>是SQL脚本的绝对路径。</p>\n<h3 id=\"调用存储过程\"><a href=\"#调用存储过程\" class=\"headerlink\" title=\"调用存储过程\"></a>调用存储过程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">db2 call procedure_name  # 存储过程不带参数可以直接写存储过程名，不用带括号</div></pre></td></tr></table></figure>\n<h2 id=\"SQLCODE-964日志文件满的问题\"><a href=\"#SQLCODE-964日志文件满的问题\" class=\"headerlink\" title=\"SQLCODE=-964日志文件满的问题\"></a>SQLCODE=-964日志文件满的问题</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 先连接数据库，依次执行以下命令即可</div><div class=\"line\">db2 update db cfg for MY_DATABASE using LOGFILSIZ 7900  </div><div class=\"line\">db2 update db cfg for MY_DATABASE using LOGPRIMARY 30  </div><div class=\"line\">db2 update db cfg for MY_DATABASE using LOGSECOND 20</div><div class=\"line\">db2 &quot;force application all&quot;</div><div class=\"line\">db2stop  </div><div class=\"line\">db2start</div><div class=\"line\"># 重启结束后继续后续操作</div></pre></td></tr></table></figure>\n"},{"title":"oracle重做日志分析","date":"2017-08-18T14:00:04.000Z","_content":"## 日志文件的块大小查询\n\n日志文件的块大小可以通过如下方法来查询：\n```\nselect distinct block_size from v$archived_log;\n```\n\n## 清理脏块\n\n将所有的脏块给清到磁盘上\n```\nalter system flush buffer_cache\n```\n\n## 查询日志分组信息\n\n```\nselect * from v$log;\n```\n\n## 查询当前日志分组\n\n```\nselect * from v$log where status='CURREN';\n```\n\n## 创建日志分析存储过程以及查询常见信息\n\n```\n# 加载字典至文件 /u01/app/logminer/dictionary.ora，需要目录和文件的所有者所数组是 oracle：dba\nexec dbms_logmnr_d.build( 'dictionary.ora', '/u01/app/logminer'); # 可选\n\n# 加载日志\nexec dbms_logmnr.add_logfile('/usr/lib/oracle/xe/app/oracle/flash_recovery_area/XE/onlinelog/o1_mf_1_djfw9s0s_.log', dbms_logmnr.NEW);\n\n# 再加载日志，可选\nexec dbms_logmnr.add_logfile('/usr/lib/oracle/xe/app/oracle/flash_recovery_area/XE/onlinelog/o1_mf_1_djfw9s0s_.log', dbms_logmnr.ADDFILE);\n\n# 启动logminer\ndbms_logmnr.start_logmnr(DictFileName=>'/u01/app/logminer/dictionary.ora');\n```\n至此，存储已经创建好，根据需要，字典可以选择加载或不加载，一般在是在执行DDL之后需要重新加载字典，接下来查询常见信息\n\n```\nselect SCN,INFO,to_char(timestamp,'yyyy-mm-dd hh24:mi:ss'),table_name,OPERATION,SQL_REDO,SQL_UNDO,status from v$logmnr_contents;\n```\n\n## 测试记录\n\n\n### 只用 ID 作为条件且只更新 LOB 字段（SQL_REDO 和 SQL_UNDO 中缺失 条件）\n\n#### 无主键表\n```\ncreate table event\n(\n id number,\n name varchar2(20),\n a_blob blob,\n a_clob  clob\n);\n\ninsert into event (id,name,a_blob,a_clob) values(1,'11','01010101010101','test-clob');\n\nupdate event set a_blob = null where id =3;\n\n## where 后面的条件缺失\n----- sql_redo = update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where ;\n----- sql_undo = update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where ;\n```\n\n#### 有主键表\n\n```\ncreate table event\n(\n id number primary key,\n name varchar2(20),\n a_blob blob,\n a_clob  clob\n\n);\n\n\ninsert into event (id,name,a_blob,a_clob) values(1,'11','01010101010101','test-clob');\n\nupdate \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where ;\n\n### where 后面的条件缺失\n-----> sql_redo = update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where ;\n-----> sql_undo = update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where ;\n```\n> 综上，可以排除未设主键的原因\n\n```\nupdate event set a_blob = null,name = 'xx' where id =1;\n\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"NAME\" = 'xx' where \"NAME\" = '11';\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"NAME\" = 'xx';\n\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"NAME\" = '11' where \"NAME\" = 'xx';\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"NAME\" = 'xx';\n```\n> 条件中虽然 ID 字段缺失，但是被更新的字段除了 Lob 之外其对于的旧值出现在 where 子句中，有个猜想，如下测试：\n\n```\nupdate event set a_blob = null,id = 1 where id =1;\n\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"A_BLOB\" = EMPTY_BLOB() where \"ID\" = '1';\n--sql_redo : update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"ID\" = '1';\n\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"A_BLOB\" = NULL where \"ID\" = '1';\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"ID\" = '1'\n\n```\n> 再如：\n\n```\nupdate event set a_blob = null,name='bbb',id = 1 where id =1;\n\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"NAME\" = 'bbb', \"A_BLOB\" = EMPTY_BLOB() where \"ID\" = '1' and \"NAME\" = 'aaa';\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = 'bbb';\n\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"NAME\" = 'aaa', \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = 'bbb';\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = 'bbb';\n```\n> 通过测试发现，除了 ID 字段，所有被修改的非 LOB 字段的旧值都会出现在 SQL_REDO 和 SQL_UNDO 的 where 子句中。\n  为了避免在单独的以 ID 作为标识修改 LOB 字段时导致的在 SQL_REDO 和 SQL_UNDO 中条件缺失的问题，应该在 set 子句\n  中指定 ID 字段的值，尽管 ID 字段并没有修改\n\n\n\n```\nupdate event set a_blob = null,name = '1-1',id = 1 where id =1;\n\n  ## 注意此处的 EMPTY_BLOB()\n --sql_redo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"NAME\" = '1-1', \"A_BLOB\" = EMPTY_BLOB() where \"ID\" = '1' and \"NAME\" = 'xx';\n --sql_redo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = '1-1';\n\n --sql_undo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"NAME\" = 'xx', \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = '1-1';\n --sql_undo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = '1-1';\n```\n\n```\nupdate event set a_blob = null,a_clob = null ,name = '1-1',id = 1 where id =1;\n\n  ## 注意此处的 EMPTY_BLOB()\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"NAME\" = '1-1', \"A_BLOB\" = EMPTY_BLOB() where \"ID\" = '1' and \"NAME\" = '1-1';\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL, \"A_CLOB\" = NULL where \"ID\" = '1' and \"NAME\" = '1-1';\n\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"NAME\" = '1-1', \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = '1-1';\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL, \"A_CLOB\" = NULL where \"ID\" = '1' and \"NAME\" = '1-1';\n\n```\n\n#### 更新BLOB字段内容(BLOB字段无法通过 SQL_UNDO 还原)\n```\n\n>表中 id 为 1 的记录字段 a_blob 非空：insert into event (id,name,a_blob,a_clob) values(1,'11','01010101010101','test-clob');\n\nupdate event set a_blob = '1010101',name = 'aaa' where id =1;\n\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"NAME\" = 'aaa', \"A_BLOB\" = EMPTY_BLOB() where \"NAME\" = '1-1';\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = HEXTORAW('01010101') where \"NAME\" = 'aaa';\n\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"NAME\" = '1-1', \"A_BLOB\" = NULL where \"NAME\" = 'aaa';\n## 最终只是把 a_blob 的设置为 NULL，并不是原来的 '01010101010101'\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"NAME\" = 'aaa';\n\n如果使用 activeJDBC 形式 ，执行 update event set a_blob = 'read bytes[] from a file',name = 'aaa' where id =1;\n日志中根本就没有出现 a_blob 字段\n-- sql_undo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1' where \"ID\" = '1';\n```\n\n#### sqldeveloper 和 jdbc 执行含 LOB 字段（超过4K）的 insert 对比\n\n> 含 LOB 字段的 insert 操作，数据库均会先执行 insert 非 LOB 字段的内容，之后再 update LOB 字段的内容。\n  使用 sqldeveloper 界面 insert 含 LOB 字段的记录时，日志中的 insert 和 update 的 SCN 是相同的，而\n  使用 java 代码通过 activeJDBC insert 含 LOB 字段的记录时，日志中的 insert 和 update 的 SCN 是不\n  相同的。\n","source":"_posts/oracle重做日志分析.md","raw":"---\ntitle: oracle重做日志分析\ndate: 2017-08-18 22:00:04\ntags: [oracle,日志]\n---\n## 日志文件的块大小查询\n\n日志文件的块大小可以通过如下方法来查询：\n```\nselect distinct block_size from v$archived_log;\n```\n\n## 清理脏块\n\n将所有的脏块给清到磁盘上\n```\nalter system flush buffer_cache\n```\n\n## 查询日志分组信息\n\n```\nselect * from v$log;\n```\n\n## 查询当前日志分组\n\n```\nselect * from v$log where status='CURREN';\n```\n\n## 创建日志分析存储过程以及查询常见信息\n\n```\n# 加载字典至文件 /u01/app/logminer/dictionary.ora，需要目录和文件的所有者所数组是 oracle：dba\nexec dbms_logmnr_d.build( 'dictionary.ora', '/u01/app/logminer'); # 可选\n\n# 加载日志\nexec dbms_logmnr.add_logfile('/usr/lib/oracle/xe/app/oracle/flash_recovery_area/XE/onlinelog/o1_mf_1_djfw9s0s_.log', dbms_logmnr.NEW);\n\n# 再加载日志，可选\nexec dbms_logmnr.add_logfile('/usr/lib/oracle/xe/app/oracle/flash_recovery_area/XE/onlinelog/o1_mf_1_djfw9s0s_.log', dbms_logmnr.ADDFILE);\n\n# 启动logminer\ndbms_logmnr.start_logmnr(DictFileName=>'/u01/app/logminer/dictionary.ora');\n```\n至此，存储已经创建好，根据需要，字典可以选择加载或不加载，一般在是在执行DDL之后需要重新加载字典，接下来查询常见信息\n\n```\nselect SCN,INFO,to_char(timestamp,'yyyy-mm-dd hh24:mi:ss'),table_name,OPERATION,SQL_REDO,SQL_UNDO,status from v$logmnr_contents;\n```\n\n## 测试记录\n\n\n### 只用 ID 作为条件且只更新 LOB 字段（SQL_REDO 和 SQL_UNDO 中缺失 条件）\n\n#### 无主键表\n```\ncreate table event\n(\n id number,\n name varchar2(20),\n a_blob blob,\n a_clob  clob\n);\n\ninsert into event (id,name,a_blob,a_clob) values(1,'11','01010101010101','test-clob');\n\nupdate event set a_blob = null where id =3;\n\n## where 后面的条件缺失\n----- sql_redo = update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where ;\n----- sql_undo = update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where ;\n```\n\n#### 有主键表\n\n```\ncreate table event\n(\n id number primary key,\n name varchar2(20),\n a_blob blob,\n a_clob  clob\n\n);\n\n\ninsert into event (id,name,a_blob,a_clob) values(1,'11','01010101010101','test-clob');\n\nupdate \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where ;\n\n### where 后面的条件缺失\n-----> sql_redo = update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where ;\n-----> sql_undo = update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where ;\n```\n> 综上，可以排除未设主键的原因\n\n```\nupdate event set a_blob = null,name = 'xx' where id =1;\n\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"NAME\" = 'xx' where \"NAME\" = '11';\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"NAME\" = 'xx';\n\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"NAME\" = '11' where \"NAME\" = 'xx';\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"NAME\" = 'xx';\n```\n> 条件中虽然 ID 字段缺失，但是被更新的字段除了 Lob 之外其对于的旧值出现在 where 子句中，有个猜想，如下测试：\n\n```\nupdate event set a_blob = null,id = 1 where id =1;\n\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"A_BLOB\" = EMPTY_BLOB() where \"ID\" = '1';\n--sql_redo : update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"ID\" = '1';\n\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"A_BLOB\" = NULL where \"ID\" = '1';\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"ID\" = '1'\n\n```\n> 再如：\n\n```\nupdate event set a_blob = null,name='bbb',id = 1 where id =1;\n\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"NAME\" = 'bbb', \"A_BLOB\" = EMPTY_BLOB() where \"ID\" = '1' and \"NAME\" = 'aaa';\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = 'bbb';\n\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"NAME\" = 'aaa', \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = 'bbb';\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = 'bbb';\n```\n> 通过测试发现，除了 ID 字段，所有被修改的非 LOB 字段的旧值都会出现在 SQL_REDO 和 SQL_UNDO 的 where 子句中。\n  为了避免在单独的以 ID 作为标识修改 LOB 字段时导致的在 SQL_REDO 和 SQL_UNDO 中条件缺失的问题，应该在 set 子句\n  中指定 ID 字段的值，尽管 ID 字段并没有修改\n\n\n\n```\nupdate event set a_blob = null,name = '1-1',id = 1 where id =1;\n\n  ## 注意此处的 EMPTY_BLOB()\n --sql_redo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"NAME\" = '1-1', \"A_BLOB\" = EMPTY_BLOB() where \"ID\" = '1' and \"NAME\" = 'xx';\n --sql_redo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = '1-1';\n\n --sql_undo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"NAME\" = 'xx', \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = '1-1';\n --sql_undo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = '1-1';\n```\n\n```\nupdate event set a_blob = null,a_clob = null ,name = '1-1',id = 1 where id =1;\n\n  ## 注意此处的 EMPTY_BLOB()\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"NAME\" = '1-1', \"A_BLOB\" = EMPTY_BLOB() where \"ID\" = '1' and \"NAME\" = '1-1';\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL, \"A_CLOB\" = NULL where \"ID\" = '1' and \"NAME\" = '1-1';\n\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1', \"NAME\" = '1-1', \"A_BLOB\" = NULL where \"ID\" = '1' and \"NAME\" = '1-1';\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL, \"A_CLOB\" = NULL where \"ID\" = '1' and \"NAME\" = '1-1';\n\n```\n\n#### 更新BLOB字段内容(BLOB字段无法通过 SQL_UNDO 还原)\n```\n\n>表中 id 为 1 的记录字段 a_blob 非空：insert into event (id,name,a_blob,a_clob) values(1,'11','01010101010101','test-clob');\n\nupdate event set a_blob = '1010101',name = 'aaa' where id =1;\n\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"NAME\" = 'aaa', \"A_BLOB\" = EMPTY_BLOB() where \"NAME\" = '1-1';\n--sql_redo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = HEXTORAW('01010101') where \"NAME\" = 'aaa';\n\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"NAME\" = '1-1', \"A_BLOB\" = NULL where \"NAME\" = 'aaa';\n## 最终只是把 a_blob 的设置为 NULL，并不是原来的 '01010101010101'\n--sql_undo :  update \"SYSTEM\".\"EVENT\" set \"A_BLOB\" = NULL where \"NAME\" = 'aaa';\n\n如果使用 activeJDBC 形式 ，执行 update event set a_blob = 'read bytes[] from a file',name = 'aaa' where id =1;\n日志中根本就没有出现 a_blob 字段\n-- sql_undo :  update \"SYSTEM\".\"EVENT\" set \"ID\" = '1' where \"ID\" = '1';\n```\n\n#### sqldeveloper 和 jdbc 执行含 LOB 字段（超过4K）的 insert 对比\n\n> 含 LOB 字段的 insert 操作，数据库均会先执行 insert 非 LOB 字段的内容，之后再 update LOB 字段的内容。\n  使用 sqldeveloper 界面 insert 含 LOB 字段的记录时，日志中的 insert 和 update 的 SCN 是相同的，而\n  使用 java 代码通过 activeJDBC insert 含 LOB 字段的记录时，日志中的 insert 和 update 的 SCN 是不\n  相同的。\n","slug":"oracle重做日志分析","published":1,"updated":"2017-08-18T14:17:51.117Z","_id":"cj6hxz5y700009ph8ezdq3xfa","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"日志文件的块大小查询\"><a href=\"#日志文件的块大小查询\" class=\"headerlink\" title=\"日志文件的块大小查询\"></a>日志文件的块大小查询</h2><p>日志文件的块大小可以通过如下方法来查询：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select distinct block_size from v$archived_log;</div></pre></td></tr></table></figure></p>\n<h2 id=\"清理脏块\"><a href=\"#清理脏块\" class=\"headerlink\" title=\"清理脏块\"></a>清理脏块</h2><p>将所有的脏块给清到磁盘上<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter system flush buffer_cache</div></pre></td></tr></table></figure></p>\n<h2 id=\"查询日志分组信息\"><a href=\"#查询日志分组信息\" class=\"headerlink\" title=\"查询日志分组信息\"></a>查询日志分组信息</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from v$log;</div></pre></td></tr></table></figure>\n<h2 id=\"查询当前日志分组\"><a href=\"#查询当前日志分组\" class=\"headerlink\" title=\"查询当前日志分组\"></a>查询当前日志分组</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from v$log where status=&apos;CURREN&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"创建日志分析存储过程以及查询常见信息\"><a href=\"#创建日志分析存储过程以及查询常见信息\" class=\"headerlink\" title=\"创建日志分析存储过程以及查询常见信息\"></a>创建日志分析存储过程以及查询常见信息</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 加载字典至文件 /u01/app/logminer/dictionary.ora，需要目录和文件的所有者所数组是 oracle：dba</div><div class=\"line\">exec dbms_logmnr_d.build( &apos;dictionary.ora&apos;, &apos;/u01/app/logminer&apos;); # 可选</div><div class=\"line\"></div><div class=\"line\"># 加载日志</div><div class=\"line\">exec dbms_logmnr.add_logfile(&apos;/usr/lib/oracle/xe/app/oracle/flash_recovery_area/XE/onlinelog/o1_mf_1_djfw9s0s_.log&apos;, dbms_logmnr.NEW);</div><div class=\"line\"></div><div class=\"line\"># 再加载日志，可选</div><div class=\"line\">exec dbms_logmnr.add_logfile(&apos;/usr/lib/oracle/xe/app/oracle/flash_recovery_area/XE/onlinelog/o1_mf_1_djfw9s0s_.log&apos;, dbms_logmnr.ADDFILE);</div><div class=\"line\"></div><div class=\"line\"># 启动logminer</div><div class=\"line\">dbms_logmnr.start_logmnr(DictFileName=&gt;&apos;/u01/app/logminer/dictionary.ora&apos;);</div></pre></td></tr></table></figure>\n<p>至此，存储已经创建好，根据需要，字典可以选择加载或不加载，一般在是在执行DDL之后需要重新加载字典，接下来查询常见信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select SCN,INFO,to_char(timestamp,&apos;yyyy-mm-dd hh24:mi:ss&apos;),table_name,OPERATION,SQL_REDO,SQL_UNDO,status from v$logmnr_contents;</div></pre></td></tr></table></figure>\n<h2 id=\"测试记录\"><a href=\"#测试记录\" class=\"headerlink\" title=\"测试记录\"></a>测试记录</h2><h3 id=\"只用-ID-作为条件且只更新-LOB-字段（SQL-REDO-和-SQL-UNDO-中缺失-条件）\"><a href=\"#只用-ID-作为条件且只更新-LOB-字段（SQL-REDO-和-SQL-UNDO-中缺失-条件）\" class=\"headerlink\" title=\"只用 ID 作为条件且只更新 LOB 字段（SQL_REDO 和 SQL_UNDO 中缺失 条件）\"></a>只用 ID 作为条件且只更新 LOB 字段（SQL_REDO 和 SQL_UNDO 中缺失 条件）</h3><h4 id=\"无主键表\"><a href=\"#无主键表\" class=\"headerlink\" title=\"无主键表\"></a>无主键表</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table event</div><div class=\"line\">(</div><div class=\"line\"> id number,</div><div class=\"line\"> name varchar2(20),</div><div class=\"line\"> a_blob blob,</div><div class=\"line\"> a_clob  clob</div><div class=\"line\">);</div><div class=\"line\"></div><div class=\"line\">insert into event (id,name,a_blob,a_clob) values(1,&apos;11&apos;,&apos;01010101010101&apos;,&apos;test-clob&apos;);</div><div class=\"line\"></div><div class=\"line\">update event set a_blob = null where id =3;</div><div class=\"line\"></div><div class=\"line\">## where 后面的条件缺失</div><div class=\"line\">----- sql_redo = update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where ;</div><div class=\"line\">----- sql_undo = update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where ;</div></pre></td></tr></table></figure>\n<h4 id=\"有主键表\"><a href=\"#有主键表\" class=\"headerlink\" title=\"有主键表\"></a>有主键表</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table event</div><div class=\"line\">(</div><div class=\"line\"> id number primary key,</div><div class=\"line\"> name varchar2(20),</div><div class=\"line\"> a_blob blob,</div><div class=\"line\"> a_clob  clob</div><div class=\"line\"></div><div class=\"line\">);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">insert into event (id,name,a_blob,a_clob) values(1,&apos;11&apos;,&apos;01010101010101&apos;,&apos;test-clob&apos;);</div><div class=\"line\"></div><div class=\"line\">update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where ;</div><div class=\"line\"></div><div class=\"line\">### where 后面的条件缺失</div><div class=\"line\">-----&gt; sql_redo = update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where ;</div><div class=\"line\">-----&gt; sql_undo = update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where ;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>综上，可以排除未设主键的原因</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">update event set a_blob = null,name = &apos;xx&apos; where id =1;</div><div class=\"line\"></div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;NAME&quot; = &apos;xx&apos; where &quot;NAME&quot; = &apos;11&apos;;</div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;NAME&quot; = &apos;xx&apos;;</div><div class=\"line\"></div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;NAME&quot; = &apos;11&apos; where &quot;NAME&quot; = &apos;xx&apos;;</div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;NAME&quot; = &apos;xx&apos;;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>条件中虽然 ID 字段缺失，但是被更新的字段除了 Lob 之外其对于的旧值出现在 where 子句中，有个猜想，如下测试：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">update event set a_blob = null,id = 1 where id =1;</div><div class=\"line\"></div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;A_BLOB&quot; = EMPTY_BLOB() where &quot;ID&quot; = &apos;1&apos;;</div><div class=\"line\">--sql_redo : update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos;;</div><div class=\"line\"></div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos;;</div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>再如：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">update event set a_blob = null,name=&apos;bbb&apos;,id = 1 where id =1;</div><div class=\"line\"></div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;NAME&quot; = &apos;bbb&apos;, &quot;A_BLOB&quot; = EMPTY_BLOB() where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;aaa&apos;;</div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;bbb&apos;;</div><div class=\"line\"></div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;NAME&quot; = &apos;aaa&apos;, &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;bbb&apos;;</div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;bbb&apos;;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>通过测试发现，除了 ID 字段，所有被修改的非 LOB 字段的旧值都会出现在 SQL_REDO 和 SQL_UNDO 的 where 子句中。<br>  为了避免在单独的以 ID 作为标识修改 LOB 字段时导致的在 SQL_REDO 和 SQL_UNDO 中条件缺失的问题，应该在 set 子句<br>  中指定 ID 字段的值，尽管 ID 字段并没有修改</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">update event set a_blob = null,name = &apos;1-1&apos;,id = 1 where id =1;</div><div class=\"line\"></div><div class=\"line\">  ## 注意此处的 EMPTY_BLOB()</div><div class=\"line\"> --sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;NAME&quot; = &apos;1-1&apos;, &quot;A_BLOB&quot; = EMPTY_BLOB() where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;xx&apos;;</div><div class=\"line\"> --sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div><div class=\"line\"></div><div class=\"line\"> --sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;NAME&quot; = &apos;xx&apos;, &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div><div class=\"line\"> --sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">update event set a_blob = null,a_clob = null ,name = &apos;1-1&apos;,id = 1 where id =1;</div><div class=\"line\"></div><div class=\"line\">  ## 注意此处的 EMPTY_BLOB()</div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;NAME&quot; = &apos;1-1&apos;, &quot;A_BLOB&quot; = EMPTY_BLOB() where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL, &quot;A_CLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div><div class=\"line\"></div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;NAME&quot; = &apos;1-1&apos;, &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL, &quot;A_CLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div></pre></td></tr></table></figure>\n<h4 id=\"更新BLOB字段内容-BLOB字段无法通过-SQL-UNDO-还原\"><a href=\"#更新BLOB字段内容-BLOB字段无法通过-SQL-UNDO-还原\" class=\"headerlink\" title=\"更新BLOB字段内容(BLOB字段无法通过 SQL_UNDO 还原)\"></a>更新BLOB字段内容(BLOB字段无法通过 SQL_UNDO 还原)</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&gt;表中 id 为 1 的记录字段 a_blob 非空：insert into event (id,name,a_blob,a_clob) values(1,&apos;11&apos;,&apos;01010101010101&apos;,&apos;test-clob&apos;);</div><div class=\"line\"></div><div class=\"line\">update event set a_blob = &apos;1010101&apos;,name = &apos;aaa&apos; where id =1;</div><div class=\"line\"></div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;NAME&quot; = &apos;aaa&apos;, &quot;A_BLOB&quot; = EMPTY_BLOB() where &quot;NAME&quot; = &apos;1-1&apos;;</div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = HEXTORAW(&apos;01010101&apos;) where &quot;NAME&quot; = &apos;aaa&apos;;</div><div class=\"line\"></div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;NAME&quot; = &apos;1-1&apos;, &quot;A_BLOB&quot; = NULL where &quot;NAME&quot; = &apos;aaa&apos;;</div><div class=\"line\">## 最终只是把 a_blob 的设置为 NULL，并不是原来的 &apos;01010101010101&apos;</div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;NAME&quot; = &apos;aaa&apos;;</div><div class=\"line\"></div><div class=\"line\">如果使用 activeJDBC 形式 ，执行 update event set a_blob = &apos;read bytes[] from a file&apos;,name = &apos;aaa&apos; where id =1;</div><div class=\"line\">日志中根本就没有出现 a_blob 字段</div><div class=\"line\">-- sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos; where &quot;ID&quot; = &apos;1&apos;;</div></pre></td></tr></table></figure>\n<h4 id=\"sqldeveloper-和-jdbc-执行含-LOB-字段（超过4K）的-insert-对比\"><a href=\"#sqldeveloper-和-jdbc-执行含-LOB-字段（超过4K）的-insert-对比\" class=\"headerlink\" title=\"sqldeveloper 和 jdbc 执行含 LOB 字段（超过4K）的 insert 对比\"></a>sqldeveloper 和 jdbc 执行含 LOB 字段（超过4K）的 insert 对比</h4><blockquote>\n<p>含 LOB 字段的 insert 操作，数据库均会先执行 insert 非 LOB 字段的内容，之后再 update LOB 字段的内容。<br>  使用 sqldeveloper 界面 insert 含 LOB 字段的记录时，日志中的 insert 和 update 的 SCN 是相同的，而<br>  使用 java 代码通过 activeJDBC insert 含 LOB 字段的记录时，日志中的 insert 和 update 的 SCN 是不<br>  相同的。</p>\n</blockquote>\n","excerpt":"","more":"<h2 id=\"日志文件的块大小查询\"><a href=\"#日志文件的块大小查询\" class=\"headerlink\" title=\"日志文件的块大小查询\"></a>日志文件的块大小查询</h2><p>日志文件的块大小可以通过如下方法来查询：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select distinct block_size from v$archived_log;</div></pre></td></tr></table></figure></p>\n<h2 id=\"清理脏块\"><a href=\"#清理脏块\" class=\"headerlink\" title=\"清理脏块\"></a>清理脏块</h2><p>将所有的脏块给清到磁盘上<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">alter system flush buffer_cache</div></pre></td></tr></table></figure></p>\n<h2 id=\"查询日志分组信息\"><a href=\"#查询日志分组信息\" class=\"headerlink\" title=\"查询日志分组信息\"></a>查询日志分组信息</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from v$log;</div></pre></td></tr></table></figure>\n<h2 id=\"查询当前日志分组\"><a href=\"#查询当前日志分组\" class=\"headerlink\" title=\"查询当前日志分组\"></a>查询当前日志分组</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select * from v$log where status=&apos;CURREN&apos;;</div></pre></td></tr></table></figure>\n<h2 id=\"创建日志分析存储过程以及查询常见信息\"><a href=\"#创建日志分析存储过程以及查询常见信息\" class=\"headerlink\" title=\"创建日志分析存储过程以及查询常见信息\"></a>创建日志分析存储过程以及查询常见信息</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 加载字典至文件 /u01/app/logminer/dictionary.ora，需要目录和文件的所有者所数组是 oracle：dba</div><div class=\"line\">exec dbms_logmnr_d.build( &apos;dictionary.ora&apos;, &apos;/u01/app/logminer&apos;); # 可选</div><div class=\"line\"></div><div class=\"line\"># 加载日志</div><div class=\"line\">exec dbms_logmnr.add_logfile(&apos;/usr/lib/oracle/xe/app/oracle/flash_recovery_area/XE/onlinelog/o1_mf_1_djfw9s0s_.log&apos;, dbms_logmnr.NEW);</div><div class=\"line\"></div><div class=\"line\"># 再加载日志，可选</div><div class=\"line\">exec dbms_logmnr.add_logfile(&apos;/usr/lib/oracle/xe/app/oracle/flash_recovery_area/XE/onlinelog/o1_mf_1_djfw9s0s_.log&apos;, dbms_logmnr.ADDFILE);</div><div class=\"line\"></div><div class=\"line\"># 启动logminer</div><div class=\"line\">dbms_logmnr.start_logmnr(DictFileName=&gt;&apos;/u01/app/logminer/dictionary.ora&apos;);</div></pre></td></tr></table></figure>\n<p>至此，存储已经创建好，根据需要，字典可以选择加载或不加载，一般在是在执行DDL之后需要重新加载字典，接下来查询常见信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select SCN,INFO,to_char(timestamp,&apos;yyyy-mm-dd hh24:mi:ss&apos;),table_name,OPERATION,SQL_REDO,SQL_UNDO,status from v$logmnr_contents;</div></pre></td></tr></table></figure>\n<h2 id=\"测试记录\"><a href=\"#测试记录\" class=\"headerlink\" title=\"测试记录\"></a>测试记录</h2><h3 id=\"只用-ID-作为条件且只更新-LOB-字段（SQL-REDO-和-SQL-UNDO-中缺失-条件）\"><a href=\"#只用-ID-作为条件且只更新-LOB-字段（SQL-REDO-和-SQL-UNDO-中缺失-条件）\" class=\"headerlink\" title=\"只用 ID 作为条件且只更新 LOB 字段（SQL_REDO 和 SQL_UNDO 中缺失 条件）\"></a>只用 ID 作为条件且只更新 LOB 字段（SQL_REDO 和 SQL_UNDO 中缺失 条件）</h3><h4 id=\"无主键表\"><a href=\"#无主键表\" class=\"headerlink\" title=\"无主键表\"></a>无主键表</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table event</div><div class=\"line\">(</div><div class=\"line\"> id number,</div><div class=\"line\"> name varchar2(20),</div><div class=\"line\"> a_blob blob,</div><div class=\"line\"> a_clob  clob</div><div class=\"line\">);</div><div class=\"line\"></div><div class=\"line\">insert into event (id,name,a_blob,a_clob) values(1,&apos;11&apos;,&apos;01010101010101&apos;,&apos;test-clob&apos;);</div><div class=\"line\"></div><div class=\"line\">update event set a_blob = null where id =3;</div><div class=\"line\"></div><div class=\"line\">## where 后面的条件缺失</div><div class=\"line\">----- sql_redo = update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where ;</div><div class=\"line\">----- sql_undo = update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where ;</div></pre></td></tr></table></figure>\n<h4 id=\"有主键表\"><a href=\"#有主键表\" class=\"headerlink\" title=\"有主键表\"></a>有主键表</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">create table event</div><div class=\"line\">(</div><div class=\"line\"> id number primary key,</div><div class=\"line\"> name varchar2(20),</div><div class=\"line\"> a_blob blob,</div><div class=\"line\"> a_clob  clob</div><div class=\"line\"></div><div class=\"line\">);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">insert into event (id,name,a_blob,a_clob) values(1,&apos;11&apos;,&apos;01010101010101&apos;,&apos;test-clob&apos;);</div><div class=\"line\"></div><div class=\"line\">update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where ;</div><div class=\"line\"></div><div class=\"line\">### where 后面的条件缺失</div><div class=\"line\">-----&gt; sql_redo = update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where ;</div><div class=\"line\">-----&gt; sql_undo = update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where ;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>综上，可以排除未设主键的原因</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">update event set a_blob = null,name = &apos;xx&apos; where id =1;</div><div class=\"line\"></div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;NAME&quot; = &apos;xx&apos; where &quot;NAME&quot; = &apos;11&apos;;</div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;NAME&quot; = &apos;xx&apos;;</div><div class=\"line\"></div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;NAME&quot; = &apos;11&apos; where &quot;NAME&quot; = &apos;xx&apos;;</div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;NAME&quot; = &apos;xx&apos;;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>条件中虽然 ID 字段缺失，但是被更新的字段除了 Lob 之外其对于的旧值出现在 where 子句中，有个猜想，如下测试：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">update event set a_blob = null,id = 1 where id =1;</div><div class=\"line\"></div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;A_BLOB&quot; = EMPTY_BLOB() where &quot;ID&quot; = &apos;1&apos;;</div><div class=\"line\">--sql_redo : update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos;;</div><div class=\"line\"></div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos;;</div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>再如：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">update event set a_blob = null,name=&apos;bbb&apos;,id = 1 where id =1;</div><div class=\"line\"></div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;NAME&quot; = &apos;bbb&apos;, &quot;A_BLOB&quot; = EMPTY_BLOB() where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;aaa&apos;;</div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;bbb&apos;;</div><div class=\"line\"></div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;NAME&quot; = &apos;aaa&apos;, &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;bbb&apos;;</div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;bbb&apos;;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>通过测试发现，除了 ID 字段，所有被修改的非 LOB 字段的旧值都会出现在 SQL_REDO 和 SQL_UNDO 的 where 子句中。<br>  为了避免在单独的以 ID 作为标识修改 LOB 字段时导致的在 SQL_REDO 和 SQL_UNDO 中条件缺失的问题，应该在 set 子句<br>  中指定 ID 字段的值，尽管 ID 字段并没有修改</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">update event set a_blob = null,name = &apos;1-1&apos;,id = 1 where id =1;</div><div class=\"line\"></div><div class=\"line\">  ## 注意此处的 EMPTY_BLOB()</div><div class=\"line\"> --sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;NAME&quot; = &apos;1-1&apos;, &quot;A_BLOB&quot; = EMPTY_BLOB() where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;xx&apos;;</div><div class=\"line\"> --sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div><div class=\"line\"></div><div class=\"line\"> --sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;NAME&quot; = &apos;xx&apos;, &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div><div class=\"line\"> --sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">update event set a_blob = null,a_clob = null ,name = &apos;1-1&apos;,id = 1 where id =1;</div><div class=\"line\"></div><div class=\"line\">  ## 注意此处的 EMPTY_BLOB()</div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;NAME&quot; = &apos;1-1&apos;, &quot;A_BLOB&quot; = EMPTY_BLOB() where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL, &quot;A_CLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div><div class=\"line\"></div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos;, &quot;NAME&quot; = &apos;1-1&apos;, &quot;A_BLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL, &quot;A_CLOB&quot; = NULL where &quot;ID&quot; = &apos;1&apos; and &quot;NAME&quot; = &apos;1-1&apos;;</div></pre></td></tr></table></figure>\n<h4 id=\"更新BLOB字段内容-BLOB字段无法通过-SQL-UNDO-还原\"><a href=\"#更新BLOB字段内容-BLOB字段无法通过-SQL-UNDO-还原\" class=\"headerlink\" title=\"更新BLOB字段内容(BLOB字段无法通过 SQL_UNDO 还原)\"></a>更新BLOB字段内容(BLOB字段无法通过 SQL_UNDO 还原)</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&gt;表中 id 为 1 的记录字段 a_blob 非空：insert into event (id,name,a_blob,a_clob) values(1,&apos;11&apos;,&apos;01010101010101&apos;,&apos;test-clob&apos;);</div><div class=\"line\"></div><div class=\"line\">update event set a_blob = &apos;1010101&apos;,name = &apos;aaa&apos; where id =1;</div><div class=\"line\"></div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;NAME&quot; = &apos;aaa&apos;, &quot;A_BLOB&quot; = EMPTY_BLOB() where &quot;NAME&quot; = &apos;1-1&apos;;</div><div class=\"line\">--sql_redo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = HEXTORAW(&apos;01010101&apos;) where &quot;NAME&quot; = &apos;aaa&apos;;</div><div class=\"line\"></div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;NAME&quot; = &apos;1-1&apos;, &quot;A_BLOB&quot; = NULL where &quot;NAME&quot; = &apos;aaa&apos;;</div><div class=\"line\">## 最终只是把 a_blob 的设置为 NULL，并不是原来的 &apos;01010101010101&apos;</div><div class=\"line\">--sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;A_BLOB&quot; = NULL where &quot;NAME&quot; = &apos;aaa&apos;;</div><div class=\"line\"></div><div class=\"line\">如果使用 activeJDBC 形式 ，执行 update event set a_blob = &apos;read bytes[] from a file&apos;,name = &apos;aaa&apos; where id =1;</div><div class=\"line\">日志中根本就没有出现 a_blob 字段</div><div class=\"line\">-- sql_undo :  update &quot;SYSTEM&quot;.&quot;EVENT&quot; set &quot;ID&quot; = &apos;1&apos; where &quot;ID&quot; = &apos;1&apos;;</div></pre></td></tr></table></figure>\n<h4 id=\"sqldeveloper-和-jdbc-执行含-LOB-字段（超过4K）的-insert-对比\"><a href=\"#sqldeveloper-和-jdbc-执行含-LOB-字段（超过4K）的-insert-对比\" class=\"headerlink\" title=\"sqldeveloper 和 jdbc 执行含 LOB 字段（超过4K）的 insert 对比\"></a>sqldeveloper 和 jdbc 执行含 LOB 字段（超过4K）的 insert 对比</h4><blockquote>\n<p>含 LOB 字段的 insert 操作，数据库均会先执行 insert 非 LOB 字段的内容，之后再 update LOB 字段的内容。<br>  使用 sqldeveloper 界面 insert 含 LOB 字段的记录时，日志中的 insert 和 update 的 SCN 是相同的，而<br>  使用 java 代码通过 activeJDBC insert 含 LOB 字段的记录时，日志中的 insert 和 update 的 SCN 是不<br>  相同的。</p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj6hwvw810000jeh8vz8468gc","tag_id":"cj6hwvw890002jeh8p1e07chz","_id":"cj6hwvw8i0007jeh8fcwt1b2m"},{"post_id":"cj6hwvw860001jeh8rqi58fzo","tag_id":"cj6hwvw8h0005jeh8v3z1z2yx","_id":"cj6hwvw8o000bjeh8qlbj8j2c"},{"post_id":"cj6hwvw8c0003jeh8vk4hiz7x","tag_id":"cj6hwvw8o000ajeh8yu3jzzlx","_id":"cj6hwvw8x000jjeh8gs2xu4l4"},{"post_id":"cj6hwvw8c0003jeh8vk4hiz7x","tag_id":"cj6hwvw8s000ejeh82jf30esd","_id":"cj6hwvw8y000ljeh8lxyy36ae"},{"post_id":"cj6hwvw8e0004jeh8327t1iuh","tag_id":"cj6hwvw8w000hjeh8l2yuccwb","_id":"cj6hwvw96000rjeh8jhuh46tu"},{"post_id":"cj6hwvw8e0004jeh8327t1iuh","tag_id":"cj6hwvw8s000ejeh82jf30esd","_id":"cj6hwvw97000tjeh8dhp6iagc"},{"post_id":"cj6hwvw8h0006jeh8eak0pypd","tag_id":"cj6hwvw95000pjeh8py8av9su","_id":"cj6hwvw9d0010jeh8s3xxampf"},{"post_id":"cj6hwvw8h0006jeh8eak0pypd","tag_id":"cj6hwvw98000vjeh8y458xqm1","_id":"cj6hwvw9d0011jeh8m0jqfr4w"},{"post_id":"cj6hwvw8h0006jeh8eak0pypd","tag_id":"cj6hwvw9b000yjeh8qrppecgr","_id":"cj6hwvw9e0013jeh88964o1fr"},{"post_id":"cj6hwvw8i0008jeh8bjimwnpa","tag_id":"cj6hwvw9c000zjeh8m1dcaxls","_id":"cj6hwvw9e0014jeh87srdbfn2"},{"post_id":"cj6hwvw8k0009jeh8cs5jtg13","tag_id":"cj6hwvw9d0012jeh82m82bxaw","_id":"cj6hwvw9f0017jeh88hg5mg4g"},{"post_id":"cj6hwvw8k0009jeh8cs5jtg13","tag_id":"cj6hwvw9e0015jeh8z036oadt","_id":"cj6hwvw9f0018jeh8ln3l4jb4"},{"post_id":"cj6hwvw8p000cjeh89ko7jw6o","tag_id":"cj6hwvw9f0016jeh8k0s1ywah","_id":"cj6hwvw9g001bjeh89hu606fu"},{"post_id":"cj6hwvw8p000cjeh89ko7jw6o","tag_id":"cj6hwvw9f0019jeh8nnzljr7b","_id":"cj6hwvw9g001cjeh85cewyu02"},{"post_id":"cj6hwvw8q000djeh860y2j2r2","tag_id":"cj6hwvw9g001ajeh8zhpbze5v","_id":"cj6hwvw9g001ejeh8jxhxqkka"},{"post_id":"cj6hwvw8s000fjeh80wzoumht","tag_id":"cj6hwvw9g001djeh8qe8ikk9l","_id":"cj6hwvw9h001hjeh86bkx4qeb"},{"post_id":"cj6hwvw8s000fjeh80wzoumht","tag_id":"cj6hwvw9g001fjeh8gocpfuor","_id":"cj6hwvw9h001ijeh8hnn6wsng"},{"post_id":"cj6hwvw8u000gjeh8x63kujlo","tag_id":"cj6hwvw9h001gjeh8ir8ep3nk","_id":"cj6hwvw9i001ljeh82urez5yu"},{"post_id":"cj6hwvw8u000gjeh8x63kujlo","tag_id":"cj6hwvw9h001jjeh83x946u46","_id":"cj6hwvw9i001mjeh8znhrbjbp"},{"post_id":"cj6hwvw8w000ijeh83gef7ise","tag_id":"cj6hwvw9h001kjeh8rph9ywfh","_id":"cj6hwvw9j001ojeh8098ml6w1"},{"post_id":"cj6hwvw8y000kjeh8t32xl6v6","tag_id":"cj6hwvw9h001kjeh8rph9ywfh","_id":"cj6hwvw9j001qjeh8yejuc19g"},{"post_id":"cj6hwvw8z000njeh8wq57071k","tag_id":"cj6hwvw9j001pjeh8hg5zihy4","_id":"cj6hwvw9j001sjeh81kv968u2"},{"post_id":"cj6hwvw91000ojeh89a6v4zq2","tag_id":"cj6hwvw9g001djeh8qe8ikk9l","_id":"cj6hwvw9k001ujeh8dam5a5vh"},{"post_id":"cj6hwvw95000qjeh8sdbilytr","tag_id":"cj6hwvw9e0015jeh8z036oadt","_id":"cj6hwvw9l001zjeh80edrcqpm"},{"post_id":"cj6hwvw95000qjeh8sdbilytr","tag_id":"cj6hwvw9k001vjeh8vqpcexv5","_id":"cj6hwvw9l0020jeh85x490ebn"},{"post_id":"cj6hwvw95000qjeh8sdbilytr","tag_id":"cj6hwvw9k001wjeh8zjq5zstn","_id":"cj6hwvw9l0022jeh8wbbucta7"},{"post_id":"cj6hwvw95000qjeh8sdbilytr","tag_id":"cj6hwvw9k001xjeh8cb0i65ar","_id":"cj6hwvw9l0023jeh8juz5u4wy"},{"post_id":"cj6hwvw96000sjeh8yu6rppzy","tag_id":"cj6hwvw9l001yjeh8ypkxl8e5","_id":"cj6hwvw9m0025jeh85v83n1ja"},{"post_id":"cj6hwvw97000ujeh8sd93xd0g","tag_id":"cj6hwvw9l0021jeh8znsl455e","_id":"cj6hwvw9m0026jeh8uokfo64e"},{"post_id":"cj6hwvw99000wjeh8okh08rnl","tag_id":"cj6hwvw9j001pjeh8hg5zihy4","_id":"cj6hwvw9m0028jeh8ufbscya0"},{"post_id":"cj6hwvw9a000xjeh859klc655","tag_id":"cj6hwvw9m0027jeh8lqfp0lux","_id":"cj6hwvw9o002fjeh8qv5a7g7u"},{"post_id":"cj6hwvw9a000xjeh859klc655","tag_id":"cj6hwvw9m0029jeh85jy1wo92","_id":"cj6hwvw9o002gjeh83cwm0hz7"},{"post_id":"cj6hwvw9a000xjeh859klc655","tag_id":"cj6hwvw9m002ajeh8lbbn79s9","_id":"cj6hwvw9o002hjeh8k6ah7f05"},{"post_id":"cj6hwvw9a000xjeh859klc655","tag_id":"cj6hwvw9n002bjeh835cnlnf7","_id":"cj6hwvw9o002ijeh87mtydopw"},{"post_id":"cj6hwvw9a000xjeh859klc655","tag_id":"cj6hwvw9n002cjeh86x0k0qc4","_id":"cj6hwvw9o002jjeh8cvo05fw6"},{"post_id":"cj6hwvw9a000xjeh859klc655","tag_id":"cj6hwvw9h001gjeh8ir8ep3nk","_id":"cj6hwvw9o002kjeh8us1v9qne"},{"post_id":"cj6hwvw9a000xjeh859klc655","tag_id":"cj6hwvw9l0021jeh8znsl455e","_id":"cj6hwvw9o002ljeh8eapzjs7e"},{"post_id":"cj6hwvw8w000ijeh83gef7ise","tag_id":"cj6hwvw9h001jjeh83x946u46","_id":"cj6hxjor2000572h8x53j96qd"},{"post_id":"cj6hxnbad0000xlh8m3ah02ka","tag_id":"cj6hwvw9n002cjeh86x0k0qc4","_id":"cj6hxt2vr0004ffh830uebhp9"},{"post_id":"cj6hwvw8w000ijeh83gef7ise","tag_id":"cj6hxu1930000tfh81t35rklj","_id":"cj6hxu1940001tfh8luu1j4xi"},{"post_id":"cj6hwvw8u000gjeh8x63kujlo","tag_id":"cj6hxu1930000tfh81t35rklj","_id":"cj6hxueft0002tfh8lfjqiqzt"},{"post_id":"cj6hxz5y700009ph8ezdq3xfa","tag_id":"cj6hwvw9h001kjeh8rph9ywfh","_id":"cj6hymep50000nrh89pczjo4j"},{"post_id":"cj6hxz5y700009ph8ezdq3xfa","tag_id":"cj6hxznrr00019ph8ir8m6ui2","_id":"cj6hymep60001nrh8xx5gbz28"}],"Tag":[{"name":"CentOS","_id":"cj6hwvw890002jeh8p1e07chz"},{"name":"AngularJS","_id":"cj6hwvw8h0005jeh8v3z1z2yx"},{"name":"Hexo","_id":"cj6hwvw8o000ajeh8yu3jzzlx"},{"name":"Github-pages","_id":"cj6hwvw8s000ejeh82jf30esd"},{"name":"Jekyll","_id":"cj6hwvw8w000hjeh8l2yuccwb"},{"name":"tomcat","_id":"cj6hwvw95000pjeh8py8av9su"},{"name":"jetty","_id":"cj6hwvw98000vjeh8y458xqm1"},{"name":"sparkjava","_id":"cj6hwvw9b000yjeh8qrppecgr"},{"name":"ruby","_id":"cj6hwvw9c000zjeh8m1dcaxls"},{"name":"eclipse","_id":"cj6hwvw9d0012jeh82m82bxaw"},{"name":"ubuntu","_id":"cj6hwvw9e0015jeh8z036oadt"},{"name":"Maven","_id":"cj6hwvw9f0016jeh8k0s1ywah"},{"name":"打包","_id":"cj6hwvw9f0019jeh8nnzljr7b"},{"name":"maven","_id":"cj6hwvw9g001ajeh8zhpbze5v"},{"name":"linux","_id":"cj6hwvw9g001djeh8qe8ikk9l"},{"name":"oh-my-zsh","_id":"cj6hwvw9g001fjeh8gocpfuor"},{"name":"mysql","_id":"cj6hwvw9h001gjeh8ir8ep3nk"},{"name":"编码","_id":"cj6hwvw9h001jjeh83x946u46"},{"name":"oracle","_id":"cj6hwvw9h001kjeh8rph9ywfh"},{"name":"shadowsocks","_id":"cj6hwvw9j001pjeh8hg5zihy4"},{"name":"java","_id":"cj6hwvw9k001vjeh8vqpcexv5"},{"name":"ssh","_id":"cj6hwvw9k001wjeh8zjq5zstn"},{"name":"git","_id":"cj6hwvw9k001xjeh8cb0i65ar"},{"name":"vim","_id":"cj6hwvw9l001yjeh8ypkxl8e5"},{"name":"kingbase","_id":"cj6hwvw9l0021jeh8znsl455e"},{"name":"Oracle","_id":"cj6hwvw9m0027jeh8lqfp0lux"},{"name":"达梦","_id":"cj6hwvw9m0029jeh85jy1wo92"},{"name":"sqlserver2k","_id":"cj6hwvw9m002ajeh8lbbn79s9"},{"name":"sqlserver2k+","_id":"cj6hwvw9n002bjeh835cnlnf7"},{"name":"DB2","_id":"cj6hwvw9n002cjeh86x0k0qc4"},{"name":"ORA-12519","_id":"cj6hxejgb0000qeh84gw626t5"},{"name":"ORA-01653","_id":"cj6hxejgj0001qeh8fb0j6rag"},{"name":"ORA-06512","_id":"cj6hxejgk0002qeh8pswng6k9"},{"name":"授权","_id":"cj6hxejgk0003qeh8ud291v0y"},{"name":"编码，ORA-12519","_id":"cj6hxjn3l000172h8wsn9zb6y"},{"name":"XX","_id":"cj6hxk7yd000772h8ffmtutcl"},{"name":"SQLCODE=-964","_id":"cj6hxohni0001xlh8t17tgohe"},{"name":"db2cmd","_id":"cj6hxoypy0004xlh8e8cvb6d2"},{"name":"964","_id":"cj6hxpo5w0006xlh8qpecxdgc"},{"name":"te","_id":"cj6hxqvcm0000ffh8zztye3e7"},{"name":"DB21","_id":"cj6hxsh2n0002ffh8p1qpxr2p"},{"name":"乱码","_id":"cj6hxu1930000tfh81t35rklj"},{"name":"日志","_id":"cj6hxznrr00019ph8ir8m6ui2"}]}}